{"version":3,"file":"FeedbackPage-CElU5Cyq.js","sources":["../../src/views/admin/feedback/components/FeedbackFilters.vue","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/compareAsc.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructNow.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarMonths.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getRoundingMethod.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMilliseconds.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfDay.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfMonth.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isLastDayOfMonth.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMonths.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInSeconds.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/formatDistance.js","../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/formatDistanceToNow.js","../../src/views/admin/feedback/components/StatusBadge.vue","../../src/views/admin/feedback/components/FeedbackTable.vue","../../src/views/admin/feedback/components/FeedbackDialog.vue","../../src/views/admin/feedback/FeedbackPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, ref } from 'vue'\r\nimport { Search, Filter, Trash2 } from 'lucide-vue-next'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Button } from '@/components/ui/button'\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog'\r\nimport { useFeedbackStore } from '@/stores/feedback'\r\n\r\nconst store = useFeedbackStore()\r\nconst isConfirmOpen = ref(false)\r\n\r\n// Computed properties to safely access store values\r\nconst filterStatus = computed({\r\n  get: () => store.filterStatus,\r\n  set: (value: string) => store.setFilterStatus(value)\r\n})\r\n\r\nconst searchTerm = computed({\r\n  get: () => store.searchTerm,\r\n  set: (value: string) => store.setSearchTerm(value)\r\n})\r\n\r\nconst isLoading = computed(() => store.isLoading)\r\n\r\nasync function handleClearFeedback() {\r\n  try {\r\n    await store.clearAllFeedback()\r\n    isConfirmOpen.value = false\r\n  } catch (error) {\r\n    console.error('Failed to clear feedback:', error)\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"mb-6 flex flex-col sm:flex-row justify-between items-center gap-4\">\r\n    <div class=\"flex items-center gap-4\">\r\n      <Select v-model=\"filterStatus\">\r\n        <SelectTrigger class=\"w-[180px]\">\r\n          <SelectValue placeholder=\"Filter by status\" />\r\n        </SelectTrigger>\r\n        <SelectContent>\r\n          <SelectItem value=\"all\">All Statuses</SelectItem>\r\n          <SelectItem value=\"pending\">Pending</SelectItem>\r\n          <SelectItem value=\"reviewed\">Under Review</SelectItem>\r\n          <SelectItem value=\"resolved\">Resolved</SelectItem>\r\n        </SelectContent>\r\n      </Select>\r\n      <Filter class=\"h-5 w-5 text-gray-500\" />\r\n      \r\n      <!-- Clear Feedback Button with Dialog -->\r\n      <Button variant=\"destructive\" class=\"gap-2 inline-flex\" @click=\"isConfirmOpen = true\">\r\n        <Trash2 class=\"h-4 w-4\" />\r\n        Clear All\r\n      </Button>\r\n      <Dialog v-model:open=\"isConfirmOpen\">\r\n        <DialogContent class=\"sm:max-w-[425px]\">\r\n          <DialogHeader>\r\n            <DialogTitle>Clear All Feedback</DialogTitle>\r\n            <DialogDescription>\r\n              Are you sure you want to clear all feedback? This action cannot be undone.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" @click=\"isConfirmOpen = false\">\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              variant=\"destructive\" \r\n              :disabled=\"isLoading\" \r\n              @click=\"handleClearFeedback\"\r\n            >\r\n              {{ isLoading ? 'Clearing...' : 'Clear All' }}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n    \r\n    <div class=\"relative\">\r\n      <Input\r\n        v-model=\"searchTerm\"\r\n        type=\"text\"\r\n        placeholder=\"Search feedback...\"\r\n        class=\"pl-10 pr-4 py-2 w-full sm:w-64\"\r\n      />\r\n      <Search class=\"h-5 w-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n    </div>\r\n  </div>\r\n</template>","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { Clock, MessageSquare, CheckCircle } from 'lucide-vue-next'\r\nimport type { FeedbackStatus } from '@/services/feedback'\r\n\r\nconst props = defineProps<{\r\n  status: FeedbackStatus\r\n}>()\r\n\r\nconst displayStatus = computed(() => {\r\n  switch (props.status) {\r\n    case 'pending':\r\n      return 'Pending'\r\n    case 'reviewed':\r\n      return 'Under Review'\r\n    case 'resolved':\r\n      return 'Resolved'\r\n    default:\r\n      return props.status\r\n  }\r\n})\r\n\r\ntype StatusIcon = typeof Clock | typeof MessageSquare | typeof CheckCircle | null\r\n\r\nconst statusIcon = computed<StatusIcon>(() => {\r\n  switch (props.status) {\r\n    case 'pending':\r\n      return Clock\r\n    case 'reviewed':\r\n      return MessageSquare\r\n    case 'resolved':\r\n      return CheckCircle\r\n    default:\r\n      return null\r\n  }\r\n})\r\n\r\nconst statusClass = computed(() => {\r\n  switch (props.status) {\r\n    case 'pending':\r\n      return 'bg-yellow-100 text-yellow-800 border-yellow-300'\r\n    case 'reviewed':\r\n      return 'bg-blue-100 text-blue-800 border-blue-300'\r\n    case 'resolved':\r\n      return 'bg-green-100 text-green-800 border-green-300'\r\n    default:\r\n      return 'bg-gray-100 text-gray-800 border-gray-300'\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <span\r\n    class=\"inline-flex items-center justify-center px-2 py-1 text-xs font-medium rounded-md border\"\r\n    :class=\"statusClass\"\r\n  >\r\n    <component\r\n      :is=\"statusIcon\"\r\n      v-if=\"statusIcon\"\r\n      class=\"h-4 w-4 mr-1\"\r\n    />\r\n    {{ displayStatus }}\r\n  </span>\r\n</template>","<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport { Loader2, MessageSquare, Trash2 } from 'lucide-vue-next'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow\r\n} from '@/components/ui/table'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle\r\n} from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport StatusBadge from './StatusBadge.vue'\r\nimport { useFeedbackStore } from '@/stores/feedback'\r\nimport type { Feedback } from '@/services/feedback'\r\n\r\nconst store = useFeedbackStore()\r\n\r\n// Computed properties to safely access store values\r\nconst filteredItems = computed(() => store.filteredItems)\r\nconst isLoading = computed(() => store.isLoading)\r\nconst error = computed(() => store.error)\r\n\r\nconst openDialog = (item: Feedback) => {\r\n  store.setSelectedItem(item)\r\n}\r\n\r\nconst getFeedbackType = (message: string) => {\r\n  // Type is the first line\r\n  const firstLine = message.split(/\\r?\\n/)[0].toLowerCase()\r\n  return firstLine === 'bug' || firstLine === 'feature' || firstLine === 'support' ? firstLine : 'other'\r\n}\r\n\r\nconst getMessageContent = (message: string) => {\r\n  // Content is everything after the double newline\r\n  const parts = message.split(/\\r?\\n\\r?\\n/)\r\n  return parts.length > 1 ? parts[1].trim() : ''\r\n}\r\n\r\nconst formatDate = (dateString: string) => {\r\n  return formatDistanceToNow(new Date(dateString), { addSuffix: true })\r\n}\r\n\r\nconst handleDelete = async (id: number) => {\r\n  try {\r\n    console.log('FeedbackTable: Attempting to delete feedback:', id)\r\n    await store.deleteFeedback(id)\r\n    console.log('FeedbackTable: Successfully deleted feedback:', id)\r\n  } catch (err) {\r\n    console.error('FeedbackTable: Error deleting feedback:', err)\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle>Feedback Items</CardTitle>\r\n    </CardHeader>\r\n    <CardContent>\r\n      <div v-if=\"isLoading\" class=\"flex justify-center items-center py-8\">\r\n        <Loader2 class=\"h-8 w-8 animate-spin text-green-600\" />\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"text-center py-8 text-red-600\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-else-if=\"!filteredItems.length\" class=\"text-center py-8 text-gray-500\">\r\n        No feedback items found.\r\n      </div>\r\n\r\n      <Table v-else>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>User</TableHead>\r\n            <TableHead>Type</TableHead>\r\n            <TableHead>Message</TableHead>\r\n            <TableHead>Date</TableHead>\r\n            <TableHead>Status</TableHead>\r\n            <TableHead>Replies</TableHead>\r\n            <TableHead>Actions</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          <TableRow v-for=\"item in filteredItems\" :key=\"item.id\">\r\n            <TableCell>{{ item.user }}</TableCell>\r\n            <TableCell>{{ getFeedbackType(item.message) }}</TableCell>\r\n            <TableCell class=\"max-w-md\">\r\n              <p class=\"truncate\">{{ getMessageContent(item.message) }}</p>\r\n            </TableCell>\r\n            <TableCell>{{ formatDate(item.created_at) }}</TableCell>\r\n            <TableCell>\r\n              <StatusBadge :status=\"item.status\" />\r\n            </TableCell>\r\n            <TableCell>\r\n              <div class=\"flex items-center gap-1 text-gray-600\">\r\n                <MessageSquare class=\"h-4 w-4\" />\r\n                <span>{{ item.replies.length }}</span>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell>\r\n              <div class=\"flex items-center gap-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  class=\"inline-flex items-center justify-center px-3 py-1 text-xs font-medium text-gray-600 bg-gray-50 hover:bg-gray-100 rounded-md border border-gray-200 whitespace-nowrap\"\r\n                  @click=\"openDialog(item)\"\r\n                >\r\n                  View Details\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  class=\"inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-red-600 bg-red-50 hover:bg-red-100 rounded-md border border-red-200\"\r\n                  @click=\"handleDelete(item.id)\"\r\n                >\r\n                  <Trash2 class=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </CardContent>\r\n  </Card>\r\n</template>","<script setup lang=\"ts\">\r\nimport { ref, computed, watch, nextTick } from 'vue'\r\nimport { Loader2 } from 'lucide-vue-next'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Label } from '@/components/ui/label'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog'\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select'\r\nimport { useFeedback } from '@/views/dashboard/feedback/composables/useFeedback'\r\nimport type { FeedbackStatus } from '@/services/feedback'\r\n\r\nconst store = useFeedback()\r\nconst messagesContainer = ref<HTMLElement | null>(null)\r\n\r\n// Computed properties to safely access store values\r\nconst selectedItem = computed(() => store.selectedItem.value)\r\nconst isLoading = computed(() => store.isLoading.value)\r\n\r\n// Local state\r\nconst currentStatus = ref<FeedbackStatus>('pending')\r\nconst replyMessage = ref('')\r\nconst isSubmittingReply = ref(false)\r\n\r\nconst isOpen = computed({\r\n  get: () => !!selectedItem.value,\r\n  set: (value: boolean) => {\r\n    if (!value) {\r\n      close()\r\n    }\r\n  }\r\n})\r\n\r\nconst scrollToBottom = async () => {\r\n  await nextTick()\r\n  if (messagesContainer.value) {\r\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\r\n  }\r\n}\r\n\r\nwatch(selectedItem, (newItem) => {\r\n  if (newItem) {\r\n    currentStatus.value = newItem.status\r\n    replyMessage.value = '' // Reset reply message when opening new item\r\n    scrollToBottom() // Scroll to bottom when opening new item\r\n  }\r\n})\r\n\r\n// Watch for new replies and scroll to bottom\r\nwatch(() => selectedItem.value?.replies, () => {\r\n  scrollToBottom()\r\n}, { deep: true })\r\n\r\nconst getFeedbackType = (message: string) => {\r\n  // Type is the first line\r\n  const firstLine = message.split(/\\r?\\n/)[0].toLowerCase()\r\n  return firstLine === 'bug' || firstLine === 'feature' || firstLine === 'support' ? firstLine : 'other'\r\n}\r\n\r\nconst getMessageContent = (message: string) => {\r\n  // Content is everything after the double newline\r\n  const parts = message.split(/\\r?\\n\\r?\\n/)\r\n  return parts.length > 1 ? parts[1].trim() : ''\r\n}\r\n\r\nconst formatDate = (dateString: string) => {\r\n  const date = new Date(dateString)\r\n  const now = new Date()\r\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000)\r\n  \r\n  if (diffInSeconds < 60) {\r\n    return 'just now'\r\n  }\r\n  \r\n  const diffInMinutes = Math.floor(diffInSeconds / 60)\r\n  if (diffInMinutes < 60) {\r\n    return `${diffInMinutes} minute${diffInMinutes === 1 ? '' : 's'} ago`\r\n  }\r\n  \r\n  const diffInHours = Math.floor(diffInMinutes / 60)\r\n  if (diffInHours < 24) {\r\n    return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`\r\n  }\r\n  \r\n  const diffInDays = Math.floor(diffInHours / 24)\r\n  if (diffInDays < 30) {\r\n    return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`\r\n  }\r\n  \r\n  const diffInMonths = Math.floor(diffInDays / 30)\r\n  if (diffInMonths < 12) {\r\n    return `${diffInMonths} month${diffInMonths === 1 ? '' : 's'} ago`\r\n  }\r\n  \r\n  const diffInYears = Math.floor(diffInDays / 365)\r\n  return `${diffInYears} year${diffInYears === 1 ? '' : 's'} ago`\r\n}\r\n\r\nconst close = () => {\r\n  store.setSelectedItem(null)\r\n  replyMessage.value = ''\r\n}\r\n\r\nconst save = async () => {\r\n  if (selectedItem.value && currentStatus.value !== selectedItem.value.status) {\r\n    await store.updateStatus(selectedItem.value.id, currentStatus.value)\r\n  }\r\n}\r\n\r\nconst submitReply = async () => {\r\n  if (!selectedItem.value || !replyMessage.value.trim()) return\r\n\r\n  isSubmittingReply.value = true\r\n  try {\r\n    await store.createReply(selectedItem.value.id, replyMessage.value)\r\n    replyMessage.value = '' // Clear the reply input on success\r\n  } catch (error) {\r\n    console.error('Failed to submit reply:', error)\r\n  } finally {\r\n    isSubmittingReply.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <Dialog v-model:open=\"isOpen\">\r\n    <DialogContent class=\"sm:max-w-[600px] bg-white\">\r\n      <DialogHeader class=\"border-b border-gray-100 pb-4\">\r\n        <DialogTitle class=\"text-xl text-green-800\">Feedback Details</DialogTitle>\r\n        <DialogDescription class=\"text-gray-500\">\r\n          View and update the status of this feedback item.\r\n        </DialogDescription>\r\n      </DialogHeader>\r\n      \r\n      <div v-if=\"selectedItem\" class=\"py-6 space-y-6\">\r\n        <!-- Original Feedback -->\r\n        <div class=\"space-y-4\">\r\n          <div class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">User</Label>\r\n            <div class=\"col-span-3 text-gray-900\">{{ selectedItem.user }}</div>\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">Type</Label>\r\n            <div class=\"col-span-3 text-gray-900\">{{ getFeedbackType(selectedItem.message) }}</div>\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">Message</Label>\r\n            <div class=\"col-span-3 text-gray-900\">{{ getMessageContent(selectedItem.message) }}</div>\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">Date</Label>\r\n            <div class=\"col-span-3 text-gray-900\">{{ formatDate(selectedItem.created_at) }}</div>\r\n          </div>\r\n          <div v-if=\"selectedItem.attachment\" class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">Attachment</Label>\r\n            <div class=\"col-span-3\">\r\n              <a \r\n                :href=\"selectedItem.attachment\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                class=\"text-blue-600 hover:text-blue-800\"\r\n              >\r\n                View Attachment\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div class=\"grid grid-cols-4 items-start gap-4\">\r\n            <Label class=\"text-right text-sm font-medium text-gray-600\">Status</Label>\r\n            <div class=\"col-span-3\">\r\n              <Select v-model=\"currentStatus\">\r\n                <SelectTrigger class=\"w-[180px]\">\r\n                  <SelectValue placeholder=\"Select status\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"pending\">Pending</SelectItem>\r\n                  <SelectItem value=\"reviewed\">Under Review</SelectItem>\r\n                  <SelectItem value=\"resolved\">Resolved</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Conversation Thread -->\r\n        <div class=\"border-t border-gray-100 pt-6 flex flex-col\" style=\"height: 60vh\">\r\n          <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Conversation</h3>\r\n          \r\n          <!-- Scrollable Messages Container -->\r\n          <div class=\"flex-1 overflow-y-auto mb-4\" ref=\"messagesContainer\">\r\n            <!-- Empty State -->\r\n            <div v-if=\"!selectedItem.replies.length\" class=\"text-center py-4 text-gray-500\">\r\n              No replies yet. Start the conversation by sending a message.\r\n            </div>\r\n            \r\n            <!-- Replies List -->\r\n            <div v-else class=\"space-y-4 px-1\">\r\n              <div \r\n                v-for=\"reply in selectedItem.replies\" \r\n                :key=\"reply.id\"\r\n                class=\"p-4 rounded-lg\"\r\n                :class=\"[\r\n                  reply.is_admin \r\n                    ? 'bg-green-50 border border-green-100' \r\n                    : 'bg-gray-50 border border-gray-100'\r\n                ]\"\r\n              >\r\n                <div class=\"flex justify-between items-start mb-2\">\r\n                  <span \r\n                    class=\"font-medium\"\r\n                    :class=\"[\r\n                      reply.is_admin ? 'text-green-700' : 'text-gray-700'\r\n                    ]\"\r\n                  >\r\n                    {{ reply.user }}\r\n                    <span v-if=\"reply.is_admin\" class=\"text-xs ml-2 text-green-600\">(Admin)</span>\r\n                  </span>\r\n                  <span class=\"text-sm text-gray-500\">\r\n                    {{ formatDate(reply.created_at) }}\r\n                  </span>\r\n                </div>\r\n                <p class=\"text-gray-700\">{{ reply.message }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Reply Form - Fixed at Bottom -->\r\n          <div class=\"border-t border-gray-100 pt-4 bg-white\">\r\n            <Textarea\r\n              v-model=\"replyMessage\"\r\n              placeholder=\"Type your reply...\"\r\n              class=\"w-full min-h-[100px] resize-none\"\r\n            />\r\n            <div class=\"flex justify-end\">\r\n              <Button\r\n                type=\"button\"\r\n                class=\"bg-green-600 hover:bg-green-700 text-white\"\r\n                :disabled=\"!replyMessage.trim() || isSubmittingReply\"\r\n                @click=\"submitReply\"\r\n              >\r\n                <template v-if=\"isSubmittingReply\">\r\n                  <Loader2 class=\"mr-2 h-4 w-4 animate-spin\" />\r\n                  Sending...\r\n                </template>\r\n                <template v-else>\r\n                  Send Reply\r\n                </template>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex justify-end space-x-4 pt-6 border-t border-gray-100\">\r\n        <Button\r\n          variant=\"outline\"\r\n          @click=\"close\"\r\n        >\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"default\"\r\n          class=\"bg-green-600 hover:bg-green-700 text-white\"\r\n          @click=\"save\"\r\n          :disabled=\"!selectedItem || isLoading || currentStatus === selectedItem?.status\"\r\n        >\r\n          <template v-if=\"isLoading\">\r\n            <Loader2 class=\"mr-2 h-4 w-4 animate-spin\" />\r\n            Saving...\r\n          </template>\r\n          <template v-else>\r\n            Update Status\r\n          </template>\r\n        </Button>\r\n      </div>\r\n    </DialogContent>\r\n  </Dialog>\r\n</template>","<script setup lang=\"ts\">\r\nimport { onMounted, onUnmounted } from 'vue'\r\nimport { useFeedbackStore } from '@/stores/feedback'\r\nimport { websocketService } from '@/services/websocket'\r\nimport FeedbackFilters from './components/FeedbackFilters.vue'\r\nimport FeedbackTable from './components/FeedbackTable.vue'\r\nimport FeedbackDialog from './components/FeedbackDialog.vue'\r\n\r\nconst store = useFeedbackStore()\r\n\r\nonMounted(async () => {\r\n  try {\r\n    // Initialize feedback with WebSocket for admin\r\n    await store.initializeFeedback(true)\r\n  } catch (err) {\r\n    console.error('Failed to initialize admin feedback page:', err)\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  // Clean up WebSocket connection\r\n  websocketService.disconnect()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex-1 p-6\">\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <!-- Welcome Section -->\r\n      <div class=\"mb-8 bg-white rounded-lg shadow-sm p-6\">\r\n        <div class=\"flex flex-col md:flex-row items-center gap-6\">\r\n          <div class=\"flex-1\">\r\n            <h1 class=\"text-xl md:text-2xl font-medium text-green-800 mb-2\">\r\n              Feedback Management\r\n            </h1>\r\n            <p class=\"text-gray-600 text-lg\">\r\n              Review and manage user feedback, bug reports, and feature requests. Update statuses and track feedback trends to improve the user experience.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Filters Section -->\r\n      <div class=\"mb-8 bg-white rounded-lg shadow-sm\">\r\n        <div class=\"p-6\">\r\n          <h2 class=\"text-xl font-semibold text-green-800 mb-4\">Filters</h2>\r\n          <FeedbackFilters />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Table Section -->\r\n      <div class=\"bg-white rounded-lg shadow-sm\">\r\n        <div class=\"overflow-hidden\">\r\n          <FeedbackTable />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Dialog -->\r\n      <FeedbackDialog />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<route lang=\"json\">\r\n{\r\n  \"name\": \"admin-feedback\",\r\n  \"path\": \"/admin/feedback\"\r\n}\r\n</route>"],"names":["store","useFeedbackStore","isConfirmOpen","ref","filterStatus","computed","value","searchTerm","isLoading","handleClearFeedback","error","minutesInMonth","minutesInDay","constructFromSymbol","constructFrom","date","toDate","argument","context","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","_date","utcDate","normalizeDates","dates","normalize","compareAsc","dateLeft","dateRight","diff","constructNow","differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","yearsDiff","monthsDiff","getRoundingMethod","method","number","result","differenceInMilliseconds","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","difference","isLastMonthNotFull","differenceInSeconds","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","minutes","months","hours","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","props","__props","displayStatus","statusIcon","Clock","MessageSquare","CheckCircle","statusClass","filteredItems","openDialog","item","getFeedbackType","message","firstLine","getMessageContent","parts","formatDate","dateString","handleDelete","id","err","useFeedback","messagesContainer","selectedItem","currentStatus","replyMessage","isSubmittingReply","isOpen","close","scrollToBottom","nextTick","watch","newItem","_a","diffInSeconds","diffInMinutes","diffInHours","diffInDays","diffInMonths","diffInYears","save","submitReply","onMounted","onUnmounted","websocketService"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}