{"version":3,"file":"ChatPage-CrYh4CPu.js","sources":["../../node_modules/.pnpm/echarts@5.5.1/node_modules/echarts/lib/chart/gauge/PointerPath.js","../../node_modules/.pnpm/echarts@5.5.1/node_modules/echarts/lib/chart/gauge/GaugeView.js","../../node_modules/.pnpm/echarts@5.5.1/node_modules/echarts/lib/chart/gauge/GaugeSeries.js","../../node_modules/.pnpm/echarts@5.5.1/node_modules/echarts/lib/chart/gauge/install.js","../../src/views/dashboard/chat/components/KeywordChart.vue","../../src/views/dashboard/chat/components/SentimentIndicator.vue","../../src/views/dashboard/chat/composables/useChat.ts","../../src/assets/images/illustrations/teamwork.png","../../src/views/dashboard/chat/ChatPage.vue"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path.js';\nvar PointerShape = /** @class */function () {\n  function PointerShape() {\n    this.angle = 0;\n    this.width = 10;\n    this.r = 10;\n    this.x = 0;\n    this.y = 0;\n  }\n  return PointerShape;\n}();\nvar PointerPath = /** @class */function (_super) {\n  __extends(PointerPath, _super);\n  function PointerPath(opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.type = 'pointer';\n    return _this;\n  }\n  PointerPath.prototype.getDefaultShape = function () {\n    return new PointerShape();\n  };\n  PointerPath.prototype.buildPath = function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n  };\n  return PointerPath;\n}(Path);\nexport default PointerPath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport PointerPath from './PointerPath.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { createTextStyle, setLabelValueAnimation, animateLabelValue } from '../../label/labelStyle.js';\nimport ChartView from '../../view/Chart.js';\nimport { parsePercent, round, linearMap } from '../../util/number.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport { extend, isFunction, isString, isNumber, each } from 'zrender/lib/core/util.js';\nimport { setCommonECData } from '../../util/innerStore.js';\nimport { normalizeArcAngles } from 'zrender/lib/core/PathProxy.js';\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\nfunction formatLabel(value, labelFormatter) {\n  var label = value == null ? '' : value + '';\n  if (labelFormatter) {\n    if (isString(labelFormatter)) {\n      label = labelFormatter.replace('{value}', label);\n    } else if (isFunction(labelFormatter)) {\n      label = labelFormatter(value);\n    }\n  }\n  return label;\n}\nvar GaugeView = /** @class */function (_super) {\n  __extends(GaugeView, _super);\n  function GaugeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GaugeView.type;\n    return _this;\n  }\n  GaugeView.prototype.render = function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get(['axisLine', 'lineStyle', 'color']);\n    var posInfo = parsePosition(seriesModel, api);\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n    this._data = seriesModel.getData();\n  };\n  GaugeView.prototype.dispose = function () {};\n  GaugeView.prototype._renderMain = function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var roundCap = axisLineModel.get('roundCap');\n    var MainPath = roundCap ? Sausage : graphic.Sector;\n    var showAxis = axisLineModel.get('show');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var axisLineWidth = lineStyleModel.get('width');\n    var angles = [startAngle, endAngle];\n    normalizeArcAngles(angles, !clockwise);\n    startAngle = angles[0];\n    endAngle = angles[1];\n    var angleRangeSpan = endAngle - startAngle;\n    var prevEndAngle = startAngle;\n    var sectors = [];\n    for (var i = 0; showAxis && i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new MainPath({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle(\n      // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'width']));\n      sectors.push(sector);\n      prevEndAngle = endAngle;\n    }\n    sectors.reverse();\n    each(sectors, function (sector) {\n      return group.add(sector);\n    });\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n      var i;\n      for (i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      }\n      // More than 1\n      return colorList[i - 1][1];\n    };\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n    this._renderTitleAndDetail(seriesModel, ecModel, api, getColor, posInfo);\n    this._renderAnchor(seriesModel, posInfo);\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n  };\n  GaugeView.prototype._renderTicks = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n    var splitLineDistance = splitLineModel.get('distance');\n    var unitX;\n    var unitY;\n    for (var i = 0; i <= splitNumber; i++) {\n      unitX = Math.cos(angle);\n      unitY = Math.sin(angle);\n      // Split line\n      if (splitLineModel.get('show')) {\n        var distance = splitLineDistance ? splitLineDistance + axisLineWidth : axisLineWidth;\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * (r - distance) + cx,\n            y1: unitY * (r - distance) + cy,\n            x2: unitX * (r - splitLineLen - distance) + cx,\n            y2: unitY * (r - splitLineLen - distance) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n        group.add(splitLine);\n      }\n      // Label\n      if (labelModel.get('show')) {\n        var distance = labelModel.get('distance') + splitLineDistance;\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var autoColor = getColor(i / splitNumber);\n        var textStyleX = unitX * (r - splitLineLen - distance) + cx;\n        var textStyleY = unitY * (r - splitLineLen - distance) + cy;\n        var rotateType = labelModel.get('rotate');\n        var rotate = 0;\n        if (rotateType === 'radial') {\n          rotate = -angle + 2 * Math.PI;\n          if (rotate > Math.PI / 2) {\n            rotate += Math.PI;\n          }\n        } else if (rotateType === 'tangential') {\n          rotate = -angle - Math.PI / 2;\n        } else if (isNumber(rotateType)) {\n          rotate = rotateType * Math.PI / 180;\n        }\n        if (rotate === 0) {\n          group.add(new graphic.Text({\n            style: createTextStyle(labelModel, {\n              text: label,\n              x: textStyleX,\n              y: textStyleY,\n              verticalAlign: unitY < -0.8 ? 'top' : unitY > 0.8 ? 'bottom' : 'middle',\n              align: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n            }, {\n              inheritColor: autoColor\n            }),\n            silent: true\n          }));\n        } else {\n          group.add(new graphic.Text({\n            style: createTextStyle(labelModel, {\n              text: label,\n              x: textStyleX,\n              y: textStyleY,\n              verticalAlign: 'middle',\n              align: 'center'\n            }, {\n              inheritColor: autoColor\n            }),\n            silent: true,\n            originX: textStyleX,\n            originY: textStyleY,\n            rotation: rotate\n          }));\n        }\n      }\n      // Axis tick\n      if (tickModel.get('show') && i !== splitNumber) {\n        var distance = tickModel.get('distance');\n        distance = distance ? distance + axisLineWidth : axisLineWidth;\n        for (var j = 0; j <= subSplitNumber; j++) {\n          unitX = Math.cos(angle);\n          unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * (r - distance) + cx,\n              y1: unitY * (r - distance) + cy,\n              x2: unitX * (r - tickLen - distance) + cx,\n              y2: unitY * (r - tickLen - distance) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n          group.add(tickLine);\n          angle += subStep;\n        }\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  };\n  GaugeView.prototype._renderPointer = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var oldData = this._data;\n    var oldProgressData = this._progressEls;\n    var progressList = [];\n    var showPointer = seriesModel.get(['pointer', 'show']);\n    var progressModel = seriesModel.getModel('progress');\n    var showProgress = progressModel.get('show');\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var valueExtent = [minVal, maxVal];\n    var angleExtent = [startAngle, endAngle];\n    function createPointer(idx, angle) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      var pointerWidth = parsePercent(pointerModel.get('width'), posInfo.r);\n      var pointerLength = parsePercent(pointerModel.get('length'), posInfo.r);\n      var pointerStr = seriesModel.get(['pointer', 'icon']);\n      var pointerOffset = pointerModel.get('offsetCenter');\n      var pointerOffsetX = parsePercent(pointerOffset[0], posInfo.r);\n      var pointerOffsetY = parsePercent(pointerOffset[1], posInfo.r);\n      var pointerKeepAspect = pointerModel.get('keepAspect');\n      var pointer;\n      // not exist icon type will be set 'rect'\n      if (pointerStr) {\n        pointer = createSymbol(pointerStr, pointerOffsetX - pointerWidth / 2, pointerOffsetY - pointerLength, pointerWidth, pointerLength, null, pointerKeepAspect);\n      } else {\n        pointer = new PointerPath({\n          shape: {\n            angle: -Math.PI / 2,\n            width: pointerWidth,\n            r: pointerLength,\n            x: pointerOffsetX,\n            y: pointerOffsetY\n          }\n        });\n      }\n      pointer.rotation = -(angle + Math.PI / 2);\n      pointer.x = posInfo.cx;\n      pointer.y = posInfo.cy;\n      return pointer;\n    }\n    function createProgress(idx, endAngle) {\n      var roundCap = progressModel.get('roundCap');\n      var ProgressPath = roundCap ? Sausage : graphic.Sector;\n      var isOverlap = progressModel.get('overlap');\n      var progressWidth = isOverlap ? progressModel.get('width') : axisLineWidth / data.count();\n      var r0 = isOverlap ? posInfo.r - progressWidth : posInfo.r - (idx + 1) * progressWidth;\n      var r = isOverlap ? posInfo.r : posInfo.r - idx * progressWidth;\n      var progress = new ProgressPath({\n        shape: {\n          startAngle: startAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: r0,\n          r: r\n        }\n      });\n      isOverlap && (progress.z2 = maxVal - data.get(valueDim, idx) % maxVal);\n      return progress;\n    }\n    if (showProgress || showPointer) {\n      data.diff(oldData).add(function (idx) {\n        var val = data.get(valueDim, idx);\n        if (showPointer) {\n          var pointer = createPointer(idx, startAngle);\n          // TODO hide pointer on NaN value?\n          graphic.initProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : linearMap(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(idx, pointer);\n        }\n        if (showProgress) {\n          var progress = createProgress(idx, startAngle);\n          var isClip = progressModel.get('clip');\n          graphic.initProps(progress, {\n            shape: {\n              endAngle: linearMap(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress);\n          // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n          setCommonECData(seriesModel.seriesIndex, data.dataType, idx, progress);\n          progressList[idx] = progress;\n        }\n      }).update(function (newIdx, oldIdx) {\n        var val = data.get(valueDim, newIdx);\n        if (showPointer) {\n          var previousPointer = oldData.getItemGraphicEl(oldIdx);\n          var previousRotate = previousPointer ? previousPointer.rotation : startAngle;\n          var pointer = createPointer(newIdx, previousRotate);\n          pointer.rotation = previousRotate;\n          graphic.updateProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : linearMap(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(newIdx, pointer);\n        }\n        if (showProgress) {\n          var previousProgress = oldProgressData[oldIdx];\n          var previousEndAngle = previousProgress ? previousProgress.shape.endAngle : startAngle;\n          var progress = createProgress(newIdx, previousEndAngle);\n          var isClip = progressModel.get('clip');\n          graphic.updateProps(progress, {\n            shape: {\n              endAngle: linearMap(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress);\n          // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n          setCommonECData(seriesModel.seriesIndex, data.dataType, newIdx, progress);\n          progressList[newIdx] = progress;\n        }\n      }).execute();\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var emphasisModel = itemModel.getModel('emphasis');\n        var focus = emphasisModel.get('focus');\n        var blurScope = emphasisModel.get('blurScope');\n        var emphasisDisabled = emphasisModel.get('disabled');\n        if (showPointer) {\n          var pointer = data.getItemGraphicEl(idx);\n          var symbolStyle = data.getItemVisual(idx, 'style');\n          var visualColor = symbolStyle.fill;\n          if (pointer instanceof ZRImage) {\n            var pathStyle = pointer.style;\n            pointer.useStyle(extend({\n              image: pathStyle.image,\n              x: pathStyle.x,\n              y: pathStyle.y,\n              width: pathStyle.width,\n              height: pathStyle.height\n            }, symbolStyle));\n          } else {\n            pointer.useStyle(symbolStyle);\n            pointer.type !== 'pointer' && pointer.setColor(visualColor);\n          }\n          pointer.setStyle(itemModel.getModel(['pointer', 'itemStyle']).getItemStyle());\n          if (pointer.style.fill === 'auto') {\n            pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n          }\n          pointer.z2EmphasisLift = 0;\n          setStatesStylesFromModel(pointer, itemModel);\n          toggleHoverEmphasis(pointer, focus, blurScope, emphasisDisabled);\n        }\n        if (showProgress) {\n          var progress = progressList[idx];\n          progress.useStyle(data.getItemVisual(idx, 'style'));\n          progress.setStyle(itemModel.getModel(['progress', 'itemStyle']).getItemStyle());\n          progress.z2EmphasisLift = 0;\n          setStatesStylesFromModel(progress, itemModel);\n          toggleHoverEmphasis(progress, focus, blurScope, emphasisDisabled);\n        }\n      });\n      this._progressEls = progressList;\n    }\n  };\n  GaugeView.prototype._renderAnchor = function (seriesModel, posInfo) {\n    var anchorModel = seriesModel.getModel('anchor');\n    var showAnchor = anchorModel.get('show');\n    if (showAnchor) {\n      var anchorSize = anchorModel.get('size');\n      var anchorType = anchorModel.get('icon');\n      var offsetCenter = anchorModel.get('offsetCenter');\n      var anchorKeepAspect = anchorModel.get('keepAspect');\n      var anchor = createSymbol(anchorType, posInfo.cx - anchorSize / 2 + parsePercent(offsetCenter[0], posInfo.r), posInfo.cy - anchorSize / 2 + parsePercent(offsetCenter[1], posInfo.r), anchorSize, anchorSize, null, anchorKeepAspect);\n      anchor.z2 = anchorModel.get('showAbove') ? 1 : 0;\n      anchor.setStyle(anchorModel.getModel('itemStyle').getItemStyle());\n      this.group.add(anchor);\n    }\n  };\n  GaugeView.prototype._renderTitleAndDetail = function (seriesModel, ecModel, api, getColor, posInfo) {\n    var _this = this;\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var contentGroup = new graphic.Group();\n    var newTitleEls = [];\n    var newDetailEls = [];\n    var hasAnimation = seriesModel.isAnimationEnabled();\n    var showPointerAbove = seriesModel.get(['pointer', 'showAbove']);\n    data.diff(this._data).add(function (idx) {\n      newTitleEls[idx] = new graphic.Text({\n        silent: true\n      });\n      newDetailEls[idx] = new graphic.Text({\n        silent: true\n      });\n    }).update(function (idx, oldIdx) {\n      newTitleEls[idx] = _this._titleEls[oldIdx];\n      newDetailEls[idx] = _this._detailEls[oldIdx];\n    }).execute();\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var value = data.get(valueDim, idx);\n      var itemGroup = new graphic.Group();\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      var itemTitleModel = itemModel.getModel('title');\n      if (itemTitleModel.get('show')) {\n        var titleOffsetCenter = itemTitleModel.get('offsetCenter');\n        var titleX = posInfo.cx + parsePercent(titleOffsetCenter[0], posInfo.r);\n        var titleY = posInfo.cy + parsePercent(titleOffsetCenter[1], posInfo.r);\n        var labelEl = newTitleEls[idx];\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemTitleModel, {\n            x: titleX,\n            y: titleY,\n            text: data.getName(idx),\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: autoColor\n          })\n        });\n        itemGroup.add(labelEl);\n      }\n      var itemDetailModel = itemModel.getModel('detail');\n      if (itemDetailModel.get('show')) {\n        var detailOffsetCenter = itemDetailModel.get('offsetCenter');\n        var detailX = posInfo.cx + parsePercent(detailOffsetCenter[0], posInfo.r);\n        var detailY = posInfo.cy + parsePercent(detailOffsetCenter[1], posInfo.r);\n        var width = parsePercent(itemDetailModel.get('width'), posInfo.r);\n        var height = parsePercent(itemDetailModel.get('height'), posInfo.r);\n        var detailColor = seriesModel.get(['progress', 'show']) ? data.getItemVisual(idx, 'style').fill : autoColor;\n        var labelEl = newDetailEls[idx];\n        var formatter_1 = itemDetailModel.get('formatter');\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemDetailModel, {\n            x: detailX,\n            y: detailY,\n            text: formatLabel(value, formatter_1),\n            width: isNaN(width) ? null : width,\n            height: isNaN(height) ? null : height,\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: detailColor\n          })\n        });\n        setLabelValueAnimation(labelEl, {\n          normal: itemDetailModel\n        }, value, function (value) {\n          return formatLabel(value, formatter_1);\n        });\n        hasAnimation && animateLabelValue(labelEl, idx, data, seriesModel, {\n          getFormattedLabel: function (labelDataIndex, status, dataType, labelDimIndex, fmt, extendParams) {\n            return formatLabel(extendParams ? extendParams.interpolatedValue : value, formatter_1);\n          }\n        });\n        itemGroup.add(labelEl);\n      }\n      contentGroup.add(itemGroup);\n    });\n    this.group.add(contentGroup);\n    this._titleEls = newTitleEls;\n    this._detailEls = newDetailEls;\n  };\n  GaugeView.type = 'gauge';\n  return GaugeView;\n}(ChartView);\nexport default GaugeView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply.js';\nimport SeriesModel from '../../model/Series.js';\nvar GaugeSeriesModel = /** @class */function (_super) {\n  __extends(GaugeSeriesModel, _super);\n  function GaugeSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GaugeSeriesModel.type;\n    _this.visualStyleAccessPath = 'itemStyle';\n    return _this;\n  }\n  GaugeSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesDataSimply(this, ['value']);\n  };\n  GaugeSeriesModel.type = 'series.gauge';\n  GaugeSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    colorBy: 'data',\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      roundCap: false,\n      lineStyle: {\n        color: [[1, '#E6EBF8']],\n        width: 10\n      }\n    },\n    // 坐标轴线\n    progress: {\n      // 默认显示，属性show控制显示与否\n      show: false,\n      overlap: true,\n      width: 10,\n      roundCap: false,\n      clip: true\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 10,\n      distance: 10,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#63677A',\n        width: 3,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 6,\n      distance: 10,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#63677A',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 15,\n      // formatter: null,\n      color: '#464646',\n      fontSize: 12,\n      rotate: 0\n    },\n    pointer: {\n      icon: null,\n      offsetCenter: [0, 0],\n      show: true,\n      showAbove: true,\n      length: '60%',\n      width: 6,\n      keepAspect: false\n    },\n    anchor: {\n      show: false,\n      showAbove: false,\n      size: 6,\n      icon: 'circle',\n      offsetCenter: [0, 0],\n      keepAspect: false,\n      itemStyle: {\n        color: '#fff',\n        borderWidth: 0,\n        borderColor: '#5470c6'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '20%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#464646',\n      fontSize: 16,\n      valueAnimation: false\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#464646',\n      fontSize: 30,\n      fontWeight: 'bold',\n      lineHeight: 30,\n      valueAnimation: false\n    }\n  };\n  return GaugeSeriesModel;\n}(SeriesModel);\nexport default GaugeSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport GaugeView from './GaugeView.js';\nimport GaugeSeriesModel from './GaugeSeries.js';\nexport function install(registers) {\n  registers.registerChartView(GaugeView);\n  registers.registerSeriesModel(GaugeSeriesModel);\n}","<script setup lang=\"ts\">\r\nimport { onMounted, onBeforeUnmount, ref, watch } from 'vue'\r\nimport VChart from 'vue-echarts'\r\nimport { use } from 'echarts/core'\r\nimport { BarChart, PieChart, GaugeChart } from 'echarts/charts'\r\nimport { \r\n  GridComponent,\r\n  TooltipComponent,\r\n  TitleComponent,\r\n  LegendComponent\r\n} from 'echarts/components'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\n\r\n// Register necessary ECharts components\r\nuse([\r\n  CanvasRenderer,\r\n  BarChart,\r\n  PieChart,\r\n  GaugeChart,\r\n  GridComponent,\r\n  TooltipComponent,\r\n  TitleComponent,\r\n  LegendComponent\r\n])\r\n\r\ninterface KeywordData {\r\n  keyword: string\r\n  mentions?: number\r\n  sentiment?: number\r\n}\r\n\r\ninterface GaugeData {\r\n  value: number\r\n  max: number\r\n}\r\n\r\ninterface Props {\r\n  messageId: string | number\r\n  data: KeywordData[] | GaugeData[]\r\n  type: 'bar_chart' | 'pie_chart' | 'gauge_chart'\r\n  config?: {\r\n    xAxis?: string\r\n    yAxis?: string\r\n    title?: string\r\n    min?: number\r\n    max?: number\r\n  }\r\n}\r\n\r\nconst props = defineProps<Props>()\r\nconsole.log('KeywordChart received props:', {\r\n  messageId: props.messageId,\r\n  data: props.data,\r\n  type: props.type,\r\n  config: props.config\r\n})\r\nconst emit = defineEmits(['loaded'])\r\n\r\nconst chartInstance = ref<any>(null)\r\n\r\nconst getBarChartOptions = () => {\r\n  console.log('getBarChartOptions called with data:', props.data);\r\n  \r\n  const isSentimentComparison = props.config?.title?.includes('Sentiment Distribution') && !props.config?.title?.includes('Negative Sentiment Distribution')\r\n  const isForumDistribution = props.config?.title?.includes('mentions for my brand') || props.config?.title?.includes('Negative Sentiment Distribution by Platform')\r\n  \r\n  console.log('Chart type flags:', {\r\n    isSentimentComparison,\r\n    isForumDistribution\r\n  });\r\n  \r\n  return {\r\n    grid: {\r\n      left: '5%',\r\n      right: '4%',\r\n      bottom: '10%',\r\n      top: '8%',\r\n      containLabel: true\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'shadow'\r\n      },\r\n      formatter: (params: any) => {\r\n        const data = params[0]\r\n        if (isForumDistribution) {\r\n          return `${data.name}<br/>${data.value} mentions`\r\n        }\r\n        if (isSentimentComparison) {\r\n          const item = (props.data as KeywordData[]).find(d => d.keyword === data.name)\r\n          return `${data.name}<br/>` +\r\n                 `Sentiment: ${data.value.toFixed(2)}<br/>` +\r\n                 `Mentions: ${item?.mentions || 0}`\r\n        }\r\n        return `${data.name}: ${data.value} mentions`\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: (props.data as KeywordData[]).map(item => item.keyword),\r\n      name: props.config?.xAxis || '',\r\n      axisLabel: {\r\n        interval: 0,\r\n        rotate: isForumDistribution ? 45 : 30,\r\n        fontSize: 11,\r\n        margin: 15,\r\n        hideOverlap: false,\r\n        formatter: (value: string) => value.replace(/\\s+/g, ' ').trim()\r\n      },\r\n      axisTick: {\r\n        alignWithLabel: true,\r\n        show: true\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: props.config?.yAxis || 'Number of Mentions',\r\n      nameLocation: 'middle',\r\n      nameGap: 40,\r\n      min: 0,\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: '#f3f4f6'\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        data: (() => {\r\n          const seriesData = (props.data as KeywordData[]).map(item => {\r\n            if (isSentimentComparison) {\r\n              return item.sentiment || 0;\r\n            }\r\n            return item.mentions;\r\n          });\r\n          return seriesData;\r\n        })(),\r\n        itemStyle: {\r\n          color: (params: any) => {\r\n            if (isForumDistribution) {\r\n              return '#3b82f6' // Consistent blue color for forum distribution\r\n            }\r\n            if (isSentimentComparison) {\r\n              // Color gradient based on sentiment value\r\n              const value = params.data\r\n              if (value >= 0.7) return '#34d399' // High sentiment\r\n              if (value >= 0.5) return '#86efac' // Medium-high sentiment\r\n              if (value >= 0.3) return '#fbbf24' // Medium-low sentiment\r\n              return '#f87171' // Low sentiment\r\n            }\r\n            if (props.config?.title?.includes('Negative Sentiment')) {\r\n              return '#f87171' // Red color for negative sentiment\r\n            }\r\n            return '#86efac' // Default color for non-sentiment data\r\n          }\r\n        },\r\n        barWidth: isForumDistribution ? '50%' : '40%',\r\n        label: {\r\n          show: props.config?.title?.includes('mentions for my brand'),\r\n          position: 'top',\r\n          formatter: '{c}',\r\n          fontSize: 12\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            color: '#60a5fa'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nconst getPieChartOptions = () => ({\r\n  tooltip: {\r\n    trigger: 'item',\r\n    formatter: '{b}: {c} ({d}%)'\r\n  },\r\n  legend: {\r\n    orient: 'vertical',\r\n    left: 'left'\r\n  },\r\n  series: [\r\n    {\r\n      type: 'pie',\r\n      radius: '70%',\r\n      data: (props.data as KeywordData[]).map(item => ({\r\n        name: item.keyword,\r\n        value: item.mentions\r\n      })),\r\n      emphasis: {\r\n        itemStyle: {\r\n          shadowBlur: 10,\r\n          shadowOffsetX: 0,\r\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n})\r\n\r\nconst getGaugeChartOptions = () => {\r\n  const gaugeData = props.data[0] as GaugeData\r\n  const value = gaugeData.value\r\n  const max = gaugeData.max\r\n  const percentage = value / max\r\n\r\n  return {\r\n    series: [\r\n      {\r\n        type: 'gauge',\r\n        startAngle: 180,\r\n        endAngle: 0,\r\n        min: props.config?.min || 0,\r\n        max: props.config?.max || 100,\r\n        splitNumber: 10,\r\n        radius: '100%',\r\n        axisLine: {\r\n          roundCap: true,\r\n          lineStyle: {\r\n            width: 30,\r\n            color: [\r\n              [percentage, {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 1,\r\n                y2: 0,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: '#f87171'\r\n                  },\r\n                  {\r\n                    offset: 0.3,\r\n                    color: '#fbbf24'\r\n                  },\r\n                  {\r\n                    offset: 0.7,\r\n                    color: '#86efac'\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: '#34d399'\r\n                  }\r\n                ]\r\n              }],\r\n              [1, '#e5e7eb']\r\n            ]\r\n          }\r\n        },\r\n        pointer: {\r\n          show: false\r\n        },\r\n        axisTick: {\r\n          show: false\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n        axisLabel: {\r\n          show: true,\r\n          distance: 15,\r\n          color: '#6b7280',\r\n          fontSize: 16,\r\n          formatter: function(value: number) {\r\n            if (value === gaugeData.max) return `${gaugeData.max}`;\r\n            if (value === 0) return '0';\r\n            return '';\r\n          }\r\n        },\r\n        title: {\r\n          show: true,\r\n          offsetCenter: [0, '30%'],\r\n          fontSize: 16,\r\n          color: '#374151',\r\n          formatter: props.config?.title || 'Score'\r\n        },\r\n        detail: {\r\n          show: true,\r\n          offsetCenter: [0, '0%'],\r\n          fontSize: 36,\r\n          fontWeight: 'bold',\r\n          color: '#374151',\r\n          formatter: function(value: number) {\r\n            return Math.round(value);\r\n          }\r\n        },\r\n        data: [{\r\n          value: gaugeData.value,\r\n          name: props.config?.title || 'Score'\r\n        }]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nconst chartHandlers = {\r\n  bar_chart: getBarChartOptions,\r\n  pie_chart: getPieChartOptions,\r\n  gauge_chart: getGaugeChartOptions\r\n}\r\n\r\n// Watch for changes in props that should trigger a chart update\r\nwatch(\r\n  () => [props.data, props.type, props.config],\r\n  () => {\r\n    if (chartInstance.value?.chart) {\r\n      chartInstance.value.chart.clear()\r\n      chartInstance.value.chart.setOption(chartHandlers[props.type]())\r\n    }\r\n  },\r\n  { deep: true }\r\n)\r\n\r\nonMounted(() => {\r\n  emit('loaded')\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  if (chartInstance.value?.chart) {\r\n    chartInstance.value.chart.dispose()\r\n    chartInstance.value = null\r\n  }\r\n})\r\n\r\nconst handleChartInit = (chart: any) => {\r\n  chartInstance.value = chart\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative w-full h-full\">\r\n    <VChart \r\n      @init=\"handleChartInit\"\r\n      :option=\"chartHandlers[type]()\"\r\n      :key=\"`${messageId}-${type}-${JSON.stringify(data)}-${JSON.stringify(config)}`\"\r\n      autoresize\r\n      class=\"h-full w-full\"\r\n    />\r\n  </div>\r\n</template>\r\n","<template>\r\n  <div class=\"w-4 h-4 inline-block\">\r\n    <svg v-if=\"sentiment === 'positive'\" viewBox=\"0 0 16 16\" class=\"w-full h-full\">\r\n      <rect width=\"16\" height=\"16\" fill=\"#4CAF50\"/>\r\n      <path d=\"M8 4L12 10H4L8 4Z\" fill=\"white\"/>\r\n    </svg>\r\n    <svg v-else-if=\"sentiment === 'negative'\" viewBox=\"0 0 16 16\" class=\"w-full h-full\">\r\n      <rect width=\"16\" height=\"16\" fill=\"#F44336\"/>\r\n      <path d=\"M8 12L12 6H4L8 12Z\" fill=\"white\"/>\r\n    </svg>\r\n    <svg v-else viewBox=\"0 0 16 16\" class=\"w-full h-full\">\r\n      <rect width=\"16\" height=\"16\" fill=\"#FFC107\"/>\r\n      <path d=\"M12 8L6 4V12L12 8Z\" fill=\"white\"/>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, watch } from 'vue'\r\n\r\nconst props = defineProps<{\r\n\t\tsentiment: 'positive' | 'negative' | 'neutral'\r\n}>()\r\n\r\nonMounted(() => {\r\n\t\tconsole.log('SentimentIndicator mounted, sentiment:', props.sentiment)\r\n})\r\n\r\nwatch(() => props.sentiment, (newSentiment) => {\r\n\t\tconsole.log('SentimentIndicator sentiment changed:', newSentiment)\r\n})\r\n</script>\r\n\r\n","import { ref } from 'vue'\r\nimport axios from '@/lib/axios'\r\n\r\nexport interface Message {\r\n  id: number\r\n  text: string\r\n  sender: 'user' | 'ai'\r\n  sentiment?: 'positive' | 'neutral' | 'negative'\r\n  visualization?: Visualization\r\n\t\tinsights?: {\r\n\t\t\t\ttype: string\r\n\t\t\t\tdata: any[]\r\n\t\t\t\tsummary?: string\r\n\t\t\t\tsentiment?: string\r\n\t\t\t\trecommendations?: string[]\r\n\t\t}\r\n}\r\n\r\nexport interface KeywordData {\r\n  keyword: string\r\n  mentions: number\r\n}\r\n\r\nexport interface GaugeData {\r\n  value: number\r\n  max: number\r\n}\r\n\r\ninterface Visualization {\r\n  type: 'bar_chart' | 'pie_chart' | 'gauge_chart'\r\n  data: KeywordData[] | GaugeData[]\r\n  config?: {\r\n    xAxis?: string\r\n    yAxis?: string\r\n    title?: string\r\n    min?: number\r\n    max?: number\r\n  }\r\n}\r\n\r\ninterface BackendGaugeData {\r\n  score?: number\r\n  value?: number\r\n  max?: number\r\n}\r\n\r\ninterface BackendVisualization {\r\n  type: 'bar_chart' | 'pie_chart' | 'gauge_chart'\r\n  data: KeywordData[] | BackendGaugeData[]\r\n  config?: {\r\n    xAxis?: string\r\n    yAxis?: string\r\n    title?: string\r\n    min?: number\r\n    max?: number\r\n  }\r\n}\r\n\r\nexport interface ChatResponse {\r\n  query: string\r\n  insights: {\r\n      type: string\r\n      data: any\r\n      summary?: string\r\n      message?: string\r\n      visualization?: BackendVisualization\r\n      recommendations?: string[]\r\n  }\r\n  error?: string\r\n}\r\n\r\ninterface CategoryQuestion {\r\n  category: string\r\n  questions: string[]\r\n}\r\n\r\nexport function useChat() {\r\n  const messages = ref<Message[]>([])\r\n  const input = ref('')\r\n  const selectedCategory = ref<string | null>(null)\r\n  const isLoading = ref(false)\r\n  const error = ref<string | null>(null)\r\n\r\n  // Main quick access questions\r\n  const mainQuestions = [\r\n    \"Show me the trend of mentions for my brand over the last 30 days\",\r\n    \"What's the latest buzz around my brand?\",\r\n    \"What is the overall brand rating for our company?\",\r\n    \"Show me posts where my brand is mentioned alongside competitors\"\r\n  ]\r\n\r\n  const categorizedQuestions: CategoryQuestion[] = [\r\n    {\r\n      category: \"Brand Reputation\",\r\n      questions: [\r\n        \"Show me the most recent positive posts about my brand\",\r\n        \"Show me the most recent negative posts about my brand\",\r\n        \"Which platforms have the most negative sentiment about my brand?\",\r\n        \"Show me the ratio of positive to negative sentiments over the past month\"\r\n      ]\r\n    },\r\n    {\r\n      category: \"Sentiment Analysis\",\r\n      questions: [\r\n        \"Show me posts with high sentiment confidence\",\r\n        \"Show me posts that need sentiment review\"\r\n      ]\r\n    },\r\n    {\r\n      category: \"Source Analysis\",\r\n      questions: [\r\n        \"What sources give us the most consistent sentiment scores?\",\r\n        \"Which sources have the most variable sentiment?\"\r\n      ]\r\n    },\r\n    {\r\n      category: \"Forum Activity\",\r\n      questions: [\r\n        \"Show me our top performing forums\",\r\n        \"Compare activity across different forum tiers\"\r\n      ]\r\n    },\r\n    {\r\n      category: \"Brand Rating\",\r\n      questions: [\r\n        \"Show me our rating component breakdown\",\r\n        \"What's our daily rating activity look like?\"\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const transformGaugeData = (data: BackendGaugeData[]): GaugeData[] => {\r\n    return data.map(item => ({\r\n      value: item.score ?? item.value ?? 0,\r\n      max: item.max ?? 100\r\n    }))\r\n  }\r\n\r\n  const transformVisualization = (visualization: BackendVisualization): Visualization => {\r\n    if (visualization.type === 'gauge_chart') {\r\n      return {\r\n        ...visualization,\r\n        data: transformGaugeData(visualization.data as BackendGaugeData[])\r\n      }\r\n    }\r\n    return visualization as Visualization\r\n  }\r\n\r\n  const sendMessage = async (text: string) => {\r\n    if (!text.trim()) return\r\n\r\n    try {\r\n      isLoading.value = true\r\n      error.value = null\r\n\r\n      // Add user message\r\n      const userMessageId = Date.now()\r\n      messages.value.push({ id: userMessageId, text, sender: 'user' })\r\n      input.value = ''\r\n\r\n      // Add temporary AI message\r\n      const tempMessageId = Date.now() + 1\r\n      messages.value.push({\r\n        id: tempMessageId,\r\n        text: \"🤖 Robot brain doing backflips...\",\r\n        sender: 'ai'\r\n      })\r\n      \r\n      // Send to API with streaming response - Fixed URL by removing extra /api prefix\r\n      const response = await fetch(`${import.meta.env.VITE_API_URL}/chat/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        },\r\n        body: JSON.stringify({ query: text })\r\n      })\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text()\r\n        throw new Error(`API Error: ${response.status} - ${errorText}`)\r\n      }\r\n\r\n      const reader = response.body?.getReader()\r\n      if (!reader) throw new Error('No response body available')\r\n\r\n      // Process the streaming response\r\n      const messageIndex = messages.value.findIndex(m => m.id === tempMessageId)\r\n      if (messageIndex !== -1) {\r\n        while (true) {\r\n          const { done, value } = await reader.read()\r\n          if (done) break\r\n\r\n          // Convert the chunk to text and handle incomplete lines\r\n          const chunk = new TextDecoder().decode(value)\r\n          const lines = chunk.split('\\n').filter(line => line.trim())\r\n          \r\n          // Process each complete line\r\n          for (const line of lines) {\r\n            // Skip if line is not valid JSON format\r\n            if (!line.startsWith('{') || !line.endsWith('}')) {\r\n              console.warn('Skipping invalid JSON line:', line)\r\n              continue\r\n            }\r\n            \r\n            try {\r\n              let data;\r\n              try {\r\n                data = JSON.parse(line)\r\n              } catch (parseError) {\r\n                console.error('Error parsing chunk:', parseError, 'Line:', line)\r\n                continue\r\n              }\r\n\r\n              if (!data) continue\r\n\r\n              if (data.status === 'processing') {\r\n                messages.value[messageIndex] = {\r\n                  id: tempMessageId,\r\n                  text: \"Processing your request...\",\r\n                  sender: 'ai'\r\n                }\r\n              } else if (data.status === 'complete') {\r\n                const result = data.data\r\n                let visualization = undefined\r\n\r\n                if (result.insights?.visualization) {\r\n                  console.log('Raw visualization data:', result.insights.visualization);\r\n                  visualization = transformVisualization(result.insights.visualization);\r\n                  console.log('Transformed visualization data:', visualization);\r\n                }\r\n                \r\n                const finalSentiment = result.sentiment || result.insights?.sentiment\r\n                \r\n                const updatedMessage: Message = {\r\n                  id: tempMessageId,\r\n                  text: result.insights?.summary || \"Here's what I found...\",\r\n                  sender: 'ai' as const,\r\n                  visualization: visualization,\r\n                  sentiment: finalSentiment,\r\n                  insights: result.insights\r\n                }\r\n\r\n                // Store message in local state for context\r\n                if (messages.value.length > 10) {\r\n                  messages.value = messages.value.slice(-10)\r\n                }\r\n                \r\n                messages.value[messageIndex] = updatedMessage\r\n              } else if (data.status === 'error') {\r\n                messages.value[messageIndex] = {\r\n                  id: tempMessageId,\r\n                  text: data.message,\r\n                  sender: 'ai'\r\n                }\r\n                error.value = data.message\r\n              }\r\n            } catch (e) {\r\n              console.error('Error parsing chunk:', e)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    } catch (err: any) {\r\n      console.error('Chat error:', err)\r\n      const errorMessage = (err?.response?.data?.error || err?.message || 'An error occurred while processing your request') as string\r\n      error.value = errorMessage\r\n      messages.value.push({\r\n        id: Date.now(),\r\n        text: errorMessage,\r\n        sender: 'ai'\r\n      })\r\n    } finally {\r\n      isLoading.value = false\r\n    }\r\n  }\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    selectedCategory.value = category\r\n  }\r\n\r\n  const handleQuestionClick = (question: string) => {\r\n    input.value = question\r\n    selectedCategory.value = null\r\n  }\r\n\r\n  return {\r\n    messages,\r\n    input,\r\n    selectedCategory,\r\n    mainQuestions,\r\n    categorizedQuestions,\r\n    isLoading,\r\n    error,\r\n    sendMessage,\r\n    handleCategoryClick,\r\n    handleQuestionClick\r\n  }\r\n}\r\n","export default \"__VITE_ASSET__08106mHX__\"","<script setup lang=\"ts\">\r\nimport { ref, onMounted, nextTick, watch } from 'vue'\r\nimport {\r\n  Send,\r\n  MessageCircle,\r\n  ChevronRight,\r\n  ChevronDown,\r\n  HelpCircle,\r\n  X,\r\n  MessageSquare,\r\n  Loader2,\r\n  Bot\r\n} from 'lucide-vue-next'\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\r\nimport KeywordChart from './components/KeywordChart.vue'\r\nimport SentimentIndicator from './components/SentimentIndicator.vue'\r\nimport { useChat } from './composables/useChat'\r\nimport teamworkImage from '@/assets/images/illustrations/teamwork.png'\r\n\r\n// State management\r\nconst isQuestionsOpen = ref(false)\r\nconst chatContainer = ref<HTMLDivElement | null>(null)\r\nconst questionsPanel = ref<HTMLDivElement | null>(null)\r\nconst showScrollIndicator = ref(true)\r\n\r\n// Check if panel needs scroll indicator\r\nconst checkScroll = () => {\r\n  if (questionsPanel.value) {\r\n    const { scrollTop, scrollHeight, clientHeight } = questionsPanel.value\r\n    const isAtBottom = scrollHeight - scrollTop - clientHeight < 50\r\n    showScrollIndicator.value = !isAtBottom\r\n  }\r\n}\r\n\r\n// Watch for panel open to check scroll\r\nwatch(isQuestionsOpen, (newVal: boolean) => {\r\n  if (newVal) {\r\n    nextTick(() => {\r\n      checkScroll()\r\n    })\r\n  }\r\n})\r\n\r\n// Chat composable\r\nconst {\r\n  messages,\r\n  input,\r\n  mainQuestions,\r\n  categorizedQuestions,\r\n  isLoading,\r\n  error,\r\n  sendMessage,\r\n  handleQuestionClick\r\n} = useChat()\r\n\r\nconst scrollToBottom = async () => {\r\n  await nextTick()\r\n  setTimeout(() => {\r\n    if (chatContainer.value) {\r\n      const scrollHeight = chatContainer.value.scrollHeight\r\n      chatContainer.value.scrollTo({\r\n        top: scrollHeight,\r\n        behavior: 'smooth'\r\n      })\r\n    }\r\n  }, 100)\r\n}\r\n\r\nconst originalSendMessage = sendMessage\r\nconst wrappedSendMessage = async (text: string) => {\r\n  await originalSendMessage(text)\r\n  await scrollToBottom()\r\n}\r\n\r\nonMounted(() => {\r\n  scrollToBottom()\r\n})\r\n\r\nconst handleKeyPress = (e: KeyboardEvent) => {\r\n  if (e.key === 'Enter' && !e.shiftKey && !isLoading.value) {\r\n    e.preventDefault()\r\n    wrappedSendMessage(input.value)\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex-1 p-6\">\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n    <!-- Welcome Section -->\r\n    <Card class=\"mb-8\">\r\n      <div class=\"flex flex-col md:flex-row items-center gap-6 p-6\">\r\n        <div class=\"flex-1\">\r\n          <h1 class=\"text-xl md:text-2xl font-medium text-green-800 mb-2\">\r\n            Welcome to your AI Chat Assistant!\r\n          </h1>\r\n          <p class=\"text-gray-600 text-lg\">\r\n            Here you can explore your brand's performance data and metrics through natural conversation. Ask about sentiment trends, review patterns, or competitive insights for clear, data-driven answers. Think of me as your brand analytics expert, ready to help you understand your impact in the cannabis community today.\r\n          </p>\r\n        </div>\r\n        <div class=\"w-48 h-48 flex-shrink-0 relative\">\r\n          <img\r\n            :src=\"teamworkImage\"\r\n            alt=\"AI Chat Assistant illustration\"\r\n            class=\"w-full h-full object-contain\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n\r\n    <!-- Error Alert -->\r\n    <Alert v-if=\"error\" variant=\"destructive\" class=\"mb-4\">\r\n      <AlertDescription>{{ error }}</AlertDescription>\r\n    </Alert>\r\n\r\n    <!-- Chat Window -->\r\n    <Card class=\"mb-8 overflow-hidden\">\r\n      <CardHeader class=\"bg-gray-50 rounded-t-lg\">\r\n      </CardHeader>\r\n      <CardContent class=\"p-0\">\r\n        <div ref=\"chatContainer\" class=\"h-[720px] overflow-y-auto p-4 scroll-smooth bg-white\">\r\n          <div v-if=\"!messages.length\" class=\"flex flex-col items-center justify-center h-[720px] bg-white p-6 text-center\">\r\n            <div class=\"w-16 h-16 bg-green-50 rounded-full flex items-center justify-center mb-6\">\r\n              <Bot class=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n            <h3 class=\"text-lg font-medium text-gray-900 mb-2\">\r\n              Ask Me Anything\r\n            </h3>\r\n            <p class=\"text-gray-500 text-sm mb-5 max-w-[600px]\">\r\n              Ask me questions about brand monitoring, market trends, or get help analyzing your data.\r\n            </p>\r\n          </div>\r\n          <div v-else class=\"space-y-4\">\r\n            <div v-for=\"message in messages\" :key=\"message.id\"\r\n                 :class=\"['flex flex-col', message.sender === 'user' ? 'items-end' : 'items-start']\"\r\n                 @mounted=\"() => { console.log('Message sentiment:', message.sentiment) }\">\r\n              <div :class=\"[\r\n                'p-4 rounded-lg whitespace-pre-line',\r\n                message.visualization ? 'max-w-[950px]' : 'max-w-[70%]',\r\n                message.sender === 'user' ? 'bg-green-100 text-green-800' : 'bg-white border border-gray-200'\r\n              ]\">\r\n                <div v-if=\"message.sender === 'ai' && message.text.includes('Context:')\">\r\n                  <div v-for=\"(block, idx) in message.text.split('\\n\\n')\" :key=\"idx\">\r\n                    <template v-if=\"block.includes('Context:')\">\r\n                      <div class=\"flex items-center gap-2 mb-1\">\r\n                        <SentimentIndicator :sentiment=\"(() => {\r\n                                                  const text = block.toLowerCase();\r\n                                                  const [title, context] = text.split('context:');\r\n                                                  \r\n                                                  // Check for negative sentiment\r\n                                                  if (text.includes('worst') || text.includes('lacking') || text.includes('shit') || text.includes('problems')) {\r\n                                                    return 'negative';\r\n                                                  }\r\n                                                  \r\n                                                  // Check for positive sentiment\r\n                                                  if (text.includes('epic') || text.includes('celebrate') || text.includes('amazing') ||\r\n                                                      text.includes('love') || text.includes('cant wait') || text.includes('this light is amazing') ||\r\n                                                      (title.includes('hcc') && context?.includes('viparspectra'))) {\r\n                                                    return 'positive';\r\n                                                  }\r\n                                                  \r\n                                                  return 'neutral';\r\n                                                })()\" />\r\n                        <span>{{ block.split('\\n')[0] }}</span>\r\n                      </div>\r\n                      <div class=\"ml-4 text-gray-600 mb-3\">{{ block.split('\\n')[1] }}</div>\r\n                    </template>\r\n                    <template v-else>\r\n                      <span>{{ block }}</span>\r\n                    </template>\r\n                  </div>\r\n                </div>\r\n                <div v-else>\r\n                  <div class=\"flex items-center gap-2\">\r\n                    <p class=\"text-[16px] leading-relaxed whitespace-pre-wrap\" v-html=\"message.text.replace(/##LINK\\[(.*?)\\]##🔗##/g, '<a href=\\'$1\\' target=\\'_blank\\'>🔗</a>')\"></p>\r\n                    <Loader2 v-if=\"message.text === '🤖 Robot brain doing backflips...'\" class=\"h-4 w-4 animate-spin text-green-600\" />\r\n                  </div>\r\n                  <!-- Display recommendations if available -->\r\n                  <div v-if=\"message.insights?.recommendations?.length\" class=\"mt-6 space-y-3\">\r\n                    <p class=\"font-semibold text-green-800 text-[16px] mb-2\">Recommended Actions:</p>\r\n                    <ul class=\"list-disc list-inside space-y-3 text-gray-700 text-[16px]\">\r\n                      <li v-for=\"(rec, idx) in message.insights.recommendations\" :key=\"idx\" class=\"ml-2\">\r\n                        {{ rec }}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"message.visualization\" :key=\"`viz-container-${message.id}`\" class=\"mt-4 w-[850px] h-[400px] bg-white rounded-lg border border-gray-200 p-4\">\r\n                  <KeywordChart \r\n                    :message-id=\"message.id\"\r\n                    :data=\"message.visualization.data\"\r\n                    :type=\"message.visualization.type\"\r\n                    :config=\"message.visualization.config\"\r\n                    @loaded=\"scrollToBottom\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-4 bg-gray-50 border-t border-gray-200 rounded-b-lg\">\r\n          <div class=\"flex space-x-2\">\r\n            <Input \r\n              v-model=\"input\"\r\n              @keypress=\"handleKeyPress\"\r\n              placeholder=\"Type your message here...\"\r\n              class=\"flex-1 text-[16px] h-11\"\r\n              :disabled=\"isLoading\"\r\n            />\r\n            <Button \r\n              @click=\"() => wrappedSendMessage(input)\" \r\n              class=\"bg-green-600 hover:bg-green-700 text-white\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <Loader2 v-if=\"isLoading\" class=\"h-4 w-4 mr-2 animate-spin\" />\r\n              <Send v-else class=\"h-4 w-4 mr-2\" />\r\n              {{ isLoading ? 'Processing...' : 'Send' }}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <!-- Questions Panel Button -->\r\n    <button\r\n      @click=\"isQuestionsOpen = true\"\r\n      class=\"fixed bottom-6 right-6 flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-full shadow-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n    >\r\n      <HelpCircle class=\"h-5 w-5\" />\r\n      <span>Example Questions</span>\r\n    </button>\r\n\r\n    <!-- Overlay -->\r\n    <div\r\n      v-if=\"isQuestionsOpen\"\r\n      class=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n      @click=\"isQuestionsOpen = false\"\r\n    />\r\n\r\n    <!-- Questions Panel -->\r\n    <div\r\n      v-if=\"isQuestionsOpen\"\r\n      class=\"fixed inset-y-0 right-0 w-96 bg-[#fafafa] shadow-xl z-50 transform transition-transform duration-300\"\r\n      :class=\"isQuestionsOpen ? 'translate-x-0' : 'translate-x-full'\"\r\n    >\r\n      <!-- Header -->\r\n      <div class=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between bg-white shadow-sm\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <div class=\"w-1 h-6 bg-green-500 rounded-full shadow-sm\"></div>\r\n          <h2 class=\"text-lg font-semibold text-gray-800\">Example Questions</h2>\r\n        </div>\r\n        <button\r\n          @click=\"isQuestionsOpen = false\"\r\n          class=\"text-gray-400 hover:text-gray-600 hover:bg-gray-100 p-1.5 rounded-lg transition-colors\"\r\n        >\r\n          <X class=\"h-5 w-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Questions Sections -->\r\n      <div\r\n        ref=\"questionsPanel\"\r\n        class=\"h-[calc(100vh-8rem)] overflow-y-auto questions-panel relative\"\r\n        @scroll=\"checkScroll\"\r\n      >\r\n        <div class=\"p-6 space-y-6 pb-32\">\r\n          <!-- Main Questions -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700 bg-gray-50 p-2 rounded-lg\">\r\n              <MessageSquare class=\"w-4 w-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Quick Questions</h3>\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <Button\r\n                v-for=\"question in mainQuestions\"\r\n                :key=\"question\"\r\n                variant=\"ghost\"\r\n                class=\"w-full justify-start h-auto py-2.5 px-4 text-left text-sm hover:bg-gray-50 text-gray-700 hover:text-gray-900\"\r\n                @click=\"handleQuestionClick(question); isQuestionsOpen = false\"\r\n                :disabled=\"isLoading\"\r\n              >\r\n                {{ question }}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Category Questions -->\r\n          <div\r\n            v-for=\"catQuestion in categorizedQuestions\"\r\n            :key=\"catQuestion.category\"\r\n            class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\"\r\n          >\r\n            <div class=\"flex items-center gap-2 text-gray-700 bg-gray-50 p-2 rounded-lg\">\r\n              <MessageCircle class=\"w-4 w-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">{{ catQuestion.category }}</h3>\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <Button\r\n                v-for=\"question in catQuestion.questions\"\r\n                :key=\"question\"\r\n                variant=\"ghost\"\r\n                class=\"w-full justify-start h-auto py-2 px-3 text-left text-sm hover:bg-gray-50 text-gray-700 hover:text-gray-900\"\r\n                @click=\"handleQuestionClick(question); isQuestionsOpen = false\"\r\n                :disabled=\"isLoading\"\r\n              >\r\n                <ChevronRight class=\"h-4 w-4 mr-2 text-green-600\" />\r\n                {{ question }}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Scroll Indicator -->\r\n        <div v-if=\"showScrollIndicator\" class=\"fixed bottom-0 right-0 w-96 flex justify-center pointer-events-none z-[60]\">\r\n          <div class=\"bg-gradient-to-t from-[#fafafa] to-transparent h-24 w-full absolute bottom-0\"></div>\r\n          <div class=\"bg-green-200 text-green-900 rounded-full p-2 mb-6 relative shadow-sm\">\r\n            <ChevronDown class=\"h-5 w-5 animate-bounce\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<style scoped>\r\n/* Webkit (Chrome, Safari, Edge) scrollbar styles */\r\n.questions-panel,\r\n.scroll-smooth {\r\n  scrollbar-width: auto;\r\n  scrollbar-color: #22c55e #f1f1f1;\r\n}\r\n\r\n.questions-panel::-webkit-scrollbar,\r\n.scroll-smooth::-webkit-scrollbar {\r\n  width: 14px;\r\n}\r\n\r\n.questions-panel::-webkit-scrollbar-track,\r\n.scroll-smooth::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 4px;\r\n}\r\n\r\n.questions-panel::-webkit-scrollbar-thumb,\r\n.scroll-smooth::-webkit-scrollbar-thumb {\r\n  background: #22c55e;\r\n  border-radius: 4px;\r\n  border: 2px solid #f1f1f1;\r\n}\r\n\r\n.questions-panel::-webkit-scrollbar-thumb:hover,\r\n.scroll-smooth::-webkit-scrollbar-thumb:hover {\r\n  background: #16a34a;\r\n}\r\n\r\n.questions-panel::-webkit-scrollbar-thumb:active,\r\n.scroll-smooth::-webkit-scrollbar-thumb:active {\r\n  background: #15803d;\r\n}\r\n</style>\r\n"],"names":["PointerShape","PointerPath","_super","__extends","opts","_this","ctx","shape","mathCos","mathSin","width","angle","x","y","Path","parsePosition","seriesModel","api","center","height","size","cx","parsePercent","cy","r","formatLabel","value","labelFormatter","label","isString","isFunction","GaugeView","ecModel","colorList","posInfo","group","clockwise","startAngle","endAngle","axisLineModel","roundCap","MainPath","Sausage","graphic.Sector","showAxis","lineStyleModel","axisLineWidth","angles","normalizeArcAngles","angleRangeSpan","prevEndAngle","sectors","i","percent","sector","each","getColor","minVal","maxVal","splitLineModel","tickModel","labelModel","splitNumber","subSplitNumber","splitLineLen","tickLen","step","subStep","splitLineStyle","tickLineStyle","splitLineDistance","unitX","unitY","distance","splitLine","graphic.Line","round","autoColor","textStyleX","textStyleY","rotateType","rotate","isNumber","graphic.Text","createTextStyle","j","tickLine","oldData","oldProgressData","progressList","showPointer","progressModel","showProgress","data","valueDim","valueExtent","angleExtent","createPointer","idx","itemModel","pointerModel","pointerWidth","pointerLength","pointerStr","pointerOffset","pointerOffsetX","pointerOffsetY","pointerKeepAspect","pointer","createSymbol","createProgress","ProgressPath","isOverlap","progressWidth","r0","progress","val","graphic.initProps","linearMap","isClip","setCommonECData","newIdx","oldIdx","previousPointer","previousRotate","graphic.updateProps","previousProgress","previousEndAngle","emphasisModel","focus","blurScope","emphasisDisabled","symbolStyle","visualColor","ZRImage","pathStyle","extend","setStatesStylesFromModel","toggleHoverEmphasis","anchorModel","showAnchor","anchorSize","anchorType","offsetCenter","anchorKeepAspect","anchor","contentGroup","graphic.Group","newTitleEls","newDetailEls","hasAnimation","showPointerAbove","itemGroup","itemTitleModel","titleOffsetCenter","titleX","titleY","labelEl","itemDetailModel","detailOffsetCenter","detailX","detailY","detailColor","formatter_1","setLabelValueAnimation","animateLabelValue","labelDataIndex","status","dataType","labelDimIndex","fmt","extendParams","ChartView","GaugeSeriesModel","option","createSeriesDataSimply","SeriesModel","install","registers","use","CanvasRenderer","BarChart","PieChart","GaugeChart","GridComponent","TooltipComponent","TitleComponent","LegendComponent","props","__props","emit","__emit","chartInstance","ref","chartHandlers","isSentimentComparison","_b","_a","_d","_c","isForumDistribution","_f","_e","_h","_g","params","item","d","_i","_j","_l","_k","gaugeData","max","percentage","watch","onMounted","onBeforeUnmount","handleChartInit","chart","newSentiment","useChat","messages","input","selectedCategory","isLoading","error","mainQuestions","categorizedQuestions","transformGaugeData","transformVisualization","visualization","text","userMessageId","tempMessageId","response","errorText","reader","messageIndex","m","done","lines","line","parseError","result","finalSentiment","updatedMessage","e","err","errorMessage","category","question","teamworkImage","isQuestionsOpen","chatContainer","questionsPanel","showScrollIndicator","checkScroll","scrollTop","scrollHeight","clientHeight","isAtBottom","newVal","nextTick","sendMessage","handleQuestionClick","scrollToBottom","originalSendMessage","wrappedSendMessage","handleKeyPress"],"mappings":"6wBA6CA,IAAIA,GAA4B,UAAY,CAC1C,SAASA,GAAe,CACtB,KAAK,MAAQ,EACb,KAAK,MAAQ,GACb,KAAK,EAAI,GACT,KAAK,EAAI,EACT,KAAK,EAAI,CACb,CACE,OAAOA,CACT,EAAG,EACCC,GAA2B,SAAUC,EAAQ,CAC/CC,GAAUF,EAAaC,CAAM,EAC7B,SAASD,EAAYG,EAAM,CACzB,IAAIC,EAAQH,EAAO,KAAK,KAAME,CAAI,GAAK,KACvC,OAAAC,EAAM,KAAO,UACNA,CACX,CACE,OAAAJ,EAAY,UAAU,gBAAkB,UAAY,CAClD,OAAO,IAAID,EACZ,EACDC,EAAY,UAAU,UAAY,SAAUK,EAAKC,EAAO,CACtD,IAAIC,EAAU,KAAK,IACfC,EAAU,KAAK,IACf,EAAIF,EAAM,EACVG,EAAQH,EAAM,MACdI,EAAQJ,EAAM,MACdK,EAAIL,EAAM,EAAIC,EAAQG,CAAK,EAAID,GAASA,GAAS,EAAI,EAAI,EAAI,GAC7DG,EAAIN,EAAM,EAAIE,EAAQE,CAAK,EAAID,GAASA,GAAS,EAAI,EAAI,EAAI,GACjEC,EAAQJ,EAAM,MAAQ,KAAK,GAAK,EAChCD,EAAI,OAAOM,EAAGC,CAAC,EACfP,EAAI,OAAOC,EAAM,EAAIC,EAAQG,CAAK,EAAID,EAAOH,EAAM,EAAIE,EAAQE,CAAK,EAAID,CAAK,EAC7EJ,EAAI,OAAOC,EAAM,EAAIC,EAAQD,EAAM,KAAK,EAAI,EAAGA,EAAM,EAAIE,EAAQF,EAAM,KAAK,EAAI,CAAC,EACjFD,EAAI,OAAOC,EAAM,EAAIC,EAAQG,CAAK,EAAID,EAAOH,EAAM,EAAIE,EAAQE,CAAK,EAAID,CAAK,EAC7EJ,EAAI,OAAOM,EAAGC,CAAC,CAChB,EACMZ,CACT,EAAEa,EAAI,ECzBN,SAASC,GAAcC,EAAaC,EAAK,CACvC,IAAIC,EAASF,EAAY,IAAI,QAAQ,EACjCN,EAAQO,EAAI,SAAU,EACtBE,EAASF,EAAI,UAAW,EACxBG,EAAO,KAAK,IAAIV,EAAOS,CAAM,EAC7BE,EAAKC,EAAaJ,EAAO,CAAC,EAAGD,EAAI,UAAU,EAC3CM,EAAKD,EAAaJ,EAAO,CAAC,EAAGD,EAAI,WAAW,EAC5CO,EAAIF,EAAaN,EAAY,IAAI,QAAQ,EAAGI,EAAO,CAAC,EACxD,MAAO,CACL,GAAIC,EACJ,GAAIE,EACJ,EAAGC,CACJ,CACH,CACA,SAASC,GAAYC,EAAOC,EAAgB,CAC1C,IAAIC,EAAQF,GAAS,KAAO,GAAKA,EAAQ,GACzC,OAAIC,IACEE,GAASF,CAAc,EACzBC,EAAQD,EAAe,QAAQ,UAAWC,CAAK,EACtCE,GAAWH,CAAc,IAClCC,EAAQD,EAAeD,CAAK,IAGzBE,CACT,CACA,IAAIG,GAAyB,SAAU7B,EAAQ,CAC7CC,GAAU4B,EAAW7B,CAAM,EAC3B,SAAS6B,GAAY,CACnB,IAAI1B,EAAQH,IAAW,MAAQA,EAAO,MAAM,KAAM,SAAS,GAAK,KAChE,OAAAG,EAAM,KAAO0B,EAAU,KAChB1B,CACX,CACE,OAAA0B,EAAU,UAAU,OAAS,SAAUf,EAAagB,EAASf,EAAK,CAChE,KAAK,MAAM,UAAW,EACtB,IAAIgB,EAAYjB,EAAY,IAAI,CAAC,WAAY,YAAa,OAAO,CAAC,EAC9DkB,EAAUnB,GAAcC,EAAaC,CAAG,EAC5C,KAAK,YAAYD,EAAagB,EAASf,EAAKgB,EAAWC,CAAO,EAC9D,KAAK,MAAQlB,EAAY,QAAS,CACnC,EACDe,EAAU,UAAU,QAAU,UAAY,CAAE,EAC5CA,EAAU,UAAU,YAAc,SAAUf,EAAagB,EAASf,EAAKgB,EAAWC,EAAS,CACzF,IAAIC,EAAQ,KAAK,MACbC,EAAYpB,EAAY,IAAI,WAAW,EACvCqB,EAAa,CAACrB,EAAY,IAAI,YAAY,EAAI,IAAM,KAAK,GACzDsB,EAAW,CAACtB,EAAY,IAAI,UAAU,EAAI,IAAM,KAAK,GACrDuB,EAAgBvB,EAAY,SAAS,UAAU,EAC/CwB,EAAWD,EAAc,IAAI,UAAU,EACvCE,EAAWD,EAAWE,GAAUC,GAChCC,EAAWL,EAAc,IAAI,MAAM,EACnCM,EAAiBN,EAAc,SAAS,WAAW,EACnDO,EAAgBD,EAAe,IAAI,OAAO,EAC1CE,EAAS,CAACV,EAAYC,CAAQ,EAClCU,GAAmBD,EAAQ,CAACX,CAAS,EACrCC,EAAaU,EAAO,CAAC,EACrBT,EAAWS,EAAO,CAAC,EAInB,QAHIE,EAAiBX,EAAWD,EAC5Ba,EAAeb,EACfc,EAAU,CAAE,EACPC,EAAI,EAAGR,GAAYQ,EAAInB,EAAU,OAAQmB,IAAK,CAErD,IAAIC,EAAU,KAAK,IAAI,KAAK,IAAIpB,EAAUmB,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EACtDd,EAAWD,EAAaY,EAAiBI,EACzC,IAAIC,EAAS,IAAIb,EAAS,CACxB,MAAO,CACL,WAAYS,EACZ,SAAUZ,EACV,GAAIJ,EAAQ,GACZ,GAAIA,EAAQ,GACZ,UAAWE,EACX,GAAIF,EAAQ,EAAIY,EAChB,EAAGZ,EAAQ,CACZ,EACD,OAAQ,EAChB,CAAO,EACDoB,EAAO,SAAS,CACd,KAAMrB,EAAUmB,CAAC,EAAE,CAAC,CAC5B,CAAO,EACDE,EAAO,SAAST,EAAe,aAG/B,CAAC,QAAS,OAAO,CAAC,CAAC,EACnBM,EAAQ,KAAKG,CAAM,EACnBJ,EAAeZ,CACrB,CACIa,EAAQ,QAAS,EACjBI,GAAKJ,EAAS,SAAUG,EAAQ,CAC9B,OAAOnB,EAAM,IAAImB,CAAM,CAC7B,CAAK,EACD,IAAIE,EAAW,SAAUH,EAAS,CAEhC,GAAIA,GAAW,EACb,OAAOpB,EAAU,CAAC,EAAE,CAAC,EAEvB,IAAImB,EACJ,IAAKA,EAAI,EAAGA,EAAInB,EAAU,OAAQmB,IAChC,GAAInB,EAAUmB,CAAC,EAAE,CAAC,GAAKC,IAAYD,IAAM,EAAI,EAAInB,EAAUmB,EAAI,CAAC,EAAE,CAAC,GAAKC,EACtE,OAAOpB,EAAUmB,CAAC,EAAE,CAAC,EAIzB,OAAOnB,EAAUmB,EAAI,CAAC,EAAE,CAAC,CAC1B,EACD,KAAK,aAAapC,EAAagB,EAASf,EAAKuC,EAAUtB,EAASG,EAAYC,EAAUF,EAAWU,CAAa,EAC9G,KAAK,sBAAsB9B,EAAagB,EAASf,EAAKuC,EAAUtB,CAAO,EACvE,KAAK,cAAclB,EAAakB,CAAO,EACvC,KAAK,eAAelB,EAAagB,EAASf,EAAKuC,EAAUtB,EAASG,EAAYC,EAAUF,EAAWU,CAAa,CACjH,EACDf,EAAU,UAAU,aAAe,SAAUf,EAAagB,EAASf,EAAKuC,EAAUtB,EAASG,EAAYC,EAAUF,EAAWU,EAAe,CAsBzI,QArBIX,EAAQ,KAAK,MACbd,EAAKa,EAAQ,GACbX,EAAKW,EAAQ,GACbV,EAAIU,EAAQ,EACZuB,EAAS,CAACzC,EAAY,IAAI,KAAK,EAC/B0C,EAAS,CAAC1C,EAAY,IAAI,KAAK,EAC/B2C,EAAiB3C,EAAY,SAAS,WAAW,EACjD4C,EAAY5C,EAAY,SAAS,UAAU,EAC3C6C,EAAa7C,EAAY,SAAS,WAAW,EAC7C8C,EAAc9C,EAAY,IAAI,aAAa,EAC3C+C,EAAiBH,EAAU,IAAI,aAAa,EAC5CI,EAAe1C,EAAaqC,EAAe,IAAI,QAAQ,EAAGnC,CAAC,EAC3DyC,EAAU3C,EAAasC,EAAU,IAAI,QAAQ,EAAGpC,CAAC,EACjDb,EAAQ0B,EACR6B,GAAQ5B,EAAWD,GAAcyB,EACjCK,EAAUD,EAAOH,EACjBK,EAAiBT,EAAe,SAAS,WAAW,EAAE,aAAc,EACpEU,EAAgBT,EAAU,SAAS,WAAW,EAAE,aAAc,EAC9DU,EAAoBX,EAAe,IAAI,UAAU,EACjDY,EACAC,EACKpB,EAAI,EAAGA,GAAKU,EAAaV,IAAK,CAIrC,GAHAmB,EAAQ,KAAK,IAAI5D,CAAK,EACtB6D,EAAQ,KAAK,IAAI7D,CAAK,EAElBgD,EAAe,IAAI,MAAM,EAAG,CAC9B,IAAIc,EAAWH,EAAoBA,EAAoBxB,EAAgBA,EACnE4B,EAAY,IAAIC,GAAa,CAC/B,MAAO,CACL,GAAIJ,GAAS/C,EAAIiD,GAAYpD,EAC7B,GAAImD,GAAShD,EAAIiD,GAAYlD,EAC7B,GAAIgD,GAAS/C,EAAIwC,EAAeS,GAAYpD,EAC5C,GAAImD,GAAShD,EAAIwC,EAAeS,GAAYlD,CAC7C,EACD,MAAO6C,EACP,OAAQ,EAClB,CAAS,EACGA,EAAe,SAAW,QAC5BM,EAAU,SAAS,CACjB,OAAQlB,EAASJ,EAAIU,CAAW,CAC5C,CAAW,EAEH3B,EAAM,IAAIuC,CAAS,CAC3B,CAEM,GAAIb,EAAW,IAAI,MAAM,EAAG,CAC1B,IAAIY,EAAWZ,EAAW,IAAI,UAAU,EAAIS,EACxC1C,EAAQH,GAAYmD,GAAMxB,EAAIU,GAAeJ,EAASD,GAAUA,CAAM,EAAGI,EAAW,IAAI,WAAW,CAAC,EACpGgB,EAAYrB,EAASJ,EAAIU,CAAW,EACpCgB,EAAaP,GAAS/C,EAAIwC,EAAeS,GAAYpD,EACrD0D,GAAaP,GAAShD,EAAIwC,EAAeS,GAAYlD,EACrDyD,GAAanB,EAAW,IAAI,QAAQ,EACpCoB,EAAS,EACTD,KAAe,UACjBC,EAAS,CAACtE,EAAQ,EAAI,KAAK,GACvBsE,EAAS,KAAK,GAAK,IACrBA,GAAU,KAAK,KAERD,KAAe,aACxBC,EAAS,CAACtE,EAAQ,KAAK,GAAK,EACnBuE,GAASF,EAAU,IAC5BC,EAASD,GAAa,KAAK,GAAK,KAE9BC,IAAW,EACb9C,EAAM,IAAI,IAAIgD,GAAa,CACzB,MAAOC,GAAgBvB,EAAY,CACjC,KAAMjC,EACN,EAAGkD,EACH,EAAGC,GACH,cAAeP,EAAQ,IAAO,MAAQA,EAAQ,GAAM,SAAW,SAC/D,MAAOD,EAAQ,IAAO,OAASA,EAAQ,GAAM,QAAU,QACrE,EAAe,CACD,aAAcM,CAC5B,CAAa,EACD,OAAQ,EACpB,CAAW,CAAC,EAEF1C,EAAM,IAAI,IAAIgD,GAAa,CACzB,MAAOC,GAAgBvB,EAAY,CACjC,KAAMjC,EACN,EAAGkD,EACH,EAAGC,GACH,cAAe,SACf,MAAO,QACrB,EAAe,CACD,aAAcF,CAC5B,CAAa,EACD,OAAQ,GACR,QAASC,EACT,QAASC,GACT,SAAUE,CACtB,CAAW,CAAC,CAEZ,CAEM,GAAIrB,EAAU,IAAI,MAAM,GAAKR,IAAMU,EAAa,CAC9C,IAAIW,EAAWb,EAAU,IAAI,UAAU,EACvCa,EAAWA,EAAWA,EAAW3B,EAAgBA,EACjD,QAASuC,EAAI,EAAGA,GAAKtB,EAAgBsB,IAAK,CACxCd,EAAQ,KAAK,IAAI5D,CAAK,EACtB6D,EAAQ,KAAK,IAAI7D,CAAK,EACtB,IAAI2E,GAAW,IAAIX,GAAa,CAC9B,MAAO,CACL,GAAIJ,GAAS/C,EAAIiD,GAAYpD,EAC7B,GAAImD,GAAShD,EAAIiD,GAAYlD,EAC7B,GAAIgD,GAAS/C,EAAIyC,EAAUQ,GAAYpD,EACvC,GAAImD,GAAShD,EAAIyC,EAAUQ,GAAYlD,CACxC,EACD,OAAQ,GACR,MAAO8C,CACnB,CAAW,EACGA,EAAc,SAAW,QAC3BiB,GAAS,SAAS,CAChB,OAAQ9B,GAAUJ,EAAIiC,EAAItB,GAAkBD,CAAW,CACrE,CAAa,EAEH3B,EAAM,IAAImD,EAAQ,EAClB3E,GAASwD,CACnB,CACQxD,GAASwD,CACjB,MACQxD,GAASuD,CAEjB,CACG,EACDnC,EAAU,UAAU,eAAiB,SAAUf,EAAagB,EAASf,EAAKuC,EAAUtB,EAASG,EAAYC,EAAUF,EAAWU,EAAe,CAC3I,IAAIX,EAAQ,KAAK,MACboD,EAAU,KAAK,MACfC,EAAkB,KAAK,aACvBC,EAAe,CAAE,EACjBC,EAAc1E,EAAY,IAAI,CAAC,UAAW,MAAM,CAAC,EACjD2E,EAAgB3E,EAAY,SAAS,UAAU,EAC/C4E,EAAeD,EAAc,IAAI,MAAM,EACvCE,EAAO7E,EAAY,QAAS,EAC5B8E,EAAWD,EAAK,aAAa,OAAO,EACpCpC,EAAS,CAACzC,EAAY,IAAI,KAAK,EAC/B0C,EAAS,CAAC1C,EAAY,IAAI,KAAK,EAC/B+E,EAAc,CAACtC,EAAQC,CAAM,EAC7BsC,EAAc,CAAC3D,EAAYC,CAAQ,EACvC,SAAS2D,EAAcC,EAAKvF,EAAO,CACjC,IAAIwF,EAAYN,EAAK,aAAaK,CAAG,EACjCE,EAAeD,EAAU,SAAS,SAAS,EAC3CE,EAAe/E,EAAa8E,EAAa,IAAI,OAAO,EAAGlE,EAAQ,CAAC,EAChEoE,EAAgBhF,EAAa8E,EAAa,IAAI,QAAQ,EAAGlE,EAAQ,CAAC,EAClEqE,EAAavF,EAAY,IAAI,CAAC,UAAW,MAAM,CAAC,EAChDwF,EAAgBJ,EAAa,IAAI,cAAc,EAC/CK,EAAiBnF,EAAakF,EAAc,CAAC,EAAGtE,EAAQ,CAAC,EACzDwE,EAAiBpF,EAAakF,EAAc,CAAC,EAAGtE,EAAQ,CAAC,EACzDyE,EAAoBP,EAAa,IAAI,YAAY,EACjDQ,EAEJ,OAAIL,EACFK,EAAUC,GAAaN,EAAYE,EAAiBJ,EAAe,EAAGK,EAAiBJ,EAAeD,EAAcC,EAAe,KAAMK,CAAiB,EAE1JC,EAAU,IAAI3G,GAAY,CACxB,MAAO,CACL,MAAO,CAAC,KAAK,GAAK,EAClB,MAAOoG,EACP,EAAGC,EACH,EAAGG,EACH,EAAGC,CACf,CACA,CAAS,EAEHE,EAAQ,SAAW,EAAEjG,EAAQ,KAAK,GAAK,GACvCiG,EAAQ,EAAI1E,EAAQ,GACpB0E,EAAQ,EAAI1E,EAAQ,GACb0E,CACb,CACI,SAASE,EAAeZ,EAAK5D,EAAU,CACrC,IAAIE,EAAWmD,EAAc,IAAI,UAAU,EACvCoB,EAAevE,EAAWE,GAAUC,GACpCqE,EAAYrB,EAAc,IAAI,SAAS,EACvCsB,EAAgBD,EAAYrB,EAAc,IAAI,OAAO,EAAI7C,EAAgB+C,EAAK,MAAO,EACrFqB,EAAKF,EAAY9E,EAAQ,EAAI+E,EAAgB/E,EAAQ,GAAKgE,EAAM,GAAKe,EACrEzF,EAAIwF,EAAY9E,EAAQ,EAAIA,EAAQ,EAAIgE,EAAMe,EAC9CE,EAAW,IAAIJ,EAAa,CAC9B,MAAO,CACL,WAAY1E,EACZ,SAAUC,EACV,GAAIJ,EAAQ,GACZ,GAAIA,EAAQ,GACZ,UAAWE,EACX,GAAI8E,EACJ,EAAG1F,CACb,CACA,CAAO,EACD,OAAAwF,IAAcG,EAAS,GAAKzD,EAASmC,EAAK,IAAIC,EAAUI,CAAG,EAAIxC,GACxDyD,CACb,EACQvB,GAAgBF,KAClBG,EAAK,KAAKN,CAAO,EAAE,IAAI,SAAUW,EAAK,CACpC,IAAIkB,EAAMvB,EAAK,IAAIC,EAAUI,CAAG,EAChC,GAAIR,EAAa,CACf,IAAIkB,EAAUX,EAAcC,EAAK7D,CAAU,EAE3CgF,GAAkBT,EAAS,CACzB,SAAU,GAAG,MAAM,CAACQ,CAAG,EAAIpB,EAAY,CAAC,EAAIsB,EAAUF,EAAKrB,EAAaC,EAAa,EAAI,GAAK,KAAK,GAAK,EACzG,EAAEhF,CAAW,EACdmB,EAAM,IAAIyE,CAAO,EACjBf,EAAK,iBAAiBK,EAAKU,CAAO,CAC5C,CACQ,GAAIhB,EAAc,CAChB,IAAIuB,EAAWL,EAAeZ,EAAK7D,CAAU,EACzCkF,EAAS5B,EAAc,IAAI,MAAM,EACrC0B,GAAkBF,EAAU,CAC1B,MAAO,CACL,SAAUG,EAAUF,EAAKrB,EAAaC,EAAauB,CAAM,CACvE,CACW,EAAEvG,CAAW,EACdmB,EAAM,IAAIgF,CAAQ,EAGlBK,GAAgBxG,EAAY,YAAa6E,EAAK,SAAUK,EAAKiB,CAAQ,EACrE1B,EAAaS,CAAG,EAAIiB,CAC9B,CACO,CAAA,EAAE,OAAO,SAAUM,EAAQC,EAAQ,CAClC,IAAIN,EAAMvB,EAAK,IAAIC,EAAU2B,CAAM,EACnC,GAAI/B,EAAa,CACf,IAAIiC,EAAkBpC,EAAQ,iBAAiBmC,CAAM,EACjDE,EAAiBD,EAAkBA,EAAgB,SAAWtF,EAC9DuE,EAAUX,EAAcwB,EAAQG,CAAc,EAClDhB,EAAQ,SAAWgB,EACnBC,GAAoBjB,EAAS,CAC3B,SAAU,GAAG,MAAM,CAACQ,CAAG,EAAIpB,EAAY,CAAC,EAAIsB,EAAUF,EAAKrB,EAAaC,EAAa,EAAI,GAAK,KAAK,GAAK,EACzG,EAAEhF,CAAW,EACdmB,EAAM,IAAIyE,CAAO,EACjBf,EAAK,iBAAiB4B,EAAQb,CAAO,CAC/C,CACQ,GAAIhB,EAAc,CAChB,IAAIkC,EAAmBtC,EAAgBkC,CAAM,EACzCK,EAAmBD,EAAmBA,EAAiB,MAAM,SAAWzF,EACxE8E,EAAWL,EAAeW,EAAQM,CAAgB,EAClDR,EAAS5B,EAAc,IAAI,MAAM,EACrCkC,GAAoBV,EAAU,CAC5B,MAAO,CACL,SAAUG,EAAUF,EAAKrB,EAAaC,EAAauB,CAAM,CACvE,CACW,EAAEvG,CAAW,EACdmB,EAAM,IAAIgF,CAAQ,EAGlBK,GAAgBxG,EAAY,YAAa6E,EAAK,SAAU4B,EAAQN,CAAQ,EACxE1B,EAAagC,CAAM,EAAIN,CACjC,CACO,CAAA,EAAE,QAAS,EACZtB,EAAK,KAAK,SAAUK,EAAK,CACvB,IAAIC,EAAYN,EAAK,aAAaK,CAAG,EACjC8B,EAAgB7B,EAAU,SAAS,UAAU,EAC7C8B,EAAQD,EAAc,IAAI,OAAO,EACjCE,EAAYF,EAAc,IAAI,WAAW,EACzCG,EAAmBH,EAAc,IAAI,UAAU,EACnD,GAAItC,EAAa,CACf,IAAIkB,EAAUf,EAAK,iBAAiBK,CAAG,EACnCkC,EAAcvC,EAAK,cAAcK,EAAK,OAAO,EAC7CmC,EAAcD,EAAY,KAC9B,GAAIxB,aAAmB0B,GAAS,CAC9B,IAAIC,EAAY3B,EAAQ,MACxBA,EAAQ,SAAS4B,GAAO,CACtB,MAAOD,EAAU,MACjB,EAAGA,EAAU,EACb,EAAGA,EAAU,EACb,MAAOA,EAAU,MACjB,OAAQA,EAAU,MACnB,EAAEH,CAAW,CAAC,CAC3B,MACYxB,EAAQ,SAASwB,CAAW,EAC5BxB,EAAQ,OAAS,WAAaA,EAAQ,SAASyB,CAAW,EAE5DzB,EAAQ,SAAST,EAAU,SAAS,CAAC,UAAW,WAAW,CAAC,EAAE,cAAc,EACxES,EAAQ,MAAM,OAAS,QACzBA,EAAQ,SAAS,OAAQpD,EAAS8D,EAAUzB,EAAK,IAAIC,EAAUI,CAAG,EAAGH,EAAa,CAAC,EAAG,CAAC,EAAG,EAAI,CAAC,CAAC,EAElGa,EAAQ,eAAiB,EACzB6B,GAAyB7B,EAAST,CAAS,EAC3CuC,GAAoB9B,EAASqB,EAAOC,EAAWC,CAAgB,CACzE,CACQ,GAAIvC,EAAc,CAChB,IAAIuB,EAAW1B,EAAaS,CAAG,EAC/BiB,EAAS,SAAStB,EAAK,cAAcK,EAAK,OAAO,CAAC,EAClDiB,EAAS,SAAShB,EAAU,SAAS,CAAC,WAAY,WAAW,CAAC,EAAE,cAAc,EAC9EgB,EAAS,eAAiB,EAC1BsB,GAAyBtB,EAAUhB,CAAS,EAC5CuC,GAAoBvB,EAAUc,EAAOC,EAAWC,CAAgB,CAC1E,CACA,CAAO,EACD,KAAK,aAAe1C,EAEvB,EACD1D,EAAU,UAAU,cAAgB,SAAUf,EAAakB,EAAS,CAClE,IAAIyG,EAAc3H,EAAY,SAAS,QAAQ,EAC3C4H,EAAaD,EAAY,IAAI,MAAM,EACvC,GAAIC,EAAY,CACd,IAAIC,EAAaF,EAAY,IAAI,MAAM,EACnCG,EAAaH,EAAY,IAAI,MAAM,EACnCI,EAAeJ,EAAY,IAAI,cAAc,EAC7CK,EAAmBL,EAAY,IAAI,YAAY,EAC/CM,EAASpC,GAAaiC,EAAY5G,EAAQ,GAAK2G,EAAa,EAAIvH,EAAayH,EAAa,CAAC,EAAG7G,EAAQ,CAAC,EAAGA,EAAQ,GAAK2G,EAAa,EAAIvH,EAAayH,EAAa,CAAC,EAAG7G,EAAQ,CAAC,EAAG2G,EAAYA,EAAY,KAAMG,CAAgB,EACpOC,EAAO,GAAKN,EAAY,IAAI,WAAW,EAAI,EAAI,EAC/CM,EAAO,SAASN,EAAY,SAAS,WAAW,EAAE,cAAc,EAChE,KAAK,MAAM,IAAIM,CAAM,CAC3B,CACG,EACDlH,EAAU,UAAU,sBAAwB,SAAUf,EAAagB,EAASf,EAAKuC,EAAUtB,EAAS,CAClG,IAAI7B,EAAQ,KACRwF,EAAO7E,EAAY,QAAS,EAC5B8E,EAAWD,EAAK,aAAa,OAAO,EACpCpC,EAAS,CAACzC,EAAY,IAAI,KAAK,EAC/B0C,EAAS,CAAC1C,EAAY,IAAI,KAAK,EAC/BkI,EAAe,IAAIC,GACnBC,EAAc,CAAE,EAChBC,EAAe,CAAE,EACjBC,EAAetI,EAAY,mBAAoB,EAC/CuI,EAAmBvI,EAAY,IAAI,CAAC,UAAW,WAAW,CAAC,EAC/D6E,EAAK,KAAK,KAAK,KAAK,EAAE,IAAI,SAAUK,EAAK,CACvCkD,EAAYlD,CAAG,EAAI,IAAIf,GAAa,CAClC,OAAQ,EAChB,CAAO,EACDkE,EAAanD,CAAG,EAAI,IAAIf,GAAa,CACnC,OAAQ,EAChB,CAAO,CACF,CAAA,EAAE,OAAO,SAAUe,EAAKwB,EAAQ,CAC/B0B,EAAYlD,CAAG,EAAI7F,EAAM,UAAUqH,CAAM,EACzC2B,EAAanD,CAAG,EAAI7F,EAAM,WAAWqH,CAAM,CAC5C,CAAA,EAAE,QAAS,EACZ7B,EAAK,KAAK,SAAUK,EAAK,CACvB,IAAIC,EAAYN,EAAK,aAAaK,CAAG,EACjCxE,EAAQmE,EAAK,IAAIC,EAAUI,CAAG,EAC9BsD,EAAY,IAAIL,GAChBtE,EAAYrB,EAAS8D,EAAU5F,EAAO,CAAC+B,EAAQC,CAAM,EAAG,CAAC,EAAG,CAAC,EAAG,EAAI,CAAC,EACrE+F,EAAiBtD,EAAU,SAAS,OAAO,EAC/C,GAAIsD,EAAe,IAAI,MAAM,EAAG,CAC9B,IAAIC,EAAoBD,EAAe,IAAI,cAAc,EACrDE,EAASzH,EAAQ,GAAKZ,EAAaoI,EAAkB,CAAC,EAAGxH,EAAQ,CAAC,EAClE0H,EAAS1H,EAAQ,GAAKZ,EAAaoI,EAAkB,CAAC,EAAGxH,EAAQ,CAAC,EAClE2H,EAAUT,EAAYlD,CAAG,EAC7B2D,EAAQ,KAAK,CACX,GAAIN,EAAmB,EAAI,EAC3B,MAAOnE,GAAgBqE,EAAgB,CACrC,EAAGE,EACH,EAAGC,EACH,KAAM/D,EAAK,QAAQK,CAAG,EACtB,MAAO,SACP,cAAe,QAC3B,EAAa,CACD,aAAcrB,CACf,CAAA,CACX,CAAS,EACD2E,EAAU,IAAIK,CAAO,CAC7B,CACM,IAAIC,EAAkB3D,EAAU,SAAS,QAAQ,EACjD,GAAI2D,EAAgB,IAAI,MAAM,EAAG,CAC/B,IAAIC,EAAqBD,EAAgB,IAAI,cAAc,EACvDE,EAAU9H,EAAQ,GAAKZ,EAAayI,EAAmB,CAAC,EAAG7H,EAAQ,CAAC,EACpE+H,EAAU/H,EAAQ,GAAKZ,EAAayI,EAAmB,CAAC,EAAG7H,EAAQ,CAAC,EACpExB,EAAQY,EAAawI,EAAgB,IAAI,OAAO,EAAG5H,EAAQ,CAAC,EAC5Df,EAASG,EAAawI,EAAgB,IAAI,QAAQ,EAAG5H,EAAQ,CAAC,EAC9DgI,EAAclJ,EAAY,IAAI,CAAC,WAAY,MAAM,CAAC,EAAI6E,EAAK,cAAcK,EAAK,OAAO,EAAE,KAAOrB,EAC9FgF,EAAUR,EAAanD,CAAG,EAC1BiE,EAAcL,EAAgB,IAAI,WAAW,EACjDD,EAAQ,KAAK,CACX,GAAIN,EAAmB,EAAI,EAC3B,MAAOnE,GAAgB0E,EAAiB,CACtC,EAAGE,EACH,EAAGC,EACH,KAAMxI,GAAYC,EAAOyI,CAAW,EACpC,MAAO,MAAMzJ,CAAK,EAAI,KAAOA,EAC7B,OAAQ,MAAMS,CAAM,EAAI,KAAOA,EAC/B,MAAO,SACP,cAAe,QAC3B,EAAa,CACD,aAAc+I,CACf,CAAA,CACX,CAAS,EACDE,GAAuBP,EAAS,CAC9B,OAAQC,CAClB,EAAWpI,EAAO,SAAUA,EAAO,CACzB,OAAOD,GAAYC,EAAOyI,CAAW,CAC/C,CAAS,EACDb,GAAgBe,GAAkBR,EAAS3D,EAAKL,EAAM7E,EAAa,CACjE,kBAAmB,SAAUsJ,EAAgBC,EAAQC,GAAUC,GAAeC,EAAKC,EAAc,CAC/F,OAAOlJ,GAAYkJ,EAAeA,EAAa,kBAAoBjJ,EAAOyI,CAAW,CACjG,CACA,CAAS,EACDX,EAAU,IAAIK,CAAO,CAC7B,CACMX,EAAa,IAAIM,CAAS,CAChC,CAAK,EACD,KAAK,MAAM,IAAIN,CAAY,EAC3B,KAAK,UAAYE,EACjB,KAAK,WAAaC,CACnB,EACDtH,EAAU,KAAO,QACVA,CACT,EAAE6I,EAAS,EChgBPC,GAAgC,SAAU3K,EAAQ,CACpDC,GAAU0K,EAAkB3K,CAAM,EAClC,SAAS2K,GAAmB,CAC1B,IAAIxK,EAAQH,IAAW,MAAQA,EAAO,MAAM,KAAM,SAAS,GAAK,KAChE,OAAAG,EAAM,KAAOwK,EAAiB,KAC9BxK,EAAM,sBAAwB,YACvBA,CACX,CACE,OAAAwK,EAAiB,UAAU,eAAiB,SAAUC,EAAQ9I,EAAS,CACrE,OAAO+I,GAAuB,KAAM,CAAC,OAAO,CAAC,CAC9C,EACDF,EAAiB,KAAO,eACxBA,EAAiB,cAAgB,CAE/B,EAAG,EACH,QAAS,OAET,OAAQ,CAAC,MAAO,KAAK,EACrB,gBAAiB,GACjB,OAAQ,MACR,WAAY,IACZ,SAAU,IACV,UAAW,GAEX,IAAK,EAEL,IAAK,IAEL,YAAa,GAEb,SAAU,CAER,KAAM,GACN,SAAU,GACV,UAAW,CACT,MAAO,CAAC,CAAC,EAAG,SAAS,CAAC,EACtB,MAAO,EACf,CACK,EAED,SAAU,CAER,KAAM,GACN,QAAS,GACT,MAAO,GACP,SAAU,GACV,KAAM,EACP,EAED,UAAW,CAET,KAAM,GAEN,OAAQ,GACR,SAAU,GAEV,UAAW,CACT,MAAO,UACP,MAAO,EACP,KAAM,OACd,CACK,EAED,SAAU,CAER,KAAM,GAEN,YAAa,EAEb,OAAQ,EACR,SAAU,GAEV,UAAW,CACT,MAAO,UACP,MAAO,EACP,KAAM,OACd,CACK,EACD,UAAW,CACT,KAAM,GACN,SAAU,GAEV,MAAO,UACP,SAAU,GACV,OAAQ,CACT,EACD,QAAS,CACP,KAAM,KACN,aAAc,CAAC,EAAG,CAAC,EACnB,KAAM,GACN,UAAW,GACX,OAAQ,MACR,MAAO,EACP,WAAY,EACb,EACD,OAAQ,CACN,KAAM,GACN,UAAW,GACX,KAAM,EACN,KAAM,SACN,aAAc,CAAC,EAAG,CAAC,EACnB,WAAY,GACZ,UAAW,CACT,MAAO,OACP,YAAa,EACb,YAAa,SACrB,CACK,EACD,MAAO,CACL,KAAM,GAEN,aAAc,CAAC,EAAG,KAAK,EAEvB,MAAO,UACP,SAAU,GACV,eAAgB,EACjB,EACD,OAAQ,CACN,KAAM,GACN,gBAAiB,gBACjB,YAAa,EACb,YAAa,OACb,MAAO,IACP,OAAQ,KACR,QAAS,CAAC,EAAG,EAAE,EAEf,aAAc,CAAC,EAAG,KAAK,EAGvB,MAAO,UACP,SAAU,GACV,WAAY,OACZ,WAAY,GACZ,eAAgB,EACtB,CACG,EACMA,CACT,EAAEG,EAAW,EC1IN,SAASC,GAAQC,EAAW,CACjCA,EAAU,kBAAkBnJ,EAAS,EACrCmJ,EAAU,oBAAoBL,EAAgB,CAChD,0JClCIM,GAAA,CACFC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EAAA,CACD,EA0BD,MAAMC,EAAQC,EACd,QAAQ,IAAI,+BAAgC,CAC1C,UAAWD,EAAM,UACjB,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAAA,CACf,EACD,MAAME,EAAOC,EAEPC,EAAgBC,EAAS,IAAI,EAiP7BC,EAAgB,CACpB,UAhPyB,IAAM,6BACvB,QAAA,IAAI,uCAAwCN,EAAM,IAAI,EAE9D,MAAMO,IAAwBC,GAAAC,EAAAT,EAAM,SAAN,YAAAS,EAAc,QAAd,YAAAD,EAAqB,SAAS,4BAA6B,GAACE,GAAAC,EAAAX,EAAM,SAAN,YAAAW,EAAc,QAAd,MAAAD,EAAqB,SAAS,oCAClHE,IAAsBC,GAAAC,EAAAd,EAAM,SAAN,YAAAc,EAAc,QAAd,YAAAD,EAAqB,SAAS,6BAA4BE,GAAAC,EAAAhB,EAAM,SAAN,YAAAgB,EAAc,QAAd,YAAAD,EAAqB,SAAS,gDAEpH,eAAQ,IAAI,oBAAqB,CAC/B,sBAAAR,EACA,oBAAAK,CAAA,CACD,EAEM,CACL,KAAM,CACJ,KAAM,KACN,MAAO,KACP,OAAQ,MACR,IAAK,KACL,aAAc,EAChB,EACA,QAAS,CACP,QAAS,OACT,YAAa,CACX,KAAM,QACR,EACA,UAAYK,GAAgB,CACpB,MAAAhH,EAAOgH,EAAO,CAAC,EACrB,GAAIL,EACF,MAAO,GAAG3G,EAAK,IAAI,QAAQA,EAAK,KAAK,YAEvC,GAAIsG,EAAuB,CACnB,MAAAW,EAAQlB,EAAM,KAAuB,QAAUmB,EAAE,UAAYlH,EAAK,IAAI,EAC5E,MAAO,GAAGA,EAAK,IAAI,mBACEA,EAAK,MAAM,QAAQ,CAAC,CAAC,mBACtBiH,GAAA,YAAAA,EAAM,WAAY,CAAC,EAAA,CAEzC,MAAO,GAAGjH,EAAK,IAAI,KAAKA,EAAK,KAAK,WAAA,CAEtC,EACA,MAAO,CACL,KAAM,WACN,KAAO+F,EAAM,KAAuB,IAAIkB,GAAQA,EAAK,OAAO,EAC5D,OAAME,EAAApB,EAAM,SAAN,YAAAoB,EAAc,QAAS,GAC7B,UAAW,CACT,SAAU,EACV,OAAQR,EAAsB,GAAK,GACnC,SAAU,GACV,OAAQ,GACR,YAAa,GACb,UAAY9K,GAAkBA,EAAM,QAAQ,OAAQ,GAAG,EAAE,KAAK,CAChE,EACA,SAAU,CACR,eAAgB,GAChB,KAAM,EAAA,CAEV,EACA,MAAO,CACL,KAAM,QACN,OAAMuL,EAAArB,EAAM,SAAN,YAAAqB,EAAc,QAAS,qBAC7B,aAAc,SACd,QAAS,GACT,IAAK,EACL,UAAW,CACT,UAAW,CACT,MAAO,SAAA,CACT,CAEJ,EACA,OAAQ,CACN,CACE,KAAM,MACN,KACsBrB,EAAM,KAAuB,IAAYkB,GACvDX,EACKW,EAAK,WAAa,EAEpBA,EAAK,QACb,EAGH,UAAW,CACT,MAAQD,GAAgB,SACtB,GAAIL,EACK,MAAA,UAET,GAAIL,EAAuB,CAEzB,MAAMzK,EAAQmL,EAAO,KACrB,OAAInL,GAAS,GAAY,UACrBA,GAAS,GAAY,UACrBA,GAAS,GAAY,UAClB,SAAA,CAET,OAAI0K,GAAAC,EAAAT,EAAM,SAAN,YAAAS,EAAc,QAAd,MAAAD,EAAqB,SAAS,sBACzB,UAEF,SAAA,CAEX,EACA,SAAUI,EAAsB,MAAQ,MACxC,MAAO,CACL,MAAMU,GAAAC,EAAAvB,EAAM,SAAN,YAAAuB,EAAc,QAAd,YAAAD,EAAqB,SAAS,yBACpC,SAAU,MACV,UAAW,MACX,SAAU,EACZ,EACA,SAAU,CACR,UAAW,CACT,MAAO,SAAA,CACT,CACF,CACF,CAEJ,CACF,EAgIE,UA9HyB,KAAO,CAChC,QAAS,CACP,QAAS,OACT,UAAW,iBACb,EACA,OAAQ,CACN,OAAQ,WACR,KAAM,MACR,EACA,OAAQ,CACN,CACE,KAAM,MACN,OAAQ,MACR,KAAOtB,EAAM,KAAuB,IAAakB,IAAA,CAC/C,KAAMA,EAAK,QACX,MAAOA,EAAK,QAAA,EACZ,EACF,SAAU,CACR,UAAW,CACT,WAAY,GACZ,cAAe,EACf,YAAa,oBAAA,CACf,CACF,CACF,CACF,GAsGA,YAnG2B,IAAM,aAC3B,MAAAM,EAAYxB,EAAM,KAAK,CAAC,EACxBlK,EAAQ0L,EAAU,MAClBC,EAAMD,EAAU,IAChBE,EAAa5L,EAAQ2L,EAEpB,MAAA,CACL,OAAQ,CACN,CACE,KAAM,QACN,WAAY,IACZ,SAAU,EACV,MAAKhB,EAAAT,EAAM,SAAN,YAAAS,EAAc,MAAO,EAC1B,MAAKD,EAAAR,EAAM,SAAN,YAAAQ,EAAc,MAAO,IAC1B,YAAa,GACb,OAAQ,OACR,SAAU,CACR,SAAU,GACV,UAAW,CACT,MAAO,GACP,MAAO,CACL,CAACkB,EAAY,CACX,KAAM,SACN,EAAG,EACH,EAAG,EACH,GAAI,EACJ,GAAI,EACJ,WAAY,CACV,CACE,OAAQ,EACR,MAAO,SACT,EACA,CACE,OAAQ,GACR,MAAO,SACT,EACA,CACE,OAAQ,GACR,MAAO,SACT,EACA,CACE,OAAQ,EACR,MAAO,SAAA,CACT,CACF,CACD,EACD,CAAC,EAAG,SAAS,CAAA,CACf,CAEJ,EACA,QAAS,CACP,KAAM,EACR,EACA,SAAU,CACR,KAAM,EACR,EACA,UAAW,CACT,KAAM,EACR,EACA,UAAW,CACT,KAAM,GACN,SAAU,GACV,MAAO,UACP,SAAU,GACV,UAAW,SAAS5L,EAAe,CACjC,OAAIA,IAAU0L,EAAU,IAAY,GAAGA,EAAU,GAAG,GAChD1L,IAAU,EAAU,IACjB,EAAA,CAEX,EACA,MAAO,CACL,KAAM,GACN,aAAc,CAAC,EAAG,KAAK,EACvB,SAAU,GACV,MAAO,UACP,YAAW6K,EAAAX,EAAM,SAAN,YAAAW,EAAc,QAAS,OACpC,EACA,OAAQ,CACN,KAAM,GACN,aAAc,CAAC,EAAG,IAAI,EACtB,SAAU,GACV,WAAY,OACZ,MAAO,UACP,UAAW,SAAS7K,EAAe,CAC1B,OAAA,KAAK,MAAMA,CAAK,CAAA,CAE3B,EACA,KAAM,CAAC,CACL,MAAO0L,EAAU,MACjB,OAAMd,EAAAV,EAAM,SAAN,YAAAU,EAAc,QAAS,OAC9B,CAAA,CAAA,CACH,CAEJ,CACF,CAMA,EAGAiB,GACE,IAAM,CAAC3B,EAAM,KAAMA,EAAM,KAAMA,EAAM,MAAM,EAC3C,IAAM,QACAS,EAAAL,EAAc,QAAd,MAAAK,EAAqB,QACTL,EAAA,MAAM,MAAM,MAAM,EAChCA,EAAc,MAAM,MAAM,UAAUE,EAAcN,EAAM,IAAI,GAAG,EAEnE,EACA,CAAE,KAAM,EAAK,CACf,EAEA4B,GAAU,IAAM,CACd1B,EAAK,QAAQ,CAAA,CACd,EAED2B,GAAgB,IAAM,QAChBpB,EAAAL,EAAc,QAAd,MAAAK,EAAqB,QACTL,EAAA,MAAM,MAAM,QAAQ,EAClCA,EAAc,MAAQ,KACxB,CACD,EAEK,MAAA0B,EAAmBC,GAAe,CACtC3B,EAAc,MAAQ2B,CACxB,geCtTA,MAAM/B,EAAQC,EAId,OAAA2B,GAAU,IAAM,CACN,QAAA,IAAI,yCAA0C5B,EAAM,SAAS,CAAA,CACtE,EAED2B,GAAM,IAAM3B,EAAM,UAAYgC,GAAiB,CACrC,QAAA,IAAI,wCAAyCA,CAAY,CAAA,CAClE,0gBC8CM,SAASC,IAAU,CAClB,MAAAC,EAAW7B,EAAe,EAAE,EAC5B8B,EAAQ9B,EAAI,EAAE,EACd+B,EAAmB/B,EAAmB,IAAI,EAC1CgC,EAAYhC,EAAI,EAAK,EACrBiC,EAAQjC,EAAmB,IAAI,EAG/BkC,EAAgB,CACpB,mEACA,0CACA,oDACA,iEACF,EAEMC,EAA2C,CAC/C,CACE,SAAU,mBACV,UAAW,CACT,wDACA,wDACA,mEACA,0EAAA,CAEJ,EACA,CACE,SAAU,qBACV,UAAW,CACT,+CACA,0CAAA,CAEJ,EACA,CACE,SAAU,kBACV,UAAW,CACT,6DACA,iDAAA,CAEJ,EACA,CACE,SAAU,iBACV,UAAW,CACT,oCACA,+CAAA,CAEJ,EACA,CACE,SAAU,eACV,UAAW,CACT,yCACA,6CAAA,CACF,CAEJ,EAEMC,EAAsBxI,GACnBA,EAAK,IAAaiH,IAAA,CACvB,MAAOA,EAAK,OAASA,EAAK,OAAS,EACnC,IAAKA,EAAK,KAAO,GAAA,EACjB,EAGEwB,EAA0BC,GAC1BA,EAAc,OAAS,cAClB,CACL,GAAGA,EACH,KAAMF,EAAmBE,EAAc,IAA0B,CACnE,EAEKA,EA8IF,MAAA,CACL,SAAAT,EACA,MAAAC,EACA,iBAAAC,EACA,cAAAG,EACA,qBAAAC,EACA,UAAAH,EACA,MAAAC,EACA,YAnJkB,MAAOM,GAAiB,iBACtC,GAACA,EAAK,KAAK,EAEX,GAAA,CACFP,EAAU,MAAQ,GAClBC,EAAM,MAAQ,KAGR,MAAAO,EAAgB,KAAK,IAAI,EACtBX,EAAA,MAAM,KAAK,CAAE,GAAIW,EAAe,KAAAD,EAAM,OAAQ,OAAQ,EAC/DT,EAAM,MAAQ,GAGR,MAAAW,EAAgB,KAAK,IAAA,EAAQ,EACnCZ,EAAS,MAAM,KAAK,CAClB,GAAIY,EACJ,KAAM,oCACN,OAAQ,IAAA,CACT,EAGD,MAAMC,EAAW,MAAM,MAAM,gCAAyC,CACpE,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAU,aAAa,QAAQ,cAAc,CAAC,EACjE,EACA,KAAM,KAAK,UAAU,CAAE,MAAOH,CAAM,CAAA,CAAA,CACrC,EAEG,GAAA,CAACG,EAAS,GAAI,CACV,MAAAC,EAAY,MAAMD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAM,cAAcA,EAAS,MAAM,MAAMC,CAAS,EAAE,CAAA,CAG1D,MAAAC,GAASxC,EAAAsC,EAAS,OAAT,YAAAtC,EAAe,YAC9B,GAAI,CAACwC,EAAc,MAAA,IAAI,MAAM,4BAA4B,EAGnD,MAAAC,EAAehB,EAAS,MAAM,UAAeiB,GAAAA,EAAE,KAAOL,CAAa,EACzE,GAAII,IAAiB,GACnB,OAAa,CACX,KAAM,CAAE,KAAAE,EAAM,MAAAtN,CAAU,EAAA,MAAMmN,EAAO,KAAK,EACtC,GAAAG,EAAM,MAIJ,MAAAC,EADQ,IAAI,cAAc,OAAOvN,CAAK,EACxB,MAAM;AAAA,CAAI,EAAE,OAAOwN,GAAQA,EAAK,MAAM,EAG1D,UAAWA,KAAQD,EAAO,CAEpB,GAAA,CAACC,EAAK,WAAW,GAAG,GAAK,CAACA,EAAK,SAAS,GAAG,EAAG,CACxC,QAAA,KAAK,8BAA+BA,CAAI,EAChD,QAAA,CAGE,GAAA,CACE,IAAArJ,EACA,GAAA,CACKA,EAAA,KAAK,MAAMqJ,CAAI,QACfC,EAAY,CACnB,QAAQ,MAAM,uBAAwBA,EAAY,QAASD,CAAI,EAC/D,QAAA,CAGF,GAAI,CAACrJ,EAAM,SAEP,GAAAA,EAAK,SAAW,aACTiI,EAAA,MAAMgB,CAAY,EAAI,CAC7B,GAAIJ,EACJ,KAAM,6BACN,OAAQ,IACV,UACS7I,EAAK,SAAW,WAAY,CACrC,MAAMuJ,EAASvJ,EAAK,KACpB,IAAI0I,GAEAnC,EAAAgD,EAAO,WAAP,MAAAhD,EAAiB,gBACnB,QAAQ,IAAI,0BAA2BgD,EAAO,SAAS,aAAa,EACpDb,EAAAD,EAAuBc,EAAO,SAAS,aAAa,EAC5D,QAAA,IAAI,kCAAmCb,CAAa,GAG9D,MAAMc,EAAiBD,EAAO,aAAa7C,EAAA6C,EAAO,WAAP,YAAA7C,EAAiB,WAEtD+C,EAA0B,CAC9B,GAAIZ,EACJ,OAAMpC,EAAA8C,EAAO,WAAP,YAAA9C,EAAiB,UAAW,yBAClC,OAAQ,KACR,cAAAiC,EACA,UAAWc,EACX,SAAUD,EAAO,QACnB,EAGItB,EAAS,MAAM,OAAS,KAC1BA,EAAS,MAAQA,EAAS,MAAM,MAAM,GAAG,GAGlCA,EAAA,MAAMgB,CAAY,EAAIQ,CAAA,MACtBzJ,EAAK,SAAW,UAChBiI,EAAA,MAAMgB,CAAY,EAAI,CAC7B,GAAIJ,EACJ,KAAM7I,EAAK,QACX,OAAQ,IACV,EACAqI,EAAM,MAAQrI,EAAK,eAEd0J,EAAG,CACF,QAAA,MAAM,uBAAwBA,CAAC,CAAA,CACzC,CACF,QAIGC,EAAU,CACT,QAAA,MAAM,cAAeA,CAAG,EAChC,MAAMC,IAAgBhD,GAAAC,EAAA8C,GAAA,YAAAA,EAAK,WAAL,YAAA9C,EAAe,OAAf,YAAAD,EAAqB,SAAS+C,GAAA,YAAAA,EAAK,UAAW,kDACpEtB,EAAM,MAAQuB,EACd3B,EAAS,MAAM,KAAK,CAClB,GAAI,KAAK,IAAI,EACb,KAAM2B,EACN,OAAQ,IAAA,CACT,CAAA,QACD,CACAxB,EAAU,MAAQ,EAAA,CAEtB,EAoBE,oBAlB2ByB,GAAqB,CAChD1B,EAAiB,MAAQ0B,CAC3B,EAiBE,oBAf2BC,GAAqB,CAChD5B,EAAM,MAAQ4B,EACd3B,EAAiB,MAAQ,IAC3B,CAaA,CACF,CC3SA,MAAe4B,GAAA,k8CCwBT,MAAAC,EAAkB5D,EAAI,EAAK,EAC3B6D,EAAgB7D,EAA2B,IAAI,EAC/C8D,EAAiB9D,EAA2B,IAAI,EAChD+D,EAAsB/D,EAAI,EAAI,EAG9BgE,EAAc,IAAM,CACxB,GAAIF,EAAe,MAAO,CACxB,KAAM,CAAE,UAAAG,EAAW,aAAAC,EAAc,aAAAC,GAAiBL,EAAe,MAC3DM,EAAaF,EAAeD,EAAYE,EAAe,GAC7DJ,EAAoB,MAAQ,CAACK,CAAA,CAEjC,EAGM9C,GAAAsC,EAAkBS,GAAoB,CACtCA,GACFC,GAAS,IAAM,CACDN,EAAA,CAAA,CACb,CACH,CACD,EAGK,KAAA,CACJ,SAAAnC,EACA,MAAAC,EACA,cAAAI,EACA,qBAAAC,EACA,UAAAH,EACA,MAAAC,EACA,YAAAsC,EACA,oBAAAC,GACE5C,GAAQ,EAEN6C,EAAiB,SAAY,CACjC,MAAMH,GAAS,EACf,WAAW,IAAM,CACf,GAAIT,EAAc,MAAO,CACjB,MAAAK,EAAeL,EAAc,MAAM,aACzCA,EAAc,MAAM,SAAS,CAC3B,IAAKK,EACL,SAAU,QAAA,CACX,CAAA,GAEF,GAAG,CACR,EAEMQ,EAAsBH,EACtBI,EAAqB,MAAOpC,GAAiB,CACjD,MAAMmC,EAAoBnC,CAAI,EAC9B,MAAMkC,EAAe,CACvB,EAEAlD,GAAU,IAAM,CACCkD,EAAA,CAAA,CAChB,EAEK,MAAAG,EAAkBtB,GAAqB,CACvCA,EAAE,MAAQ,SAAW,CAACA,EAAE,UAAY,CAACtB,EAAU,QACjDsB,EAAE,eAAe,EACjBqB,EAAmB7C,EAAM,KAAK,EAElC;;;;","x_google_ignoreList":[0,1,2,3]}