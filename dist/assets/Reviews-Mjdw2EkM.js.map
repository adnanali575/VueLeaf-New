{"version":3,"file":"Reviews-Mjdw2EkM.js","sources":["../../src/stores/templates.ts","../../src/services/ai.ts","../../src/services/forum.ts","../../src/components/dashboard/reviews/PostingStatus.vue","../../src/components/dashboard/reviews/ResponseDialog.vue","../../src/components/dashboard/reviews/FlagDialog.vue","../../src/views/dashboard/Reviews.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport interface ResponseTemplate {\n  id: number\n  name: string\n  content: string\n  category: 'positive' | 'negative' | 'neutral' | 'quality' | 'general'\n  variables?: string[]\n}\n\nexport const useTemplatesStore = defineStore('templates', () => {\n  // State\n  const templates = ref<ResponseTemplate[]>([\n    {\n      id: 1,\n      name: 'Positive Review Response',\n      content: 'Thank you for your positive feedback, {customer_name}! We\\'re thrilled to hear that you had a great experience with {product_name}. Your satisfaction is our top priority, and we appreciate you taking the time to share your thoughts.',\n      category: 'positive',\n      variables: ['customer_name', 'product_name']\n    },\n    {\n      id: 2,\n      name: 'Quality Concern Response',\n      content: 'Dear {customer_name}, we apologize for any issues you\\'ve experienced with {product_name}. We take quality concerns seriously and would like to learn more about your experience. Please contact our support team at support@example.com with your order details so we can address this properly.',\n      category: 'negative',\n      variables: ['customer_name', 'product_name']\n    },\n    {\n      id: 3,\n      name: 'Neutral Feedback Response',\n      content: 'Hello {customer_name}, thank you for sharing your feedback about {product_name}. We value your input and are always looking for ways to improve. If you have any specific suggestions, we\\'d love to hear them.',\n      category: 'neutral',\n      variables: ['customer_name', 'product_name']\n    }\n  ])\n\n  // Actions\n  function addTemplate(template: Omit<ResponseTemplate, 'id'>) {\n    const newId = Math.max(...templates.value.map(t => t.id)) + 1\n    templates.value.push({\n      ...template,\n      id: newId\n    })\n  }\n\n  function updateTemplate(id: number, updates: Partial<ResponseTemplate>) {\n    const index = templates.value.findIndex(t => t.id === id)\n    if (index !== -1) {\n      templates.value[index] = {\n        ...templates.value[index],\n        ...updates\n      }\n    }\n  }\n\n  function deleteTemplate(id: number) {\n    templates.value = templates.value.filter(t => t.id !== id)\n  }\n\n  function getTemplatesByCategory(category: ResponseTemplate['category']) {\n    return templates.value.filter(t => t.category === category)\n  }\n\n  function fillTemplate(template: ResponseTemplate, variables: Record<string, string>) {\n    let content = template.content\n    Object.entries(variables).forEach(([key, value]) => {\n      content = content.replace(new RegExp(`{${key}}`, 'g'), value)\n    })\n    return content\n  }\n\n  return {\n    templates,\n    addTemplate,\n    updateTemplate,\n    deleteTemplate,\n    getTemplatesByCategory,\n    fillTemplate\n  }\n})\n","import type { ReviewMention } from '@/types/reviews'\nimport axios from '@/lib/axios'\n\ninterface AISuggestion {\n  content: string\n  confidence: number\n  tone: 'professional' | 'friendly' | 'apologetic' | 'grateful'\n}\n\nasync function generateResponse(review: ReviewMention): Promise<string> {\n  // Analyze review content using Claude\n  const prompt = `\nReview: \"${review.content}\"\nAuthor: ${review.author}\nContext: This is a ${review.sentiment} review about ${review.keyword_term || 'our products'}.\n\nYou are a cannabis industry expert with comprehensive knowledge across cultivation, genetics, products, equipment, retail, and industry trends. Generate a response that:\n\n1. Shows deep understanding of the specific cannabis topic in the review\n2. Uses precise technical terminology relevant to that topic\n3. Provides helpful insights based on industry expertise\n4. Maintains professionalism while showing genuine concern\n5. Stays under 500 characters\n6. Builds credibility through demonstrated knowledge\n7. Addresses the reviewer's specific experience and concerns\n8. Avoids generic responses\n\nImportant: First identify the exact cannabis topic being discussed (growing, products, equipment, retail, etc.), then respond with relevant expertise for that specific area. Focus on being genuinely helpful with real industry knowledge.\n\nResponse format: Direct response text only, no explanations.\n`\n\n  try {\n    // Call Claude API endpoint using configured axios instance\n    const response = await axios.post('/ai/generate_response/', {\n      prompt,\n      review_id: review.id,\n    })\n\n    if (!response.data) {\n      throw new Error('Failed to generate AI response')\n    }\n\n    const data = response.data\n    return data.response\n  } catch (error) {\n    console.error('Error generating AI response')\n    // Fallback to a safe, generic response\n    return `Thank you for sharing your experience with ${review.keyword_term || 'our products'}. We appreciate your detailed feedback and will use it to improve our services.`\n  }\n}\n\nexport async function getResponseSuggestion(review: ReviewMention): Promise<AISuggestion> {\n  const response = await generateResponse(review)\n  \n  // Determine tone based on content analysis\n  let tone: AISuggestion['tone'] = 'professional'\n  if (response.toLowerCase().includes('thank you') || response.toLowerCase().includes('appreciate')) {\n    tone = 'grateful'\n  } else if (response.toLowerCase().includes('sorry') || response.toLowerCase().includes('apologize')) {\n    tone = 'apologetic'\n  } else if (response.toLowerCase().includes('help') || response.toLowerCase().includes('assist')) {\n    tone = 'friendly'\n  }\n\n  return {\n    content: response,\n    confidence: 0.95, // Higher confidence with Claude\n    tone\n  }\n}\n\nexport async function improveResponse(content: string, tone: AISuggestion['tone']): Promise<string> {\n  // TODO: Replace with actual AI service call\n  const toneModifiers: Record<AISuggestion['tone'], string[]> = {\n    professional: ['respectfully', 'certainly', 'we understand'],\n    friendly: ['thanks so much', 'we appreciate', 'great to hear'],\n    apologetic: ['we sincerely apologize', 'we regret', 'please allow us'],\n    grateful: ['we truly appreciate', 'thank you so much', 'we are grateful']\n  }\n\n  // Simple tone adjustment by adding tone-specific phrases\n  const modifiers = toneModifiers[tone]\n  const modifier = modifiers[Math.floor(Math.random() * modifiers.length)]\n  \n  return content.replace(/^/, `${modifier}, `)\n}\n\nexport async function checkCompliance(content: string): Promise<{\n  compliant: boolean\n  issues?: string[]\n  suggestions?: string[]\n}> {\n  // Simple compliance rules\n  const rules = [\n    {\n      test: (text: string) => text.length > 500,\n      issue: 'Response exceeds 500 characters',\n      suggestion: 'Try to be more concise'\n    },\n    {\n      test: (text: string) => /\\b(guarantee|promise|ensure)\\b/i.test(text),\n      issue: 'Avoid making absolute guarantees',\n      suggestion: 'Use softer language like \"aim to\" or \"strive to\"'\n    },\n    {\n      test: (text: string) => /\\b(never|always|definitely)\\b/i.test(text),\n      issue: 'Avoid absolute terms',\n      suggestion: 'Use more flexible language'\n    },\n    {\n      test: (text: string) => /\\b(stupid|idiot|dumb|crazy)\\b/i.test(text),\n      issue: 'Inappropriate or unprofessional language detected',\n      suggestion: 'Maintain professional tone'\n    }\n  ]\n\n  const issues: string[] = []\n  const suggestions: string[] = []\n\n  rules.forEach(rule => {\n    if (rule.test(content)) {\n      issues.push(rule.issue)\n      suggestions.push(rule.suggestion)\n    }\n  })\n\n  return {\n    compliant: issues.length === 0,\n    issues: issues.length > 0 ? issues : undefined,\n    suggestions: suggestions.length > 0 ? suggestions : undefined\n  }\n}\n","import axios from '@/lib/axios'\nimport type { PostingAttempt } from '@/types/reviews'\n\nexport interface ForumCredentials {\n  id: number\n  forum: string\n  username: string\n  status: string\n}\n\nexport async function getForumCredentials() {\n  return axios.get<ForumCredentials[]>('/forum-credentials/')\n}\n\nexport async function createPostingAttempt(data: {\n  review_id: number\n  credentials_id: number\n  response_text: string\n  scheduled_time?: string\n}) {\n  return axios.post<PostingAttempt>('/posting-attempts/', data)\n}\n\nexport async function getPostingStatus(attemptId: number) {\n  return axios.get<PostingAttempt>(`/posting-attempts/${attemptId}/status/`)\n}\n\nexport async function retryPosting(attemptId: number) {\n  return axios.post<PostingAttempt>(`/posting-attempts/${attemptId}/retry/`)\n}\n\nexport async function getPostingStats() {\n  return axios.get('/posting-attempts/stats/')\n}","<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted, watch } from 'vue'\r\nimport { AlertCircle, CheckCircle2, Clock, RefreshCw, XCircle } from 'lucide-vue-next'\r\nimport type { PostingAttempt } from '@/types/reviews'\r\nimport { getPostingStatus, retryPosting } from '@/services/forum'\r\nimport type { Component } from 'vue'\r\n\r\nconst props = defineProps<{\r\n  attemptId: number\r\n}>()\r\n\r\nconst attempt = ref<PostingAttempt | null>(null)\r\nconst isLoading = ref(false)\r\nconst pollingInterval = ref<number | null>(null)\r\n\r\n// Status icon mapping\r\nconst statusIcons: Record<PostingAttempt['status'], Component> = {\r\n  pending: Clock,\r\n  in_progress: RefreshCw,\r\n  success: CheckCircle2,\r\n  failed: XCircle,\r\n  scheduled: Clock\r\n}\r\n\r\n// Status color mapping\r\nconst statusColors: Record<PostingAttempt['status'], string> = {\r\n  pending: 'text-yellow-500',\r\n  in_progress: 'text-blue-500',\r\n  success: 'text-green-500',\r\n  failed: 'text-red-500',\r\n  scheduled: 'text-purple-500'\r\n}\r\n\r\n// Error type display mapping\r\nconst errorTypeDisplay: Record<NonNullable<PostingAttempt['error_type']>, string> = {\r\n  login_failed: 'Login Failed',\r\n  thread_locked: 'Thread Locked',\r\n  permission_denied: 'Permission Denied',\r\n  network_error: 'Network Error',\r\n  post_rejected: 'Post Rejected',\r\n  other: 'Other Error'\r\n}\r\n\r\nasync function fetchStatus() {\r\n  if (!props.attemptId) return\r\n  \r\n  try {\r\n    isLoading.value = true\r\n    const response = await getPostingStatus(props.attemptId)\r\n    attempt.value = response.data\r\n    \r\n    // Stop polling if we reach a final state\r\n    if (['success', 'failed'].includes(response.data.status)) {\r\n      stopPolling()\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching posting status:', error)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nfunction startPolling() {\r\n  if (pollingInterval.value) return\r\n  \r\n  // Poll every 5 seconds\r\n  pollingInterval.value = window.setInterval(fetchStatus, 5000)\r\n}\r\n\r\nfunction stopPolling() {\r\n  if (pollingInterval.value) {\r\n    clearInterval(pollingInterval.value)\r\n    pollingInterval.value = null\r\n  }\r\n}\r\n\r\nasync function handleRetry() {\r\n  if (!props.attemptId) return\r\n  \r\n  try {\r\n    isLoading.value = true\r\n    await retryPosting(props.attemptId)\r\n    await fetchStatus()\r\n    startPolling()\r\n  } catch (error) {\r\n    console.error('Error retrying posting:', error)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchStatus()\r\n  startPolling()\r\n})\r\n\r\nwatch(() => props.attemptId, (newId) => {\r\n  if (newId) {\r\n    fetchStatus()\r\n    startPolling()\r\n  } else {\r\n    stopPolling()\r\n  }\r\n})\r\n\r\n// Clean up polling on component unmount\r\nonUnmounted(() => {\r\n  stopPolling()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"attempt\" class=\"rounded-lg border p-4 space-y-3\">\r\n    <!-- Status Header -->\r\n    <div class=\"flex items-center justify-between\">\r\n      <div class=\"flex items-center space-x-2\">\r\n        <component\r\n          :is=\"statusIcons[attempt.status]\"\r\n          :class=\"[\r\n            statusColors[attempt.status],\r\n            { 'animate-spin': attempt.status === 'in_progress' }\r\n          ]\"\r\n          class=\"h-5 w-5\"\r\n        />\r\n        <span class=\"font-medium capitalize\">{{ attempt.status.replace('_', ' ') }}</span>\r\n      </div>\r\n      <span class=\"text-sm text-gray-500\">\r\n        {{ new Date(attempt.created_at).toLocaleString() }}\r\n      </span>\r\n    </div>\r\n\r\n    <!-- Forum Info -->\r\n    <div class=\"text-sm text-gray-600\">\r\n      <p>Forum: {{ attempt.forum_name }}</p>\r\n      <p>Username: {{ attempt.forum_username }}</p>\r\n    </div>\r\n\r\n    <!-- Error Details -->\r\n    <div v-if=\"attempt.error_type\" class=\"bg-red-50 border border-red-100 rounded p-3\">\r\n      <div class=\"flex items-start space-x-2\">\r\n        <AlertCircle class=\"h-5 w-5 text-red-500 mt-0.5\" />\r\n        <div>\r\n          <p class=\"font-medium text-red-800\">\r\n            {{ errorTypeDisplay[attempt.error_type] }}\r\n          </p>\r\n          <p class=\"mt-1 text-sm text-red-700\">\r\n            {{ attempt.error_message }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Actions -->\r\n    <div v-if=\"attempt.status === 'failed'\" class=\"flex justify-end\">\r\n      <button\r\n        @click=\"handleRetry\"\r\n        :disabled=\"isLoading\"\r\n        class=\"flex items-center px-3 py-1.5 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n      >\r\n        <RefreshCw v-if=\"isLoading\" class=\"mr-2 h-4 w-4 animate-spin\" />\r\n        <RefreshCw v-else class=\"mr-2 h-4 w-4\" />\r\n        Retry (Attempt {{ attempt.retry_count + 1 }})\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue'\r\nimport { MessageCircle, Wand2, X, Save, AlertTriangle } from 'lucide-vue-next'\r\nimport { useTemplatesStore, type ResponseTemplate } from '@/stores/templates'\r\nimport type { ReviewMention } from '@/types/reviews'\r\nimport { getResponseSuggestion, checkCompliance } from '@/services/ai'\r\nimport { createPostingAttempt } from '@/services/forum'\r\nimport PostingStatus from './PostingStatus.vue'\r\n\r\nconst props = defineProps<{\r\n  review: ReviewMention\r\n  show: boolean\r\n  credentials: Array<{\r\n    id: number\r\n    forum: string\r\n    username: string\r\n    status: string\r\n  }>\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close'): void\r\n  (e: 'submit', response: string): void\r\n}>()\r\n\r\nconst templatesStore = useTemplatesStore()\r\nconst responseContent = ref('')\r\nconst selectedTemplateId = ref<number | ''>('')\r\nconst selectedCredentialsId = ref<number | ''>('')\r\nconst showSaveTemplate = ref(false)\r\nconst newTemplateName = ref('')\r\nconst isLoading = ref(false)\r\nconst complianceIssues = ref<string[]>([])\r\nconst showComplianceWarning = ref(false)\r\nconst postingAttemptId = ref<number | null>(null)\r\n\r\nconst templates = computed(() => templatesStore.templates)\r\n\r\n// Get suggested template category based on review sentiment\r\nconst suggestedCategory = computed((): ResponseTemplate['category'] => {\r\n  if (!props.review?.sentiment) return 'general'\r\n  return (props.review.sentiment === 'positive' || \r\n          props.review.sentiment === 'negative' || \r\n          props.review.sentiment === 'neutral') \r\n    ? props.review.sentiment \r\n    : 'general'\r\n})\r\n\r\n// Filter templates by sentiment for quicker access\r\nconst suggestedTemplates = computed(() => \r\n  templatesStore.getTemplatesByCategory(suggestedCategory.value)\r\n)\r\n\r\n// Filter credentials for current review's source\r\nconst availableCredentials = computed(() => \r\n  props.credentials.filter(c => c.forum === props.review.source && c.status === 'active')\r\n)\r\n\r\nasync function handleTemplateSelect(event: Event) {\r\n  const select = event.target as HTMLSelectElement\r\n  const templateId = Number(select.value)\r\n  if (templateId) {\r\n    const template = templates.value.find(t => t.id === templateId)\r\n    if (template) {\r\n      const variables = {\r\n        customer_name: props.review.author,\r\n        product_name: props.review.keyword_term || 'our product'\r\n      }\r\n      responseContent.value = templatesStore.fillTemplate(template, variables)\r\n      await checkResponseCompliance()\r\n    }\r\n  }\r\n}\r\n\r\nasync function checkResponseCompliance() {\r\n  const { compliant, issues } = await checkCompliance(responseContent.value)\r\n  if (!compliant && issues) {\r\n    complianceIssues.value = issues\r\n    showComplianceWarning.value = true\r\n  } else {\r\n    complianceIssues.value = []\r\n    showComplianceWarning.value = false\r\n  }\r\n}\r\n\r\nasync function handleSubmit() {\r\n  if (!responseContent.value.trim() || !selectedCredentialsId.value) return\r\n  \r\n  const { compliant, issues } = await checkCompliance(responseContent.value)\r\n  if (!compliant) {\r\n    complianceIssues.value = issues || []\r\n    showComplianceWarning.value = true\r\n    return\r\n  }\r\n\r\n  try {\r\n    isLoading.value = true\r\n    \r\n    // Create posting attempt\r\n    const response = await createPostingAttempt({\r\n      review_id: props.review.id,\r\n      credentials_id: selectedCredentialsId.value,\r\n      response_text: responseContent.value\r\n    })\r\n    \r\n    postingAttemptId.value = response.data.id\r\n    emit('submit', responseContent.value)\r\n    \r\n  } catch (error) {\r\n    console.error('Error creating posting attempt:', error)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nfunction saveAsTemplate() {\r\n  if (newTemplateName.value && responseContent.value) {\r\n    templatesStore.addTemplate({\r\n      name: newTemplateName.value,\r\n      content: responseContent.value,\r\n      category: suggestedCategory.value\r\n    })\r\n    showSaveTemplate.value = false\r\n    newTemplateName.value = ''\r\n  }\r\n}\r\n\r\nasync function getAISuggestion() {\r\n  isLoading.value = true\r\n  try {\r\n    const suggestion = await getResponseSuggestion(props.review)\r\n    responseContent.value = suggestion.content\r\n    await checkResponseCompliance()\r\n  } catch (error) {\r\n    console.error('Error getting AI suggestion:', error)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nfunction resetForm() {\r\n  responseContent.value = ''\r\n  selectedTemplateId.value = ''\r\n  selectedCredentialsId.value = ''\r\n  showSaveTemplate.value = false\r\n  newTemplateName.value = ''\r\n  complianceIssues.value = []\r\n  showComplianceWarning.value = false\r\n  postingAttemptId.value = null\r\n}\r\n\r\nfunction handleClose() {\r\n  resetForm()\r\n  emit('close')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"show\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n    <div class=\"bg-white rounded-lg max-w-2xl w-full\">\r\n      <!-- Header -->\r\n      <div class=\"bg-green-700 p-6 rounded-t-lg flex items-center justify-between\">\r\n        <h3 class=\"text-xl font-semibold text-white\">Respond to Review</h3>\r\n        <button @click=\"handleClose\" class=\"text-green-100 hover:text-white hover:bg-green-600 p-1 rounded\">\r\n          <X class=\"h-5 w-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"p-6 space-y-5\">\r\n        <!-- Review Info -->\r\n        <div class=\"space-y-2\">\r\n          <div class=\"flex items-center gap-2 text-sm text-gray-600\">\r\n            <span class=\"font-medium text-gray-900\">{{ review.author }}</span>\r\n            <span>•</span>\r\n            <span>{{ review.post_date }}</span>\r\n          </div>\r\n          <p class=\"text-gray-900\">{{ review.content }}</p>\r\n        </div>\r\n\r\n        <!-- Response Section -->\r\n        <div class=\"space-y-4\">\r\n          <!-- Template Selection -->\r\n          <div class=\"flex items-center justify-between\">\r\n            <label class=\"text-sm font-medium text-gray-700\">Response Templates</label>\r\n            <button \r\n              @click=\"getAISuggestion\"\r\n              class=\"bg-purple-50 hover:bg-purple-100 text-purple-700 px-3 py-1.5 rounded flex items-center\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <template v-if=\"isLoading\">\r\n                <div class=\"animate-spin rounded-full h-4 w-4 border-2 border-purple-700 border-t-transparent mr-2\"></div>\r\n                Generating...\r\n              </template>\r\n              <template v-else>\r\n                <Wand2 class=\"mr-2 h-4 w-4\" />\r\n                AI Suggest\r\n              </template>\r\n            </button>\r\n          </div>\r\n\r\n          <select\r\n            v-model=\"selectedTemplateId\"\r\n            @change=\"handleTemplateSelect\"\r\n            class=\"w-full bg-gray-50 border border-gray-200 rounded-lg px-3 py-2\"\r\n          >\r\n            <option value=\"\">Select a template</option>\r\n            <optgroup label=\"Suggested Templates\">\r\n              <option\r\n                v-for=\"template in suggestedTemplates\"\r\n                :key=\"template.id\"\r\n                :value=\"template.id\"\r\n              >\r\n                {{ template.name }}\r\n              </option>\r\n            </optgroup>\r\n            <optgroup label=\"All Templates\">\r\n              <option\r\n                v-for=\"template in templates\"\r\n                :key=\"template.id\"\r\n                :value=\"template.id\"\r\n              >\r\n                {{ template.name }}\r\n              </option>\r\n            </optgroup>\r\n          </select>\r\n\r\n          <!-- Forum Credentials Selection -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Forum Account\r\n            </label>\r\n            <select\r\n              v-model=\"selectedCredentialsId\"\r\n              class=\"w-full bg-gray-50 border border-gray-200 rounded-lg px-3 py-2\"\r\n              :class=\"{ 'border-red-300': !selectedCredentialsId }\"\r\n            >\r\n              <option value=\"\">Select an account</option>\r\n              <option\r\n                v-for=\"cred in availableCredentials\"\r\n                :key=\"cred.id\"\r\n                :value=\"cred.id\"\r\n              >\r\n                {{ cred.username }} ({{ cred.forum }})\r\n              </option>\r\n            </select>\r\n            <p v-if=\"!availableCredentials.length\" class=\"text-sm text-red-600\">\r\n              No active credentials available for {{ review.source }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Response Input -->\r\n          <div class=\"space-y-2\">\r\n            <div class=\"relative\">\r\n              <textarea \r\n                v-model=\"responseContent\"\r\n                class=\"min-h-[150px] w-full pl-10 pr-4 py-2.5 bg-gray-50 border border-gray-200 rounded-lg\"\r\n                :class=\"{ 'border-red-300': showComplianceWarning }\"\r\n                placeholder=\"Write your response...\"\r\n                @input=\"checkResponseCompliance\"\r\n              ></textarea>\r\n              <MessageCircle class=\"absolute top-3 left-3 h-5 w-5 text-gray-400\" />\r\n            </div>\r\n            <div class=\"flex justify-between items-center text-sm text-gray-600\">\r\n              <button\r\n                @click=\"showSaveTemplate = true\"\r\n                class=\"flex items-center text-blue-600 hover:text-blue-700\"\r\n              >\r\n                <Save class=\"h-4 w-4 mr-1\" />\r\n                Save as Template\r\n              </button>\r\n              <span>Characters: {{ responseContent.length }}/500</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Compliance Warning -->\r\n          <div v-if=\"showComplianceWarning\" class=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div class=\"flex items-start\">\r\n              <AlertTriangle class=\"h-5 w-5 text-red-500 mt-0.5 mr-2\" />\r\n              <div>\r\n                <h4 class=\"text-sm font-medium text-red-800\">Compliance Issues</h4>\r\n                <ul class=\"mt-2 text-sm text-red-700 list-disc list-inside\">\r\n                  <li v-for=\"issue in complianceIssues\" :key=\"issue\">\r\n                    {{ issue }}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Posting Status -->\r\n          <PostingStatus\r\n            v-if=\"postingAttemptId\"\r\n            :attempt-id=\"postingAttemptId\"\r\n          />\r\n\r\n          <!-- Save as Template Form -->\r\n          <div v-if=\"showSaveTemplate\" class=\"border-t border-gray-100 pt-4 mt-4\">\r\n            <div class=\"space-y-3\">\r\n              <label class=\"block text-sm font-medium text-gray-700\">Template Name</label>\r\n              <input\r\n                v-model=\"newTemplateName\"\r\n                type=\"text\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                placeholder=\"Enter template name\"\r\n              />\r\n              <div class=\"flex justify-end space-x-3\">\r\n                <button\r\n                  @click=\"showSaveTemplate = false\"\r\n                  class=\"px-3 py-1.5 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  @click=\"saveAsTemplate\"\r\n                  class=\"px-3 py-1.5 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n                >\r\n                  Save Template\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"px-6 py-4 bg-gray-50 rounded-b-lg border-t border-gray-100 flex justify-end space-x-3\">\r\n        <button \r\n          @click=\"handleClose\"\r\n          class=\"px-4 py-2.5 text-sm font-medium text-red-700 bg-red-100 rounded-lg hover:bg-red-200\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          @click=\"handleSubmit\"\r\n          :disabled=\"!responseContent.trim() || showComplianceWarning || !selectedCredentialsId || isLoading\"\r\n          class=\"px-4 py-2.5 text-sm font-medium text-white bg-green-600 rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <template v-if=\"isLoading\">\r\n            <div class=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2 inline-block\"></div>\r\n            Posting...\r\n          </template>\r\n          <template v-else>\r\n            Send Response\r\n          </template>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport { X, AlertTriangle } from 'lucide-vue-next'\r\nimport type { ReviewMention, ReviewFlag } from '@/types/reviews'\r\n\r\nconst props = defineProps<{\r\n  review: ReviewMention\r\n  show: boolean\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close'): void\r\n  (e: 'submit', flag: Omit<ReviewFlag, 'id' | 'date'>): void\r\n}>()\r\n\r\nconst flagReason = ref('')\r\nconst notes = ref('')\r\nconst assignedTo = ref('')\r\n\r\nconst flagCategories = [\r\n  { value: 'inappropriate', label: 'Inappropriate Content' },\r\n  { value: 'legal_issue', label: 'Legal Issue' },\r\n  { value: 'quality_concern', label: 'Quality Concern' },\r\n  { value: 'urgent', label: 'Urgent Attention Required' },\r\n  { value: 'spam', label: 'Spam or Misleading' }\r\n]\r\n\r\nfunction handleSubmit() {\r\n  if (flagReason.value) {\r\n    emit('submit', {\r\n      reason: flagReason.value,\r\n      notes: notes.value,\r\n      assignedTo: assignedTo.value || undefined,\r\n      status: 'open',\r\n      reviewId: props.review.id\r\n    })\r\n    resetForm()\r\n  }\r\n}\r\n\r\nfunction resetForm() {\r\n  flagReason.value = ''\r\n  notes.value = ''\r\n  assignedTo.value = ''\r\n}\r\n\r\nfunction handleClose() {\r\n  resetForm()\r\n  emit('close')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"show\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n    <div class=\"bg-white rounded-lg max-w-md w-full\">\r\n      <!-- Header -->\r\n      <div class=\"bg-red-600 p-6 rounded-t-lg flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-2\">\r\n          <AlertTriangle class=\"h-5 w-5 text-white\" />\r\n          <h3 class=\"text-xl font-semibold text-white\">Flag Review</h3>\r\n        </div>\r\n        <button @click=\"handleClose\" class=\"text-red-100 hover:text-white hover:bg-red-500 p-1 rounded\">\r\n          <X class=\"h-5 w-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"p-6 space-y-6\">\r\n        <!-- Review Info -->\r\n        <div class=\"bg-gray-50 p-4 rounded-lg\">\r\n          <p class=\"text-sm text-gray-600\">{{ review.content }}</p>\r\n          <div class=\"mt-2 text-xs text-gray-500\">\r\n            By {{ review.author }} • {{ review.post_date }}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Flag Form -->\r\n        <div class=\"space-y-4\">\r\n          <!-- Flag Category -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Flag Reason <span class=\"text-red-500\">*</span>\r\n            </label>\r\n            <select\r\n              v-model=\"flagReason\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n              required\r\n            >\r\n              <option value=\"\">Select a reason</option>\r\n              <option\r\n                v-for=\"category in flagCategories\"\r\n                :key=\"category.value\"\r\n                :value=\"category.value\"\r\n              >\r\n                {{ category.label }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Assign To -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Assign To\r\n            </label>\r\n            <select\r\n              v-model=\"assignedTo\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            >\r\n              <option value=\"\">Unassigned</option>\r\n              <option value=\"support_team\">Support Team</option>\r\n              <option value=\"legal_team\">Legal Team</option>\r\n              <option value=\"quality_team\">Quality Team</option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Notes -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Additional Notes\r\n            </label>\r\n            <textarea\r\n              v-model=\"notes\"\r\n              rows=\"3\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n              placeholder=\"Add any additional context or notes...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"px-6 py-4 bg-gray-50 rounded-b-lg border-t border-gray-100 flex justify-end space-x-3\">\r\n        <button \r\n          @click=\"handleClose\"\r\n          class=\"px-4 py-2.5 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          @click=\"handleSubmit\"\r\n          :disabled=\"!flagReason\"\r\n          class=\"px-4 py-2.5 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          Flag Review\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport analyticsImage from '@/assets/images/analytics/analytics-green.png'\r\nimport {\r\n  Search, ArrowUpDown, MessageCircle, MessageSquare,\r\n  TrendingUp, TrendingDown, Minus,\r\n  Flag, Clock, CheckCircle, X, ArrowRight,\r\n  Globe, Tag, Reply, History, Check, Star\r\n} from 'lucide-vue-next'\r\nimport Pagination from '@/components/common/Pagination.vue'\r\nimport { useMentions } from '@/composables/useMentions'\r\nimport type { ReviewMention, ReviewFlag } from '@/types/reviews'\r\nimport ResponseDialog from '@/components/dashboard/reviews/ResponseDialog.vue'\r\nimport FlagDialog from '@/components/dashboard/reviews/FlagDialog.vue'\r\nimport { getForumCredentials, type ForumCredentials } from '@/services/forum'\r\n\r\n// Initialize mentions composable\r\nconst {\r\n  mentions,\r\n  isLoading,\r\n  error,\r\n  totalCount,\r\n  totalPages,\r\n  fetchMentions,\r\n  stats\r\n} = useMentions()\r\n\r\n// Date input refs\r\nconst startDateRef = ref<HTMLInputElement | null>(null)\r\nconst endDateRef = ref<HTMLInputElement | null>(null)\r\n\r\n// Local state\r\nconst currentPage = ref(1)\r\nconst selectedSentiment = ref('all')\r\nconst selectedPlatform = ref('all-platforms')\r\nconst selectedKeyword = ref('all-keywords')\r\nconst searchQuery = ref('') // Added searchQuery\r\nconst showRespondDialog = ref(false)\r\nconst showFlagDialog = ref(false)\r\nconst showHistoryDialog = ref(false)\r\nconst selectedReview = ref<ReviewMention | null>(null)\r\nconst credentials = ref<ForumCredentials[]>([])\r\nconst sortDirection = ref<'asc' | 'desc'>('desc')\r\n\r\n// Date state\r\nconst startDate = ref('')\r\nconst endDate = ref('')\r\n\r\n// Initialize dates with 30-day default\r\nconst initializeDates = () => {\r\n  const today = new Date()\r\n  const thirtyDaysAgo = new Date()\r\n  thirtyDaysAgo.setDate(today.getDate() - 30)\r\n  \r\n  startDate.value = thirtyDaysAgo.toISOString().split('T')[0]\r\n  endDate.value = today.toISOString().split('T')[0]\r\n}\r\n\r\n\r\n// Get keywords from API stats\r\nconst availableKeywords = computed(() => {\r\n  return stats.value.keywords || []\r\n})\r\n\r\n// Computed properties\r\n// Stats use totalCount for accurate numbers across all pages\r\nconst reviewsRequiringResponse = computed(() => totalCount.value)\r\nconst averageResponseTime = computed(() => \"4.2 hours\")\r\nconst responseRate = computed(() => 85) // Example fixed value\r\nconst flaggedReviews = computed(() => Math.round(totalCount.value * 0.05)) // Example: 5% of total\r\n\r\n// Debounce function\r\nconst debounce = (fn: Function, delay: number) => {\r\n  let timeoutId: NodeJS.Timeout\r\n  return (...args: any[]) => {\r\n    clearTimeout(timeoutId)\r\n    timeoutId = setTimeout(() => fn(...args), delay)\r\n  }\r\n}\r\n\r\n// Debounced fetch function\r\nconst debouncedFetch = debounce((query: string) => {\r\n  const filters = {\r\n    page: currentPage.value,\r\n    sentiment: selectedSentiment.value !== 'all' ? selectedSentiment.value : undefined,\r\n    platforms: selectedPlatform.value !== 'all-platforms' ? selectedPlatform.value : undefined,\r\n    keyword: selectedKeyword.value !== 'all-keywords' ? selectedKeyword.value : undefined,\r\n    search: query,\r\n    ordering: sortDirection.value === 'asc' ? 'post_date' : '-post_date'\r\n  }\r\n  fetchMentions(filters)\r\n}, 1000) // Wait 1 second for user to finish typing a complete word\r\n\r\n// Watch for non-search filter changes\r\nwatch([selectedSentiment, selectedPlatform, selectedKeyword, currentPage, sortDirection, startDate, endDate], () => {\r\n  const filters = {\r\n    page: currentPage.value,\r\n    sentiment: selectedSentiment.value !== 'all' ? selectedSentiment.value : undefined,\r\n    platforms: selectedPlatform.value !== 'all-platforms' ? selectedPlatform.value : undefined,\r\n    keyword: selectedKeyword.value !== 'all-keywords' ? selectedKeyword.value : undefined,\r\n    search: searchQuery.value || undefined,\r\n    ordering: sortDirection.value === 'asc' ? 'post_date' : '-post_date',\r\n    start_date: startDate.value,\r\n    end_date: endDate.value\r\n  }\r\n  fetchMentions(filters)\r\n})\r\n\r\n// Watch for search query changes\r\nwatch(searchQuery, (newValue) => {\r\n  debouncedFetch(newValue)\r\n})\r\n\r\n// Use reviews directly since backend handles filtering, sorting and pagination\r\nconst paginatedReviews = computed<ReviewMention[]>(() => mentions.value.map(mention => ({\r\n  ...mention,\r\n  response: undefined,\r\n  flagged: false,\r\n  status: 'pending' as const\r\n})))\r\n\r\n// Process and highlight content\r\nconst processContent = (content: string, keyword: string): string => {\r\n  // Escape HTML to prevent XSS\r\n  const escapeHtml = (text: string) => {\r\n    return text\r\n      .replace(/&/g, \"&amp;\")\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/>/g, \"&gt;\")\r\n      .replace(/\"/g, \"&quot;\")\r\n      .replace(/'/g, \"&#039;\");\r\n  }\r\n\r\n  // Create a completely stripped version for matching\r\n  const stripText = (text: string): string => {\r\n    return text\r\n      .toLowerCase()\r\n      .replace(/[^a-z0-9]/g, '') // Remove everything except letters and numbers\r\n  }\r\n\r\n  // Find all possible matches in the original text\r\n  const findMatches = (content: string, keyword: string) => {\r\n    const strippedKeyword = stripText(keyword)\r\n    const matches: { start: number, end: number, text: string }[] = []\r\n    const matchedRanges = new Set<number>() // Track matched positions\r\n    \r\n    // Sliding window approach to find matches\r\n    for (let i = 0; i < content.length; i++) {\r\n      // Skip if this position is already part of a match\r\n      if (matchedRanges.has(i)) continue\r\n\r\n      // Look ahead up to 2x the keyword length to account for extra spaces/punctuation\r\n      const windowSize = keyword.length * 2\r\n      const chunk = content.slice(i, i + windowSize)\r\n      \r\n      if (stripText(chunk).includes(strippedKeyword)) {\r\n        // Find the exact boundaries of the match in the original text\r\n        let start = i\r\n        let end = i\r\n        let found = false\r\n        \r\n        // Expand the end position until we no longer match\r\n        while (end <= i + windowSize && !found) {\r\n          const current = content.slice(start, end)\r\n          const stripped = stripText(current)\r\n          \r\n          if (stripped === strippedKeyword) {\r\n            // Verify word boundaries\r\n            const beforeChar = start > 0 ? content[start - 1] : ' '\r\n            const afterChar = end < content.length ? content[end] : ' '\r\n            const isWordBoundary = /[^a-zA-Z0-9]/.test(beforeChar) && /[^a-zA-Z0-9]/.test(afterChar)\r\n            \r\n            if (isWordBoundary) {\r\n              // Trim whitespace from match boundaries\r\n              let trimStart = start\r\n              let trimEnd = end\r\n              \r\n              // Trim leading whitespace\r\n              while (trimStart < trimEnd && /\\s/.test(content[trimStart])) {\r\n                trimStart++\r\n              }\r\n              \r\n              // Trim trailing whitespace\r\n              while (trimEnd > trimStart && /\\s/.test(content[trimEnd - 1])) {\r\n                trimEnd--\r\n              }\r\n              \r\n              // Add trimmed match and mark its range as matched\r\n              matches.push({\r\n                start: trimStart,\r\n                end: trimEnd,\r\n                text: content.slice(trimStart, trimEnd)\r\n              })\r\n              \r\n              for (let pos = trimStart; pos < trimEnd; pos++) {\r\n                matchedRanges.add(pos)\r\n              }\r\n              found = true\r\n            }\r\n          }\r\n          end++\r\n        }\r\n      }\r\n    }\r\n\r\n    return matches\r\n  }\r\n\r\n  const escapedContent = escapeHtml(content)\r\n  const matches = findMatches(escapedContent, keyword)\r\n\r\n  if (matches.length === 0) {\r\n    // If no matches found, just truncate\r\n    return escapedContent.length > 800\r\n      ? escapedContent.slice(0, 797) + '...'\r\n      : escapedContent\r\n  }\r\n\r\n  // Use the first match for centering\r\n  const firstMatch = matches[0]\r\n  let start = Math.max(0, firstMatch.start - 400)\r\n  let end = Math.min(escapedContent.length, firstMatch.end + 400)\r\n  \r\n  // Adjust if content is less than 800 characters\r\n  if (end - start < 800) {\r\n    start = Math.max(0, start - (800 - (end - start)))\r\n    end = Math.min(escapedContent.length, end + (800 - (end - start)))\r\n  }\r\n\r\n  // Add ellipsis if truncated\r\n  const prefix = start > 0 ? '...' : ''\r\n  const suffix = end < escapedContent.length ? '...' : ''\r\n\r\n  // Build the highlighted content with all matches within the window\r\n  let result = ''\r\n  let lastIndex = start\r\n\r\n  matches.forEach(match => {\r\n    if (match.start >= start && match.end <= end) {\r\n      result += escapedContent.slice(lastIndex, match.start)\r\n      result += `<span class=\"bg-green-100 text-green-800\">${\r\n        escapedContent.slice(match.start, match.end)\r\n      }</span>`\r\n      lastIndex = match.end\r\n    }\r\n  })\r\n\r\n  result += escapedContent.slice(lastIndex, end)\r\n  return `${prefix}${result}${suffix}`\r\n}\r\n\r\n// Helper functions\r\nfunction formatDate(dateString: string) {\r\n  const date = new Date(dateString)\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: '2-digit',\r\n    hour12: true\r\n  }).format(date)\r\n}\r\n\r\nfunction getPlatformColor(platform: string) {\r\n  switch (platform.toLowerCase()) {\r\n    case 'rollitup.org':\r\n      return 'bg-gradient-to-r from-green-500/10 to-green-500/5 text-green-700 hover:from-green-500/20 hover:to-green-500/15'\r\n    case 'thcfarmer.com':\r\n      return 'bg-gradient-to-r from-blue-500/10 to-blue-500/5 text-blue-700 hover:from-blue-500/20 hover:to-blue-500/15'\r\n    case 'icmag.com':\r\n      return 'bg-gradient-to-r from-purple-500/10 to-purple-500/5 text-purple-700 hover:from-purple-500/20 hover:to-purple-500/15'\r\n    case '420magazine.com':\r\n      return 'bg-gradient-to-r from-orange-500/10 to-orange-500/5 text-orange-700 hover:from-orange-500/20 hover:to-orange-500/15'\r\n    case 'overgrow.com':\r\n      return 'bg-gradient-to-r from-pink-500/10 to-pink-500/5 text-pink-700 hover:from-pink-500/20 hover:to-pink-500/15'\r\n    case 'ilgmforum.com':\r\n      return 'bg-gradient-to-r from-indigo-500/10 to-indigo-500/5 text-indigo-700 hover:from-indigo-500/20 hover:to-indigo-500/15'\r\n    case 'homegrowncannabisco.community':\r\n      return 'bg-gradient-to-r from-teal-500/10 to-teal-500/5 text-teal-700 hover:from-teal-500/20 hover:to-teal-500/15'\r\n    case 'growersnetwork.org':\r\n      return 'bg-gradient-to-r from-amber-500/10 to-amber-500/5 text-amber-700 hover:from-amber-500/20 hover:to-amber-500/15'\r\n    case 'reddit.com':\r\n      return 'bg-gradient-to-r from-orange-500/10 to-orange-500/5 text-orange-700 hover:from-orange-500/20 hover:to-orange-500/15'\r\n    case 'autoflower.org':\r\n      return 'bg-gradient-to-r from-yellow-500/10 to-yellow-500/5 text-yellow-700 hover:from-yellow-500/20 hover:to-yellow-500/15'\r\n    case 'marijuanapassion.com':\r\n      return 'bg-gradient-to-r from-lime-500/10 to-lime-500/5 text-lime-700 hover:from-lime-500/20 hover:to-lime-500/15'\r\n    case 'growweedeasy.com':\r\n      return 'bg-gradient-to-r from-emerald-500/10 to-emerald-500/5 text-emerald-700 hover:from-emerald-500/20 hover:to-emerald-500/15'\r\n    case 'beanbasement.nl':\r\n      return 'bg-gradient-to-r from-violet-500/10 to-violet-500/5 text-violet-700 hover:from-violet-500/20 hover:to-violet-500/15'\r\n    case 'phenohunter.org':\r\n      return 'bg-gradient-to-r from-cyan-500/10 to-cyan-500/5 text-cyan-700 hover:from-cyan-500/20 hover:to-cyan-500/15'\r\n    case 'percysgrowroom.com':\r\n      return 'bg-gradient-to-r from-rose-500/10 to-rose-500/5 text-rose-700 hover:from-rose-500/20 hover:to-rose-500/15'\r\n    case '420sa.co.za':\r\n      return 'bg-gradient-to-r from-sky-500/10 to-sky-500/5 text-sky-700 hover:from-sky-500/20 hover:to-sky-500/15'\r\n    default:\r\n      return 'bg-gradient-to-r from-gray-500/10 to-gray-500/5 text-gray-700 hover:from-gray-500/20 hover:to-gray-500/15'\r\n  }\r\n}\r\n\r\nfunction getSentimentIcon(sentiment: string | null) {\r\n  switch (sentiment) {\r\n    case 'positive':\r\n      return TrendingUp\r\n    case 'negative':\r\n      return TrendingDown\r\n    default:\r\n      return Minus\r\n  }\r\n}\r\n\r\nfunction getStatusColor(status: ReviewMention['status']) {\r\n  switch (status) {\r\n    case 'responded':\r\n      return 'bg-gradient-to-r from-green-500/10 to-green-500/5 text-green-700 hover:from-green-500/20 hover:to-green-500/15'\r\n    case 'pending':\r\n      return 'bg-gradient-to-r from-yellow-500/10 to-yellow-500/5 text-yellow-700 hover:from-yellow-500/20 hover:to-yellow-500/15'\r\n    case 'flagged':\r\n      return 'bg-gradient-to-r from-red-500/10 to-red-500/5 text-red-700 hover:from-red-500/20 hover:to-red-500/15'\r\n    default:\r\n      return 'bg-gradient-to-r from-gray-500/10 to-gray-500/5 text-gray-700 hover:from-gray-500/20 hover:to-gray-500/15'\r\n  }\r\n}\r\n\r\n// Toggle sort direction\r\nfunction toggleSort() {\r\n  sortDirection.value = sortDirection.value === 'asc' ? 'desc' : 'asc'\r\n}\r\n\r\n// Action handlers\r\nfunction openRespondDialog(review: ReviewMention) {\r\n  selectedReview.value = review\r\n  showRespondDialog.value = true\r\n}\r\n\r\nfunction openFlagDialog(review: ReviewMention) {\r\n  selectedReview.value = review\r\n  showFlagDialog.value = true\r\n}\r\n\r\nfunction openHistoryDialog(review: ReviewMention) {\r\n  selectedReview.value = review\r\n  showHistoryDialog.value = true\r\n}\r\n\r\nfunction handleResponse(response: string) {\r\n  if (selectedReview.value) {\r\n    // TODO: Implement response submission to backend\r\n    console.log('Sending response:', response)\r\n    selectedReview.value.response = {\r\n      content: response,\r\n      author: 'Support Team',\r\n      date: new Date().toISOString()\r\n    }\r\n    selectedReview.value.status = 'responded' as const\r\n    showRespondDialog.value = false\r\n  }\r\n}\r\n\r\nfunction handleFlag(flag: Omit<ReviewFlag, 'id' | 'date'>) {\r\n  if (selectedReview.value) {\r\n    // TODO: Implement flag submission to backend\r\n    console.log('Flagging review:', flag)\r\n    selectedReview.value.flagged = true\r\n    selectedReview.value.status = 'flagged' as const\r\n    showFlagDialog.value = false\r\n  }\r\n}\r\n\r\n// Fetch data on mount\r\nonMounted(async () => {\r\n  initializeDates() // Initialize with 30-day default\r\n  const filters = {\r\n    start_date: startDate.value,\r\n    end_date: endDate.value\r\n  }\r\n  fetchMentions(filters)\r\n  try {\r\n    const response = await getForumCredentials()\r\n    credentials.value = response.data\r\n  } catch (error) {\r\n    console.error('Error fetching forum credentials:', error)\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex-1 p-6\">\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <!-- Welcome Section -->\r\n      <div class=\"mb-8 bg-white rounded-lg shadow-sm p-6\">\r\n        <div class=\"flex justify-between items-start\">\r\n          <div class=\"flex-1\">\r\n            <h1 class=\"text-xl md:text-2xl font-medium text-green-800 mb-2\">\r\n              Review Management\r\n            </h1>\r\n            <p class=\"text-gray-600 text-lg\">\r\n              Connect directly with your community through thoughtful engagement and responses. Our platform helps you manage and reply to discussions across the cannabis space, ensuring your brand's voice is heard. From answering questions to addressing feedback, build stronger relationships with people in real-time. Turn every interaction into an opportunity to strengthen your brand's reputation.\r\n            </p>\r\n          </div>\r\n          <div class=\"w-48 h-48 flex-shrink-0 relative\">\r\n            <img\r\n              :src=\"analyticsImage\"\r\n              alt=\"Review Management illustration\"\r\n              class=\"w-full h-full object-contain\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"mb-8\">\r\n        <div class=\"flex gap-6\">\r\n          <!-- Reviews Requiring Response -->\r\n          <div class=\"shadow-sm hover:shadow-md transition-all duration-200 border border-blue-500/10 bg-gradient-to-br from-blue-100/60 to-indigo-100/60 rounded-lg p-6 flex-1\">\r\n            <div class=\"flex items-center justify-between mb-6\">\r\n              <span class=\"text-sm font-medium text-blue-700\">Reviews Requiring Response</span>\r\n              <MessageCircle class=\"h-4 w-4 text-blue-700\" />\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n              <div v-if=\"isLoading\" class=\"h-8 bg-blue-200/50 rounded animate-pulse w-16\"></div>\r\n              <div v-else class=\"text-3xl font-bold text-blue-700\">{{ reviewsRequiringResponse }}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Average Response Time -->\r\n          <div class=\"shadow-sm hover:shadow-md transition-all duration-200 border border-emerald-500/10 bg-gradient-to-br from-emerald-100/60 to-green-100/60 rounded-lg p-6 flex-1\">\r\n            <div class=\"flex items-center justify-between mb-6\">\r\n              <span class=\"text-sm font-medium text-emerald-700\">Average Response Time</span>\r\n              <Clock class=\"h-4 w-4 text-emerald-700\" />\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n              <div v-if=\"isLoading\" class=\"h-8 bg-emerald-200/50 rounded animate-pulse w-24\"></div>\r\n              <div v-else class=\"text-3xl font-bold text-emerald-700\">{{ averageResponseTime }}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Response Rate -->\r\n          <div class=\"shadow-sm hover:shadow-md transition-all duration-200 border border-amber-500/10 bg-gradient-to-br from-amber-100/60 to-yellow-100/60 rounded-lg p-6 flex-1\">\r\n            <div class=\"flex items-center justify-between mb-6\">\r\n              <span class=\"text-sm font-medium text-amber-700\">Response Rate</span>\r\n              <CheckCircle class=\"h-4 w-4 text-amber-700\" />\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n              <div v-if=\"isLoading\" class=\"h-8 bg-amber-200/50 rounded animate-pulse w-16\"></div>\r\n              <div v-else class=\"text-3xl font-bold text-amber-700\">{{ responseRate }}%</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Flagged Reviews -->\r\n          <div class=\"shadow-sm hover:shadow-md transition-all duration-200 border border-rose-500/10 bg-gradient-to-br from-rose-100/60 to-red-100/60 rounded-lg p-6 flex-1\">\r\n            <div class=\"flex items-center justify-between mb-6\">\r\n              <span class=\"text-sm font-medium text-rose-700\">Flagged Reviews</span>\r\n              <Flag class=\"h-4 w-4 text-rose-700\" />\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n              <div v-if=\"isLoading\" class=\"h-8 bg-rose-200/50 rounded animate-pulse w-16\"></div>\r\n              <div v-else class=\"text-3xl font-bold text-rose-700\">{{ flaggedReviews }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Filters Section -->\r\n      <div class=\"mb-8 bg-white rounded-lg shadow-sm\">\r\n        <div class=\"p-6 space-y-4\">\r\n          <div>\r\n            <h2 class=\"text-lg font-medium text-gray-700\">Review Filters</h2>\r\n            <p class=\"text-base text-gray-500\">\r\n              Filter reviews by platform, keyword, sentiment, and search terms to focus your analysis.\r\n            </p>\r\n          </div>\r\n          <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n            <!-- Date Range -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                <div class=\"relative\">\r\n                  <label class=\"block relative cursor-pointer\">\r\n                    <input\r\n                      ref=\"startDateRef\"\r\n                      v-model=\"startDate\"\r\n                      type=\"date\"\r\n                      placeholder=\"Start Date (YYYY-MM-DD)\"\r\n                      class=\"w-full pl-3 pr-3 py-2 bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 [direction:rtl] [text-align-last:left] [&::-webkit-calendar-picker-indicator]:ml-0\"\r\n                    />\r\n                    <div class=\"absolute inset-0\" @click=\"startDateRef?.showPicker()\"></div>\r\n                  </label>\r\n                </div>\r\n                <div class=\"relative\">\r\n                  <label class=\"block relative cursor-pointer\">\r\n                    <input\r\n                      ref=\"endDateRef\"\r\n                      v-model=\"endDate\"\r\n                      type=\"date\"\r\n                      placeholder=\"End Date (YYYY-MM-DD)\"\r\n                      class=\"w-full pl-3 pr-3 py-2 bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 [direction:rtl] [text-align-last:left] [&::-webkit-calendar-picker-indicator]:ml-0\"\r\n                    />\r\n                    <div class=\"absolute inset-0\" @click=\"endDateRef?.showPicker()\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Keywords Dropdown -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"relative\">\r\n                <Tag class=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 pointer-events-none\" />\r\n                <select\r\n                  v-model=\"selectedKeyword\"\r\n                  class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 appearance-none\"\r\n                >\r\n                  <option value=\"all-keywords\">All Keywords</option>\r\n                  <option v-for=\"keyword in availableKeywords\" :key=\"keyword\" :value=\"keyword\">\r\n                    {{ keyword }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Search Filter -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"relative\">\r\n                <Search class=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 pointer-events-none\" />\r\n                <input\r\n                  v-model=\"searchQuery\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search reviews...\"\r\n                  :disabled=\"isLoading\"\r\n                  class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 disabled:bg-gray-50 disabled:cursor-not-allowed\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Platform Filter -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"relative\">\r\n                <Globe class=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 pointer-events-none\" />\r\n                <select\r\n                  v-model=\"selectedPlatform\"\r\n                  class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 appearance-none\"\r\n                >\r\n                  <option value=\"all-platforms\">All Platforms</option>\r\n                  <option value=\"420magazine.com\">420 Magazine</option>\r\n                  <option value=\"420sa.co.za\">420SA</option>\r\n                  <option value=\"autoflower.org\">Autoflower</option>\r\n                  <option value=\"beanbasement.nl\">Bean Basement</option>\r\n                  <option value=\"growersnetwork.org\">Growers Network</option>\r\n                  <option value=\"growweedeasy.com\">GrowWeedEasy</option>\r\n                  <option value=\"homegrowncannabisco.community\">Homegrown Cannabis Co</option>\r\n                  <option value=\"icmag.com\">ICMag</option>\r\n                  <option value=\"ilgmforum.com\">ILGM Forum</option>\r\n                  <option value=\"marijuanapassion.com\">Marijuana Passion</option>\r\n                  <option value=\"overgrow.com\">Overgrow</option>\r\n                  <option value=\"percysgrowroom.com\">Percy's Grow Room</option>\r\n                  <option value=\"phenohunter.org\">PhenoHunter</option>\r\n                  <option value=\"reddit.com\">Reddit</option>\r\n                  <option value=\"rollitup.org\">RollItUp</option>\r\n                  <option value=\"thcfarmer.com\">THCFarmer</option>\r\n                  <option value=\"uk420.com\">UK420</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Sentiment Filter -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"relative\">\r\n                <MessageSquare class=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 pointer-events-none\" />\r\n                <select\r\n                  v-model=\"selectedSentiment\"\r\n                  class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 appearance-none\"\r\n                >\r\n                  <option value=\"all\">All Sentiments</option>\r\n                  <option value=\"positive\">Positive</option>\r\n                  <option value=\"neutral\">Neutral</option>\r\n                  <option value=\"negative\">Negative</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Sort Button -->\r\n            <div class=\"flex flex-col space-y-4\">\r\n              <div class=\"relative\">\r\n                <ArrowUpDown class=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-500 pointer-events-none\" />\r\n                <button\r\n                  @click=\"toggleSort\"\r\n                  class=\"w-full pl-10 pr-3 py-2 bg-white border border-gray-300 rounded-md text-gray-700 text-left hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\r\n                >\r\n                  Sort by Date\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Content Section -->\r\n      <div v-if=\"isLoading\" class=\"space-y-6\">\r\n        <!-- Skeleton Reviews -->\r\n        <div v-for=\"i in 5\" :key=\"i\" class=\"relative group\">\r\n          <div class=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100\">\r\n            <!-- Top Bar Skeleton -->\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <div class=\"w-10 h-10 bg-gray-200 rounded-full animate-pulse\"></div>\r\n                <div>\r\n                  <div class=\"h-5 bg-gray-200 rounded animate-pulse w-32 mb-1\"></div>\r\n                  <div class=\"h-4 bg-gray-200 rounded animate-pulse w-24\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex space-x-2\">\r\n                <div class=\"h-7 bg-gray-200 rounded animate-pulse w-24\"></div>\r\n                <div class=\"h-7 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n                <div class=\"h-7 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n                <div class=\"h-7 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Divider -->\r\n            <hr class=\"my-4 border-t border-gray-100\" />\r\n\r\n            <!-- Content Skeleton -->\r\n            <div>\r\n              <div class=\"h-7 bg-gray-200 rounded animate-pulse w-3/4 mb-4\"></div>\r\n              <div class=\"space-y-2 mb-4\">\r\n                <div class=\"h-4 bg-gray-200 rounded animate-pulse w-full\"></div>\r\n                <div class=\"h-4 bg-gray-200 rounded animate-pulse w-3/4\"></div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Actions Skeleton -->\r\n            <div class=\"flex justify-end space-x-2\">\r\n              <div class=\"h-8 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n              <div class=\"h-8 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n              <div class=\"h-8 bg-gray-200 rounded animate-pulse w-20\"></div>\r\n              <div class=\"h-8 bg-gray-200 rounded animate-pulse w-24\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-8\">\r\n        <p class=\"text-red-800\">{{ error }}</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"!paginatedReviews.length\" class=\"flex flex-col items-center justify-center h-64 bg-white rounded-lg border border-gray-100 p-6 text-center\">\r\n        <div class=\"w-16 h-16 bg-amber-50 rounded-full flex items-center justify-center mb-6\">\r\n          <Star class=\"w-8 h-8 text-amber-400\" />\r\n        </div>\r\n\r\n        <!-- Text Content -->\r\n        <h3 class=\"text-lg font-medium text-gray-700 mb-2\">\r\n          No Reviews Yet\r\n        </h3>\r\n        <p class=\"text-gray-500 text-sm mb-5 max-w-[700px]\">\r\n          Monitor and respond to customer reviews across platforms. Connect with your community today.\r\n        </p>\r\n\r\n      </div>\r\n      <div v-else class=\"space-y-6\">\r\n        <!-- Reviews List -->\r\n        <div\r\n          v-for=\"review in paginatedReviews\"\r\n          :key=\"review.id\"\r\n          class=\"relative group\"\r\n        >\r\n          <div class=\"bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100\"\r\n               :class=\"{ 'border-red-300 bg-red-50': review.flagged }\">\r\n            <!-- Top Bar -->\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <div class=\"w-10 h-10 bg-gradient-to-br from-green-100 to-green-200 rounded-full flex items-center justify-center text-green-600 font-bold\">\r\n                  {{ review.author[0].toUpperCase() }}\r\n                </div>\r\n                <div>\r\n                  <h3 class=\"text-gray-700 font-medium\">{{ review.author }}</h3>\r\n                  <p class=\"text-gray-500 text-sm flex items-center\">\r\n                    <Clock class=\"w-3 h-3 mr-1\" />\r\n                    {{ formatDate(review.post_date) }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex space-x-2\">\r\n                <span\r\n                  class=\"inline-flex items-center justify-center px-3 py-1 rounded-md text-sm font-normal transition-colors duration-300\"\r\n                  :class=\"[getPlatformColor(review.source), 'hover:from-opacity-20 hover:to-opacity-15']\"\r\n                >\r\n                  <span class=\"text-sm font-normal\">{{ review.source }}</span>\r\n                </span>\r\n                <span\r\n                  class=\"inline-flex items-center justify-center px-3 py-1 rounded-md text-sm font-normal bg-gradient-to-r from-sky-100/90 to-blue-50/80 text-blue-700 hover:from-sky-200/90 hover:to-blue-100/80 transition-colors duration-300\"\r\n                >\r\n                  <span class=\"text-sm font-normal\">{{ review.keyword_term }}</span>\r\n                </span>\r\n                <span\r\n                  class=\"inline-flex items-center justify-center w-24 px-3 py-1 rounded-md text-sm font-normal transition-colors duration-300\"\r\n                  :class=\"{\r\n                    'bg-gradient-to-r from-emerald-500/10 to-emerald-500/5 text-emerald-700 hover:from-emerald-500/20 hover:to-emerald-500/15': review.sentiment === 'positive',\r\n                    'bg-gradient-to-r from-rose-500/10 to-rose-500/5 text-rose-700 hover:from-rose-500/20 hover:to-rose-500/15': review.sentiment === 'negative',\r\n                    'bg-gradient-to-r from-amber-500/10 to-amber-500/5 text-amber-700 hover:from-amber-500/20 hover:to-amber-500/15': review.sentiment === 'neutral' || review.sentiment === null\r\n                  }\"\r\n                >\r\n                  <component :is=\"getSentimentIcon(review.sentiment || 'neutral')\" class=\"w-4 h-4 mr-1\" :class=\"{\r\n                    'text-emerald-700': review.sentiment === 'positive',\r\n                    'text-rose-700': review.sentiment === 'negative',\r\n                    'text-amber-700': review.sentiment === 'neutral' || review.sentiment === null\r\n                  }\" />\r\n                  <span class=\"text-sm font-normal\">\r\n                    {{ review.sentiment ? (review.sentiment.charAt(0).toUpperCase() + review.sentiment.slice(1)) : 'Neutral' }}\r\n                  </span>\r\n                </span>\r\n                <span\r\n                  class=\"inline-flex items-center justify-center px-3 py-1 rounded-md text-sm font-normal\"\r\n                  :class=\"getStatusColor(review.status || 'pending')\"\r\n                >\r\n                  <Clock class=\"w-4 h-4 mr-1\" />\r\n                  <span class=\"text-sm font-normal\">\r\n                    {{ (review.status || 'pending').charAt(0).toUpperCase() + (review.status || 'pending').slice(1) }}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Divider -->\r\n            <hr class=\"my-4 border-t border-gray-100\" />\r\n\r\n            <!-- Content -->\r\n            <div>\r\n              <h2 class=\"text-lg font-medium text-gray-700 mb-4\" v-html=\"processContent(review.title, review.keyword_term)\">\r\n              </h2>\r\n              <p class=\"text-gray-600 leading-relaxed mb-4\" v-html=\"processContent(review.content, review.keyword_term)\"></p>\r\n            </div>\r\n\r\n            <!-- Actions -->\r\n            <div class=\"flex justify-end space-x-2\">\r\n              <button\r\n                @click=\"openRespondDialog(review)\"\r\n                class=\"inline-flex items-center px-3 py-1 text-sm font-normal bg-gradient-to-r from-slate-100 to-slate-50 text-slate-700 hover:from-slate-200 hover:to-slate-100 rounded-md transition-all duration-300\"\r\n                :disabled=\"review.flagged\"\r\n              >\r\n                <Reply class=\"w-4 h-4 mr-1\" />\r\n                Respond\r\n              </button>\r\n              <button\r\n                @click=\"openFlagDialog(review)\"\r\n                class=\"inline-flex items-center px-3 py-1 text-sm font-normal bg-gradient-to-r from-slate-100 to-slate-50 text-slate-700 hover:from-slate-200 hover:to-slate-100 rounded-md transition-all duration-300\"\r\n                :class=\"{ 'from-slate-200 to-slate-100': review.flagged }\"\r\n                :disabled=\"review.flagged\"\r\n              >\r\n                <Flag class=\"w-4 h-4 mr-1\" />\r\n                {{ review.flagged ? 'Flagged' : 'Flag' }}\r\n              </button>\r\n              <button\r\n                @click=\"openHistoryDialog(review)\"\r\n                class=\"inline-flex items-center px-3 py-1 text-sm font-normal bg-gradient-to-r from-slate-100 to-slate-50 text-slate-700 hover:from-slate-200 hover:to-slate-100 rounded-md transition-all duration-300\"\r\n              >\r\n                <History class=\"w-4 h-4 mr-1\" />\r\n                History\r\n              </button>\r\n              <button\r\n                class=\"inline-flex items-center px-3 py-1 text-sm font-normal bg-gradient-to-r from-slate-100 to-slate-50 text-slate-700 hover:from-slate-200 hover:to-slate-100 rounded-md transition-all duration-300\"\r\n                :disabled=\"review.flagged\"\r\n              >\r\n                <Check class=\"w-4 h-4 mr-1\" />\r\n                Mark as Done\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <div class=\"mt-8\">\r\n        <Pagination\r\n          v-model:currentPage=\"currentPage\"\r\n          :totalPages=\"totalPages\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Dialogs -->\r\n      <ResponseDialog\r\n        v-if=\"selectedReview\"\r\n        :review=\"selectedReview\"\r\n        :show=\"showRespondDialog\"\r\n        :credentials=\"credentials\"\r\n        @close=\"showRespondDialog = false\"\r\n        @submit=\"handleResponse\"\r\n      />\r\n\r\n      <FlagDialog\r\n        v-if=\"selectedReview\"\r\n        :review=\"selectedReview\"\r\n        :show=\"showFlagDialog\"\r\n        @close=\"showFlagDialog = false\"\r\n        @submit=\"handleFlag\"\r\n      />\r\n\r\n      <!-- History Dialog -->\r\n      <div v-if=\"showHistoryDialog && selectedReview\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n        <div class=\"bg-white rounded-lg max-w-[425px] w-full\">\r\n          <div class=\"bg-green-700 p-6 rounded-t-lg flex items-center justify-between\">\r\n            <h3 class=\"text-xl font-semibold text-white\">Review History</h3>\r\n            <button @click=\"showHistoryDialog = false\" class=\"text-green-100 hover:text-white hover:bg-green-600 p-1 rounded\">\r\n              <X class=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n          <div class=\"p-6 space-y-6\">\r\n            <div class=\"space-y-4\">\r\n              <div v-if=\"selectedReview.response\" class=\"flex items-start gap-2\">\r\n                <div class=\"mt-1 bg-green-100 p-1.5 rounded-full\">\r\n                  <MessageCircle class=\"h-3 w-3 text-green-800\" />\r\n                </div>\r\n                <div class=\"space-y-1\">\r\n                  <div class=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                    <span class=\"font-medium text-green-800\">Support Team</span>\r\n                    <span>•</span>\r\n                    <span>{{ formatDate(selectedReview.response.date) }}</span>\r\n                  </div>\r\n                  <p class=\"text-sm text-gray-600\">{{ selectedReview.response.content }}</p>\r\n                </div>\r\n              </div>\r\n              <div v-else class=\"text-center text-gray-500\">\r\n                No response history available\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-6 py-4 bg-gray-50 rounded-b-lg border-t border-gray-100 flex justify-end\">\r\n            <button \r\n              @click=\"showHistoryDialog = false\"\r\n              class=\"px-4 py-2.5 text-sm font-medium text-red-700 bg-red-100 rounded-lg hover:bg-red-200\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"names":["useTemplatesStore","defineStore","templates","ref","addTemplate","template","newId","t","updateTemplate","id","updates","index","deleteTemplate","getTemplatesByCategory","category","fillTemplate","variables","content","key","value","generateResponse","review","prompt","response","axios","getResponseSuggestion","tone","checkCompliance","rules","text","issues","suggestions","rule","getForumCredentials","createPostingAttempt","data","getPostingStatus","attemptId","retryPosting","props","__props","attempt","isLoading","pollingInterval","statusIcons","Clock","RefreshCw","CheckCircle2","XCircle","statusColors","errorTypeDisplay","fetchStatus","stopPolling","error","startPolling","handleRetry","onMounted","watch","onUnmounted","emit","__emit","templatesStore","responseContent","selectedTemplateId","selectedCredentialsId","showSaveTemplate","newTemplateName","complianceIssues","showComplianceWarning","postingAttemptId","computed","suggestedCategory","_a","suggestedTemplates","availableCredentials","c","handleTemplateSelect","event","select","templateId","checkResponseCompliance","compliant","handleSubmit","saveAsTemplate","getAISuggestion","suggestion","resetForm","handleClose","flagReason","notes","assignedTo","flagCategories","mentions","totalCount","totalPages","fetchMentions","stats","useMentions","startDateRef","endDateRef","currentPage","selectedSentiment","selectedPlatform","selectedKeyword","searchQuery","showRespondDialog","showFlagDialog","showHistoryDialog","selectedReview","credentials","sortDirection","startDate","endDate","initializeDates","today","thirtyDaysAgo","availableKeywords","reviewsRequiringResponse","averageResponseTime","responseRate","flaggedReviews","debouncedFetch","fn","delay","timeoutId","args","query","filters","newValue","paginatedReviews","mention","processContent","keyword","escapeHtml","stripText","findMatches","strippedKeyword","matches","matchedRanges","i","windowSize","chunk","start","end","found","current","beforeChar","afterChar","trimStart","trimEnd","pos","escapedContent","firstMatch","prefix","suffix","result","lastIndex","match","formatDate","dateString","date","getPlatformColor","platform","getSentimentIcon","sentiment","TrendingUp","TrendingDown","Minus","getStatusColor","status","toggleSort","openRespondDialog","openFlagDialog","openHistoryDialog","handleResponse","handleFlag","flag"],"mappings":"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"}