{"version":3,"file":"AnalyticsPage-D0CD-Me7.js","sources":["../../src/views/dashboard/analytics/components/SentimentChart.vue","../../src/views/dashboard/analytics/components/KeywordAnalysis.vue","../../src/views/dashboard/analytics/components/PlatformSummary.vue","../../src/views/dashboard/analytics/components/KeywordCorrelation.vue","../../src/views/dashboard/analytics/components/filters/DateRangePicker.vue","../../src/views/dashboard/analytics/components/filters/TimeFrameSelector.vue","../../src/views/dashboard/analytics/components/filters/PlatformSelector.vue","../../src/views/dashboard/analytics/components/filters/SentimentToggle.vue","../../src/views/dashboard/analytics/components/FilterPanel.vue","../../src/views/dashboard/analytics/AnalyticsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport VChart from 'vue-echarts'\r\n\r\ninterface SentimentData {\r\n  date: string\r\n  positive: number\r\n  neutral: number\r\n  negative: number\r\n}\r\n\r\ninterface SentimentVisibility {\r\n  positive: boolean\r\n  neutral: boolean\r\n  negative: boolean\r\n}\r\n\r\nconst props = defineProps<{\r\n  data: SentimentData[]\r\n  visibleSentiments: SentimentVisibility\r\n}>()\r\n\r\nconst chartOption = computed(() => ({\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    formatter: (params: any) => {\r\n      const date = params[0].axisValue\r\n      let html = `<div class=\"bg-white p-4 border border-gray-200 rounded-lg shadow-lg\">\r\n        <p class=\"text-gray-700 font-semibold mb-2\">Date: ${date}</p>`\r\n      \r\n      params.forEach((param: any) => {\r\n        const color = param.seriesName === 'Positive' ? '#86efac' : \r\n                     param.seriesName === 'Neutral' ? '#fde68a' : '#fca5a5'\r\n        html += `<p style=\"color: ${color}\">\r\n          ${param.seriesName}: ${param.value}\r\n        </p>`\r\n      })\r\n      \r\n      html += '</div>'\r\n      return html\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['Positive', 'Neutral', 'Negative'].filter(sentiment => \r\n      props.visibleSentiments[sentiment.toLowerCase() as keyof SentimentVisibility]\r\n    ),\r\n    bottom: 0\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '10%',\r\n    top: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    boundaryGap: false,\r\n    data: props.data?.map(item => item.date) || [],\r\n    axisLabel: {\r\n      rotate: 45,\r\n      formatter: (value: string) => {\r\n        const date = new Date(value)\r\n        return date.toLocaleDateString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric' \r\n        })\r\n      }\r\n    }\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: [\r\n    props.visibleSentiments.positive && {\r\n      name: 'Positive',\r\n      type: 'line',\r\n      stack: 'Total',\r\n      areaStyle: {\r\n        color: '#86efac',\r\n        opacity: 0.3\r\n      },\r\n      lineStyle: {\r\n        color: '#86efac',\r\n        width: 3\r\n      },\r\n      itemStyle: {\r\n        color: '#86efac'\r\n      },\r\n      data: props.data?.map(item => item.positive) || []\r\n    },\r\n    props.visibleSentiments.neutral && {\r\n      name: 'Neutral',\r\n      type: 'line',\r\n      stack: 'Total',\r\n      areaStyle: {\r\n        color: '#fde68a',\r\n        opacity: 0.3\r\n      },\r\n      lineStyle: {\r\n        color: '#fde68a',\r\n        width: 3\r\n      },\r\n      itemStyle: {\r\n        color: '#fde68a'\r\n      },\r\n      data: props.data?.map(item => item.neutral) || []\r\n    },\r\n    props.visibleSentiments.negative && {\r\n      name: 'Negative',\r\n      type: 'line',\r\n      stack: 'Total',\r\n      areaStyle: {\r\n        color: '#fca5a5',\r\n        opacity: 0.3\r\n      },\r\n      lineStyle: {\r\n        color: '#fca5a5',\r\n        width: 3\r\n      },\r\n      itemStyle: {\r\n        color: '#fca5a5'\r\n      },\r\n      data: props.data?.map(item => item.negative) || []\r\n    }\r\n  ].filter(Boolean)\r\n}))\r\n</script>\r\n\r\n<template>\r\n  <div class=\"space-y-4\">\r\n    <div class=\"w-full h-[450px]\">\r\n      <v-chart class=\"w-full h-full\" :option=\"chartOption\" autoresize />\r\n    </div>\r\n\r\n    <!-- Explainer Text -->\r\n    <div class=\"mt-6 p-4 bg-gray-100 border border-gray-200 rounded-lg\">\r\n      <p class=\"text-sm text-gray-700 font-medium\">\r\n        See how your brand sentiment changes over time. The colored areas show the mix of positive (green), neutral (yellow), and negative (pink) mentions each day - giving you a clear picture of your brand's perception trends. Track these patterns to understand how community discussions and events influence your brand's reputation in the growing community.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.echarts {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue'\r\nimport { Search } from 'lucide-vue-next'\r\nimport { useAnalyticsStore } from '@/stores/analytics'\r\n\r\ninterface KeywordData {\r\n  keyword: string\r\n  mentions: number\r\n  positive: number\r\n  neutral: number\r\n  negative: number\r\n  source: string\r\n}\r\n\r\nconst props = defineProps<{\r\n  data: KeywordData[]\r\n}>()\r\n\r\nconst searchQuery = ref('')\r\nconst analytics = useAnalyticsStore()\r\n\r\nconst filteredData = computed(() => {\r\n  if (!props.data) return []\r\n  return props.data\r\n    .filter(item => item.keyword.toLowerCase().includes(searchQuery.value.toLowerCase()))\r\n})\r\n\r\nconst chartData = computed(() => {\r\n  // Use the same filtered and sorted data as the list\r\n  const data = filteredData.value.slice(0, 10) // Show only top 10 for better visualization\r\n  if (!data.length) return { keywords: [], mentions: [], colors: [] }\r\n\r\n  return {\r\n    keywords: data.map(item => item.keyword),\r\n    mentions: data.map(item => ({\r\n      value: analytics.filters.sortBy === 'mentions' ? \r\n        item.mentions : \r\n        item.mentions > 0 ? Math.round((item.positive / item.mentions) * 100) : 0,\r\n      itemStyle: {\r\n        color: [\r\n          '#a7f3d0',\r\n          '#bae6fd',\r\n          '#fde68a',\r\n          '#fecaca',\r\n          '#ddd6fe'\r\n        ][data.indexOf(item) % 5]\r\n      }\r\n    }))\r\n  }\r\n})\r\n\r\nconst chartOption = computed(() => ({\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'shadow'\r\n    },\r\n    formatter: (params: any) => {\r\n      const data = params[0]\r\n      const item = filteredData.value.find(i => i.keyword === data.name)\r\n      if (!item) return ''\r\n\r\n      return `\r\n        <div class=\"bg-white p-2 border border-gray-200 rounded shadow-md\">\r\n          <p class=\"font-semibold\">${data.name}</p>\r\n          <p>${analytics.filters.sortBy === 'mentions' ? \r\n            `${data.value} mentions` : \r\n            `${data.value}% positive sentiment`\r\n          }</p>\r\n        </div>\r\n      `\r\n    }\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'value',\r\n    axisLabel: {\r\n      formatter: (value: number) => \r\n        analytics.filters.sortBy === 'mentions' ? \r\n          value : \r\n          value + '%'\r\n    }\r\n  },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: chartData.value.keywords\r\n  },\r\n  series: [\r\n    {\r\n      type: 'bar',\r\n      data: chartData.value.mentions\r\n    }\r\n  ]\r\n}))\r\n\r\nconst calculatePercentage = (value: number, total: number) => {\r\n  if (total === 0) return 0\r\n  return Math.round((value / total) * 100)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"space-y-4\">\r\n    <!-- Loading State -->\r\n    <div v-if=\"!data\" class=\"h-[300px] flex items-center justify-center\">\r\n      <div class=\"text-center\">\r\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-800 mx-auto\"></div>\r\n        <p class=\"mt-4 text-gray-600\">Loading keyword analysis...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <template v-else>\r\n      <!-- Search -->\r\n      <div class=\"relative flex-1\">\r\n        <Search class=\"absolute left-3 top-1/2 h-5 w-5 -translate-y-1/2 text-gray-400\" />\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"Search keywords...\"\r\n          class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:border-green-500 focus:ring-2 focus:ring-green-500 focus:ring-offset-0\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Empty State -->\r\n      <div v-if=\"filteredData.length === 0\" class=\"h-[300px] flex items-center justify-center\">\r\n        <p class=\"text-gray-600\">No keyword data available</p>\r\n      </div>\r\n\r\n      <template v-else>\r\n        <!-- Chart -->\r\n        <div class=\"h-[300px]\">\r\n          <v-chart class=\"w-full h-full\" :option=\"chartOption\" autoresize />\r\n        </div>\r\n\r\n        <!-- Keyword List -->\r\n        <div class=\"space-y-4\">\r\n          <div\r\n            v-for=\"(item, index) in filteredData\"\r\n            :key=\"index\"\r\n            class=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\r\n          >\r\n            <div>\r\n              <h3 class=\"font-semibold text-gray-800\">{{ item.keyword }}</h3>\r\n              <p class=\"text-sm text-gray-600\">\r\n                {{ item.mentions }} mentions\r\n              </p>\r\n            </div>\r\n            <div class=\"flex space-x-2\">\r\n              <span class=\"px-2 py-1 text-sm rounded-md bg-gradient-to-r from-emerald-500/10 to-emerald-500/5 text-emerald-700 hover:from-emerald-500/20 hover:to-emerald-500/15 transition-colors duration-300\">\r\n                {{ calculatePercentage(item.positive, item.mentions) }}% Positive\r\n              </span>\r\n              <span class=\"px-2 py-1 text-sm rounded-md bg-gradient-to-r from-amber-500/10 to-amber-500/5 text-amber-700 hover:from-amber-500/20 hover:to-amber-500/15 transition-colors duration-300\">\r\n                {{ calculatePercentage(item.neutral, item.mentions) }}% Neutral\r\n              </span>\r\n              <span class=\"px-2 py-1 text-sm rounded-md bg-gradient-to-r from-rose-500/10 to-rose-500/5 text-rose-700 hover:from-rose-500/20 hover:to-rose-500/15 transition-colors duration-300\">\r\n                {{ calculatePercentage(item.negative, item.mentions) }}% Negative\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- Explainer Text -->\r\n      <div class=\"mt-6 p-4 bg-gray-100 border border-gray-200 rounded-lg\">\r\n        <p class=\"text-sm text-gray-700 font-medium\">\r\n          See which keywords are driving conversations about your brand. Each bar shows {{ analytics.filters.sortBy === 'mentions' ? 'total mentions' : 'positive sentiment percentage' }} across all platforms, with sentiment breakdowns showing positive (green), neutral (yellow), and negative (red) percentages. Use the platform filter to focus on specific communities.\r\n        </p>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.echarts {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\n\r\ninterface PlatformData {\r\n  name: string\r\n  value: number\r\n}\r\n\r\nconst props = defineProps<{\r\n  data: PlatformData[]\r\n}>()\r\n\r\nconst COLORS = [\r\n  // Each color is now more distinct while maintaining pastel quality\r\n  '#B5EAD7',  // Soft mint (distinctly lighter)\r\n  '#7DCEA0',  // Muted sage (darker green)\r\n  '#9EDBF9',  // Sky blue\r\n  '#B7C0EE',  // Periwinkle\r\n  '#FFB7B2',  // Salmon pink\r\n  '#E2B6CF',  // Dusty rose\r\n  '#FFD3B5',  // Peach\r\n  '#D4A5A5',  // Rosy brown\r\n  '#A5DEE5',  // Turquoise\r\n  '#957DAD',  // Muted purple\r\n  '#FFC8A2',  // Light coral\r\n  '#B5D8EB',  // Powder blue\r\n  '#E6CBA8',  // Sand\r\n  '#C3B1E1',  // Lavender\r\n  '#F3B0C3',  // Pink\r\n  '#89C2D9',  // Steel blue\r\n  '#FFCB77',  // Pale orange\r\n  '#C1E1C1',  // Pale green\r\n  '#B5838D',  // Mauve\r\n  '#A7C5EB',  // Light steel blue\r\n  '#C6DEF1',  // Light sky blue\r\n  '#DBCDF0',  // Light violet\r\n  '#F7D9C4',  // Light peach\r\n  '#E2CFC4',  // Pale taupe\r\n  '#C9E4DE'   // Pale cyan\r\n]\r\n\r\nconst totalMentions = computed(() => \r\n  props.data?.reduce((sum, platform) => sum + platform.value, 0) || 0\r\n)\r\n\r\nconst chartOption = computed(() => ({\r\n  tooltip: {\r\n    formatter: (params: any) => {\r\n      const percentage = ((params.value / totalMentions.value) * 100).toFixed(1)\r\n      return `\r\n        <div class=\"bg-white p-2 border border-gray-200 rounded shadow-md\">\r\n          <p class=\"font-semibold\">${params.name}</p>\r\n          <p>Mentions: ${params.value}</p>\r\n          <p>${percentage}% of total</p>\r\n        </div>\r\n      `\r\n    }\r\n  },\r\n  series: [{\r\n    type: 'treemap',\r\n    roam: false,\r\n    data: props.data?.map((item, index) => ({\r\n      name: item.name,\r\n      value: item.value,\r\n      itemStyle: {\r\n        color: COLORS[index % COLORS.length]\r\n      }\r\n    })) || [],\r\n    label: {\r\n      show: true,\r\n      formatter: '{b}',\r\n      fontSize: 14,\r\n      color: '#666'\r\n    },\r\n    breadcrumb: {\r\n      show: false\r\n    },\r\n    itemStyle: {\r\n      borderColor: '#fff',\r\n      borderWidth: 3,\r\n      gapWidth: 3\r\n    }\r\n  }]\r\n}))\r\n</script>\r\n\r\n<template>\r\n  <div class=\"space-y-6\">\r\n    <!-- Loading State -->\r\n    <div v-if=\"!data\" class=\"h-[300px] flex items-center justify-center\">\r\n      <div class=\"text-center\">\r\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-800 mx-auto\"></div>\r\n        <p class=\"mt-4 text-gray-600\">Loading platform data...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-else-if=\"data.length === 0\" class=\"h-[300px] flex items-center justify-center\">\r\n      <p class=\"text-gray-600\">No platform data available</p>\r\n    </div>\r\n\r\n    <template v-else>\r\n      <!-- Treemap Chart -->\r\n      <div class=\"h-[300px]\">\r\n        <v-chart class=\"w-full h-full\" :option=\"chartOption\" autoresize />\r\n      </div>\r\n\r\n      <!-- Platform Statistics -->\r\n      <div class=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n        <div\r\n          v-for=\"(platform, index) in data\"\r\n          :key=\"platform.name\"\r\n          class=\"flex items-center bg-gray-50 p-3 rounded-lg shadow-sm\"\r\n        >\r\n          <div\r\n            class=\"w-4 h-4 rounded-full mr-3 flex-shrink-0\"\r\n            :style=\"{ backgroundColor: COLORS[index % COLORS.length] }\"\r\n          />\r\n          <div>\r\n            <span class=\"text-sm font-medium text-gray-900\">{{ platform.name }}</span>\r\n            <p class=\"text-xs text-gray-700\">\r\n              {{ ((platform.value / totalMentions) * 100).toFixed(1) }}% of mentions\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- Explainer Text -->\r\n    <div class=\"mt-6 p-4 bg-gray-100 border border-gray-200 rounded-lg\">\r\n      <p class=\"text-sm text-gray-700 font-medium\">\r\n        Want to know where your target audience hangs out online? This chart shows all the growing communities where your brand gets mentioned. The bigger the block, the more your brand gets discussed there. Track these platform trends to understand where your community is most active and identify the best places to engage with your audience.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.echarts {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\n\r\ninterface CorrelationData {\r\n  keyword: string\r\n  positive: number\r\n  neutral: number\r\n  negative: number\r\n}\r\n\r\nconst props = defineProps<{\r\n  data: CorrelationData[]\r\n}>()\r\n\r\nconst chartOption = computed(() => ({\r\n  tooltip: {\r\n    trigger: 'item',\r\n    formatter: (params: any) => {\r\n      const value = (params.value[2] * 100).toFixed(1)\r\n      return `\r\n        <div class=\"bg-white p-2 border border-gray-200 rounded shadow-md\">\r\n          <p class=\"font-semibold\">${params.value[0]}</p>\r\n          <p>${params.seriesName}: ${value}%</p>\r\n        </div>\r\n      `\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['Positive', 'Neutral', 'Negative'],\r\n    bottom: 0\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '15%',\r\n    top: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: props.data?.map(item => item.keyword) || [],\r\n    axisLabel: {\r\n      interval: 0,\r\n      rotate: 45\r\n    }\r\n  },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: ['Negative', 'Neutral', 'Positive']\r\n  },\r\n  series: [\r\n    {\r\n      name: 'Positive',\r\n      type: 'scatter',\r\n      data: props.data?.map(item => [item.keyword, 'Positive', item.positive]) || [],\r\n      symbolSize: (value: any) => value[2] * 100,\r\n      itemStyle: {\r\n        color: '#86efac'\r\n      }\r\n    },\r\n    {\r\n      name: 'Neutral',\r\n      type: 'scatter',\r\n      data: props.data?.map(item => [item.keyword, 'Neutral', item.neutral]) || [],\r\n      symbolSize: (value: any) => value[2] * 100,\r\n      itemStyle: {\r\n        color: '#fde68a'\r\n      }\r\n    },\r\n    {\r\n      name: 'Negative',\r\n      type: 'scatter',\r\n      data: props.data?.map(item => [item.keyword, 'Negative', item.negative]) || [],\r\n      symbolSize: (value: any) => value[2] * 200,\r\n      itemStyle: {\r\n        color: '#fca5a5'\r\n      }\r\n    }\r\n  ]\r\n}))\r\n</script>\r\n\r\n<template>\r\n  <div class=\"space-y-4\">\r\n    <!-- Loading State -->\r\n    <div v-if=\"!data\" class=\"h-[400px] flex items-center justify-center\">\r\n      <div class=\"text-center\">\r\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-800 mx-auto\"></div>\r\n        <p class=\"mt-4 text-gray-600\">Loading correlation data...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-else-if=\"data.length === 0\" class=\"h-[400px] flex items-center justify-center\">\r\n      <p class=\"text-gray-600\">No correlation data available</p>\r\n    </div>\r\n\r\n    <!-- Scatter Plot -->\r\n    <div v-else class=\"h-[400px]\">\r\n      <v-chart class=\"w-full h-full\" :option=\"chartOption\" autoresize />\r\n    </div>\r\n\r\n    <!-- Explainer Text -->\r\n    <div class=\"mt-6 p-4 bg-gray-100 border border-gray-200 rounded-lg\">\r\n      <p class=\"text-sm text-gray-700 font-medium\">\r\n        This chart shows how people talk about your brand online. Bigger circles mean more people are discussing it that way. Green shows positive comments, yellow shows neutral mentions, and pink shows negative feedback. Track these sentiment patterns to understand your brand's reputation and performance in the growing community.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.echarts {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, watch } from 'vue'\r\nimport { Calendar } from 'lucide-vue-next'\r\n\r\n// 2. Component imports\r\n// None needed\r\n\r\n// 3. Type definitions\r\ninterface DateRange {\r\n  start: Date\r\n  end: Date\r\n}\r\n\r\n// 4. Props and emits\r\nconst props = defineProps<{\r\n  modelValue: DateRange\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:modelValue', value: DateRange): void\r\n}>()\r\n\r\n// 5. State management\r\nconst dateRange = ref<DateRange>({\r\n  start: props.modelValue.start,\r\n  end: props.modelValue.end\r\n})\r\n\r\nconst isOpen = ref(false)\r\n\r\n// Format date for input value\r\nfunction formatDateForInput(date: Date): string {\r\n  return date.toISOString().split('T')[0]\r\n}\r\n\r\n// Parse date from input value\r\nfunction parseDateFromInput(value: string): Date {\r\n  const date = new Date(value)\r\n  // Set time to midnight UTC to avoid timezone issues\r\n  date.setUTCHours(0, 0, 0, 0)\r\n  return date\r\n}\r\n\r\n// 6. Methods\r\nfunction setPresetRange(days: number) {\r\n  const end = new Date()\r\n  end.setUTCHours(23, 59, 59, 999)\r\n  \r\n  const start = new Date()\r\n  start.setDate(start.getDate() - days)\r\n  start.setUTCHours(0, 0, 0, 0)\r\n  \r\n  dateRange.value = { start, end }\r\n  updateDateRange()\r\n}\r\n\r\nfunction updateDateRange() {\r\n  emit('update:modelValue', {\r\n    start: dateRange.value.start,\r\n    end: dateRange.value.end\r\n  })\r\n  isOpen.value = false\r\n}\r\n\r\nfunction handleStartDateChange(event: Event) {\r\n  const input = event.target as HTMLInputElement\r\n  dateRange.value.start = parseDateFromInput(input.value)\r\n}\r\n\r\nfunction handleEndDateChange(event: Event) {\r\n  const input = event.target as HTMLInputElement\r\n  dateRange.value.end = parseDateFromInput(input.value)\r\n}\r\n\r\n// Watch for external changes\r\nwatch(() => props.modelValue, (newValue) => {\r\n  dateRange.value = {\r\n    start: newValue.start,\r\n    end: newValue.end\r\n  }\r\n}, { deep: true })\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative\">\r\n    <button\r\n      @click=\"isOpen = !isOpen\"\r\n      class=\"w-full flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-md hover:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n    >\r\n      <Calendar class=\"h-4 w-4 text-gray-500\" />\r\n      <span class=\"text-sm text-gray-700\">\r\n        {{ dateRange.start.toLocaleDateString() }} - {{ dateRange.end.toLocaleDateString() }}\r\n      </span>\r\n    </button>\r\n\r\n    <!-- Dropdown Panel -->\r\n    <div\r\n      v-if=\"isOpen\"\r\n      class=\"absolute z-10 mt-2 p-4 bg-white border border-gray-200 rounded-lg shadow-lg w-[calc(100%-16px)] right-2\"\r\n    >\r\n      <div class=\"space-y-4\">\r\n        <!-- Quick Presets -->\r\n        <div class=\"space-y-2\">\r\n          <h3 class=\"text-sm font-medium text-gray-700\">Quick Select</h3>\r\n          <div class=\"flex gap-2\">\r\n            <button\r\n              v-for=\"(days, label) in { '7d': 7, '30d': 30, '90d': 90 }\"\r\n              :key=\"label\"\r\n              @click=\"setPresetRange(days)\"\r\n              class=\"px-3 py-1 text-sm rounded-md border border-gray-300 hover:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n            >\r\n              Last {{ label }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Custom Range -->\r\n        <div class=\"space-y-2\">\r\n          <h3 class=\"text-sm font-medium text-gray-700\">Custom Range</h3>\r\n          <div class=\"flex flex-col gap-2\">\r\n            <div class=\"w-full\">\r\n              <label class=\"block text-xs text-gray-600 mb-1\">Start Date</label>\r\n              <input\r\n                type=\"date\"\r\n                :value=\"formatDateForInput(dateRange.start)\"\r\n                @change=\"handleStartDateChange\"\r\n                class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n              />\r\n            </div>\r\n            <div class=\"w-full\">\r\n              <label class=\"block text-xs text-gray-600 mb-1\">End Date</label>\r\n              <input\r\n                type=\"date\"\r\n                :value=\"formatDateForInput(dateRange.end)\"\r\n                @change=\"handleEndDateChange\"\r\n                class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"flex justify-end gap-2\">\r\n          <button\r\n            @click=\"isOpen = false\"\r\n            class=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            @click=\"updateDateRange\"\r\n            class=\"px-3 py-1 text-sm bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, watch } from 'vue'\r\nimport { Clock } from 'lucide-vue-next'\r\nimport { useAnalyticsStore } from '@/stores/analytics'\r\n\r\n// 2. Component imports\r\n// None needed\r\n\r\n// 3. Type definitions\r\ntype TimeFrame = '7d' | '30d' | '90d'\r\n\r\ninterface TimeFrameOption {\r\n  value: TimeFrame\r\n  label: string\r\n  description: string\r\n  days: number\r\n}\r\n\r\n// 4. Props and emits\r\nconst props = defineProps<{\r\n  modelValue: TimeFrame\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:modelValue', value: TimeFrame): void\r\n}>()\r\n\r\n// 5. State management\r\nconst selectedTimeFrame = ref<TimeFrame>(props.modelValue)\r\nconst analytics = useAnalyticsStore()\r\n\r\nconst timeFrameOptions: TimeFrameOption[] = [\r\n  {\r\n    value: '7d',\r\n    label: '7 Days',\r\n    description: 'View data from the past week',\r\n    days: 7\r\n  },\r\n  {\r\n    value: '30d',\r\n    label: '30 Days',\r\n    description: 'View data from the past month',\r\n    days: 30\r\n  },\r\n  {\r\n    value: '90d',\r\n    label: '90 Days',\r\n    description: 'View data from the past quarter',\r\n    days: 90\r\n  }\r\n]\r\n\r\n// 6. Methods\r\nfunction selectTimeFrame(timeFrame: TimeFrame) {\r\n  selectedTimeFrame.value = timeFrame\r\n  \r\n  // Update both the timeFrame and dateRange in the store\r\n  const option = timeFrameOptions.find(opt => opt.value === timeFrame)\r\n  if (option) {\r\n    const end = new Date()\r\n    end.setUTCHours(23, 59, 59, 999)\r\n    \r\n    const start = new Date()\r\n    start.setDate(start.getDate() - option.days)\r\n    start.setUTCHours(0, 0, 0, 0)\r\n    \r\n    // Update both timeFrame and dateRange together\r\n    analytics.updateFilters({\r\n      timeFrame,\r\n      dateRange: { start, end }\r\n    })\r\n  }\r\n  \r\n  emit('update:modelValue', timeFrame)\r\n}\r\n\r\n// Watch for external changes\r\nwatch(() => props.modelValue, (newValue) => {\r\n  selectedTimeFrame.value = newValue\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative inline-block\">\r\n    <div class=\"flex gap-2\">\r\n      <button\r\n        v-for=\"option in timeFrameOptions\"\r\n        :key=\"option.value\"\r\n        @click=\"selectTimeFrame(option.value)\"\r\n        :class=\"[\r\n          'flex items-center gap-2 px-4 py-2 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-green-500',\r\n          selectedTimeFrame === option.value\r\n            ? 'bg-green-50 text-green-700 border border-green-200'\r\n            : 'border border-gray-300 text-gray-700 hover:border-green-500'\r\n        ]\"\r\n        :title=\"option.description\"\r\n      >\r\n        <Clock\r\n          v-if=\"selectedTimeFrame === option.value\"\r\n          class=\"h-4 w-4\"\r\n        />\r\n        {{ option.label }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, watch, computed } from 'vue'\r\nimport { Globe, Check } from 'lucide-vue-next'\r\n\r\n// 2. Component imports\r\n// None needed\r\n\r\n// 3. Type definitions\r\ninterface Platform {\r\n  value: string\r\n  label: string\r\n}\r\n\r\n// 4. Props and emits\r\nconst props = defineProps<{\r\n  modelValue: string[]\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:modelValue', value: string[]): void\r\n}>()\r\n\r\n// 5. State management\r\nconst selectedPlatforms = ref<string[]>(props.modelValue)\r\nconst isOpen = ref(false)\r\n\r\nconst platforms: Platform[] = [\r\n  { value: 'autoflower.org', label: 'Autoflower' },\r\n  { value: 'beanbasement.nl', label: 'Bean Basement' },\r\n  { value: 'growersnetwork.org', label: 'Growers Network' },\r\n  { value: 'growweedeasy.com', label: 'GrowWeedEasy' },\r\n  { value: 'homegrowncannabisco.community', label: 'Homegrown Cannabis Co' },\r\n  { value: 'icmag.com', label: 'ICMag' },\r\n  { value: 'ilgmforum.com', label: 'ILGM Forum' },\r\n  { value: 'marijuanapassion.com', label: 'MarijuanaPassion' },\r\n  { value: '420magazine.com', label: '420 Magazine' },\r\n  { value: 'overgrow.com', label: 'Overgrow' },\r\n  { value: 'percysgrowroom.com', label: \"Percy's Grow Room\" },\r\n  { value: 'phenohunter.com', label: 'PhenoHunter' },\r\n  { value: 'reddit.com', label: 'Reddit' },\r\n  { value: 'rollitup.org', label: 'RollItUp' },\r\n  { value: 'thcfarmer.com', label: 'THC Farmer' },\r\n  { value: 'uk420.com', label: 'UK420' },\r\n  { value: '420sa.co.za', label: '420SA' }\r\n]\r\n\r\n// 6. Methods\r\nfunction togglePlatform(platform: string) {\r\n  const index = selectedPlatforms.value.indexOf(platform)\r\n  if (index === -1) {\r\n    selectedPlatforms.value.push(platform)\r\n  } else {\r\n    selectedPlatforms.value.splice(index, 1)\r\n  }\r\n  updateSelection()\r\n}\r\n\r\nfunction selectAll() {\r\n  selectedPlatforms.value = platforms.map(p => p.value)\r\n  updateSelection()\r\n}\r\n\r\nfunction clearSelection() {\r\n  selectedPlatforms.value = []\r\n  updateSelection()\r\n}\r\n\r\nfunction updateSelection() {\r\n  emit('update:modelValue', selectedPlatforms.value)\r\n}\r\n\r\n// Watch for external changes\r\nwatch(() => props.modelValue, (newValue) => {\r\n  selectedPlatforms.value = [...newValue]\r\n}, { deep: true })\r\n\r\n// Computed display text\r\nconst displayText = computed(() => {\r\n  if (selectedPlatforms.value.length === 0) {\r\n    return 'All Platforms'\r\n  }\r\n  if (selectedPlatforms.value.length === platforms.length) {\r\n    return 'All Platforms'\r\n  }\r\n  if (selectedPlatforms.value.length === 1) {\r\n    return platforms.find(p => p.value === selectedPlatforms.value[0])?.label || 'Unknown Platform'\r\n  }\r\n  return `${selectedPlatforms.value.length} Platforms`\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative\">\r\n    <button\r\n      @click=\"isOpen = !isOpen\"\r\n      class=\"w-full flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-md hover:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n    >\r\n      <Globe class=\"h-4 w-4 text-gray-500\" />\r\n      <span class=\"text-sm text-gray-700\">{{ displayText }}</span>\r\n    </button>\r\n\r\n    <!-- Dropdown Panel -->\r\n    <div\r\n      v-if=\"isOpen\"\r\n      class=\"absolute z-10 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg\"\r\n    >\r\n      <!-- Actions -->\r\n      <div class=\"p-2 border-b border-gray-200 flex justify-between\">\r\n        <button\r\n          @click=\"selectAll\"\r\n          class=\"text-sm text-green-600 hover:text-green-700\"\r\n        >\r\n          Select All\r\n        </button>\r\n        <button\r\n          @click=\"clearSelection\"\r\n          class=\"text-sm text-gray-600 hover:text-gray-700\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Platform List -->\r\n      <div class=\"max-h-64 overflow-y-auto\">\r\n        <button\r\n          v-for=\"platform in platforms\"\r\n          :key=\"platform.value\"\r\n          @click=\"togglePlatform(platform.value)\"\r\n          class=\"w-full px-4 py-2 flex items-center justify-between hover:bg-gray-50\"\r\n        >\r\n          <span class=\"text-sm text-gray-700\">{{ platform.label }}</span>\r\n          <Check\r\n            v-if=\"selectedPlatforms.includes(platform.value)\"\r\n            class=\"h-4 w-4 text-green-600\"\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.max-h-64 {\r\n  max-height: 16rem;\r\n}\r\n</style>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, watch } from 'vue'\r\n\r\n// 2. Component imports\r\n// None needed\r\n\r\n// 3. Type definitions\r\ninterface SentimentVisibility {\r\n  positive: boolean\r\n  neutral: boolean\r\n  negative: boolean\r\n}\r\n\r\n// 4. Props and emits\r\nconst props = defineProps<{\r\n  modelValue: SentimentVisibility\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:modelValue', value: SentimentVisibility): void\r\n}>()\r\n\r\n// 5. State management\r\nconst visibility = ref<SentimentVisibility>({\r\n  positive: props.modelValue.positive,\r\n  neutral: props.modelValue.neutral,\r\n  negative: props.modelValue.negative\r\n})\r\n\r\n// 6. Methods\r\nfunction toggleSentiment(type: keyof SentimentVisibility) {\r\n  visibility.value[type] = !visibility.value[type]\r\n  emit('update:modelValue', { ...visibility.value })\r\n}\r\n\r\n// Watch for external changes\r\nwatch(() => props.modelValue, (newValue) => {\r\n  visibility.value = { ...newValue }\r\n}, { deep: true })\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex gap-2\">\r\n    <button\r\n      @click=\"toggleSentiment('positive')\"\r\n      :class=\"[\r\n        'flex-1 flex items-center justify-center gap-1.5 px-3.5 py-1.5 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-green-500',\r\n        visibility.positive\r\n          ? 'bg-green-50 text-green-700 border border-green-200'\r\n          : 'border border-gray-300 text-gray-400 hover:border-green-500'\r\n      ]\"\r\n    >\r\n      Positive\r\n    </button>\r\n\r\n    <button\r\n      @click=\"toggleSentiment('neutral')\"\r\n      :class=\"[\r\n        'flex-1 flex items-center justify-center gap-1.5 px-3.5 py-1.5 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-yellow-500',\r\n        visibility.neutral\r\n          ? 'bg-yellow-50 text-yellow-700 border border-yellow-200'\r\n          : 'border border-gray-300 text-gray-400 hover:border-yellow-500'\r\n      ]\"\r\n    >\r\n      Neutral\r\n    </button>\r\n\r\n    <button\r\n      @click=\"toggleSentiment('negative')\"\r\n      :class=\"[\r\n        'flex-1 flex items-center justify-center gap-1.5 px-3.5 py-1.5 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-red-500',\r\n        visibility.negative\r\n          ? 'bg-red-50 text-red-700 border border-red-200'\r\n          : 'border border-gray-300 text-gray-400 hover:border-red-500'\r\n      ]\"\r\n    >\r\n      Negative\r\n    </button>\r\n  </div>\r\n</template>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, computed } from 'vue'\r\nimport {\r\n  SlidersHorizontal,\r\n  X,\r\n  Calendar,\r\n  Globe,\r\n  Clock,\r\n  BarChart2,\r\n  Hash,\r\n  SlidersHorizontal as SortIcon\r\n} from 'lucide-vue-next'\r\n\r\n// 2. Component imports\r\nimport {\r\n  DateRangePicker,\r\n  TimeFrameSelector,\r\n  PlatformSelector,\r\n  SentimentToggle\r\n} from './filters'\r\nimport { useAnalyticsStore } from '@/stores/analytics'\r\n\r\n// 3. Type definitions\r\n// Using types from @/types/analytics\r\n\r\n// 4. Props and emits\r\n// No props needed as we're using the store directly\r\n\r\n// 5. State management\r\nconst isOpen = ref(false)\r\nconst analytics = useAnalyticsStore()\r\n\r\nconst activeFilterCount = computed(() => {\r\n  let count = 0\r\n  \r\n  // Count active platforms\r\n  if (analytics.filters.platforms.length > 0) count++\r\n  \r\n  // Count active sentiment toggles\r\n  const sentiments = analytics.filters.visibleSentiments\r\n  if (!sentiments.positive || !sentiments.neutral || !sentiments.negative) count++\r\n  \r\n  // Count if date range is not default (last 7 days)\r\n  const defaultStart = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\r\n  const defaultEnd = new Date()\r\n  if (\r\n    analytics.filters.dateRange.start.getTime() !== defaultStart.getTime() ||\r\n    analytics.filters.dateRange.end.getTime() !== defaultEnd.getTime()\r\n  ) count++\r\n  \r\n  // Count if min mentions is not 0\r\n  if (analytics.filters.minMentions > 0) count++\r\n  \r\n  return count\r\n})\r\n\r\n// 6. Methods\r\nfunction updateFilters(key: string, value: any) {\r\n  analytics.updateFilters({ [key]: value })\r\n}\r\n\r\nfunction handleMinMentionsChange(event: Event) {\r\n  const target = event.target as HTMLInputElement\r\n  updateFilters('minMentions', parseInt(target.value))\r\n}\r\n\r\nfunction handleSortByChange(event: Event) {\r\n  const target = event.target as HTMLSelectElement\r\n  updateFilters('sortBy', target.value)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <!-- Filter Button -->\r\n    <button\r\n      @click=\"isOpen = true\"\r\n      class=\"fixed bottom-6 right-6 flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-full shadow-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\r\n    >\r\n      <SlidersHorizontal class=\"h-5 w-5\" />\r\n      <span>Filters</span>\r\n      <span\r\n        v-if=\"activeFilterCount > 0\"\r\n        class=\"flex items-center justify-center w-5 h-5 text-xs bg-white text-green-600 rounded-full\"\r\n      >\r\n        {{ activeFilterCount }}\r\n      </span>\r\n    </button>\r\n\r\n    <!-- Overlay -->\r\n    <div\r\n      v-if=\"isOpen\"\r\n      class=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n      @click=\"isOpen = false\"\r\n    />\r\n\r\n    <!-- Panel -->\r\n    <div\r\n      v-if=\"isOpen\"\r\n      class=\"fixed inset-y-0 right-0 w-96 bg-[#fafafa] shadow-xl z-50 transform transition-transform duration-300\"\r\n      :class=\"isOpen ? 'translate-x-0' : 'translate-x-full'\"\r\n    >\r\n      <!-- Header -->\r\n      <div class=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between bg-white shadow-sm\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <div class=\"w-1 h-6 bg-green-500 rounded-full shadow-sm\"></div>\r\n          <h2 class=\"text-lg font-semibold text-gray-800\">Filters</h2>\r\n        </div>\r\n        <button\r\n          @click=\"isOpen = false\"\r\n          class=\"text-gray-400 hover:text-gray-600 hover:bg-gray-100 p-1.5 rounded-lg transition-colors\"\r\n        >\r\n          <X class=\"h-5 w-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Filter Sections -->\r\n      <div class=\"flex-1 overflow-y-auto\">\r\n        <div class=\"p-6 space-y-6\">\r\n          <!-- Date Range -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700\">\r\n              <Calendar class=\"w-4 h-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Date Range</h3>\r\n            </div>\r\n            <DateRangePicker\r\n              v-model=\"analytics.filters.dateRange\"\r\n              @update:modelValue=\"value => updateFilters('dateRange', value)\"\r\n              class=\"w-full\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Platforms -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700\">\r\n              <Globe class=\"w-4 h-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Platforms</h3>\r\n            </div>\r\n            <PlatformSelector\r\n              v-model=\"analytics.filters.platforms\"\r\n              @update:modelValue=\"value => updateFilters('platforms', value)\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Quick Timeframe -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700\">\r\n              <Clock class=\"w-4 h-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Quick Timeframe</h3>\r\n            </div>\r\n            <TimeFrameSelector\r\n              v-model=\"analytics.filters.timeFrame\"\r\n              @update:modelValue=\"value => updateFilters('timeFrame', value)\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Sentiment Analysis -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700\">\r\n              <BarChart2 class=\"w-4 h-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Sentiment Over Time</h3>\r\n            </div>\r\n            <SentimentToggle\r\n              v-model=\"analytics.filters.visibleSentiments\"\r\n              @update:modelValue=\"value => updateFilters('visibleSentiments', value)\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Minimum Mentions -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div class=\"flex items-center gap-2 text-gray-700\">\r\n                <Hash class=\"w-4 h-4 text-green-600\" />\r\n                <h3 class=\"font-medium\">Minimum Mentions</h3>\r\n              </div>\r\n              <span class=\"text-sm font-medium text-green-600\">{{ analytics.filters.minMentions }}</span>\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n              <input\r\n                type=\"range\"\r\n                v-model=\"analytics.filters.minMentions\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"5\"\r\n                class=\"w-full h-2 bg-gray-200 rounded-full appearance-none cursor-pointer accent-green-500\"\r\n                @change=\"handleMinMentionsChange\"\r\n              />\r\n              <div class=\"flex justify-between text-xs text-gray-400\">\r\n                <span>0</span>\r\n                <span>50</span>\r\n                <span>100</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Sort By -->\r\n          <div class=\"space-y-3 bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\r\n            <div class=\"flex items-center gap-2 text-gray-700\">\r\n              <SortIcon class=\"w-4 h-4 text-green-600\" />\r\n              <h3 class=\"font-medium\">Sort By</h3>\r\n            </div>\r\n            <select\r\n              v-model=\"analytics.filters.sortBy\"\r\n              class=\"w-full px-4 py-2.5 text-sm text-gray-600 bg-gray-50 rounded-lg border border-gray-200 hover:border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 appearance-none cursor-pointer transition-colors\"\r\n              @change=\"handleSortByChange\"\r\n            >\r\n              <option value=\"mentions\">Mention Count</option>\r\n              <option value=\"sentiment\">Sentiment Ratio</option>\r\n              <option value=\"growth\">Growth Rate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"p-6 border-t border-gray-200 bg-white\">\r\n        <button\r\n          @click=\"analytics.resetFilters\"\r\n          class=\"w-full px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 bg-gray-50 hover:bg-gray-100 rounded-xl transition-colors border border-gray-200 hover:border-gray-300\"\r\n        >\r\n          Reset All Filters\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.h-\\[calc\\(100vh-10rem\\)\\] {\r\n  height: calc(100vh - 10rem);\r\n}\r\n</style>","<script setup lang=\"ts\">\r\nimport { onMounted, computed } from 'vue'\r\nimport {\r\n  MessageCircle,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Minus,\r\n  HeartPulse,\r\n  Timer,\r\n  ArrowRight,\r\n  Trophy,\r\n  Hash,\r\n  Layout,\r\n  Link2,\r\n  Network\r\n} from 'lucide-vue-next'\r\nimport { useAnalyticsStore } from '@/stores/analytics'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport type { StatCard } from '@/types/analytics'\r\nimport SentimentChart from './components/SentimentChart.vue'\r\nimport KeywordAnalysis from './components/KeywordAnalysis.vue'\r\nimport PlatformSummary from './components/PlatformSummary.vue'\r\nimport KeywordCorrelation from './components/KeywordCorrelation.vue'\r\nimport FilterPanel from './components/FilterPanel.vue'\r\nimport analyticsImage from '@/assets/images/analytics/analytics-green.png'\r\n\r\nconst analytics = useAnalyticsStore()\r\nconst auth = useAuthStore()\r\n\r\n// Fetch data on component mount\r\nonMounted(() => {\r\n  analytics.fetchAnalyticsData()\r\n})\r\n\r\n// Computed stat cards based on real data\r\nconst statCards = computed((): StatCard[] => {\r\n  const stats = analytics.overallStats\r\n  if (!stats) return []\r\n\r\n  return [\r\n    { \r\n      title: \"Total Mentions\",\r\n      value: stats.totalMentions,\r\n      change: \"+15%\", // TODO: Calculate actual change\r\n      icon: MessageCircle,\r\n      color: \"text-blue-700\",\r\n      bgColor: \"from-blue-100/60 to-indigo-100/60\",\r\n      borderColor: \"border-blue-500/10\"\r\n    },\r\n    {\r\n      title: \"Positive Sentiment\",\r\n      value: `${stats.positiveSentiment}%`,\r\n      change: \"+5%\", // TODO: Calculate actual change\r\n      icon: TrendingUp,\r\n      color: \"text-emerald-700\",\r\n      bgColor: \"from-emerald-100/60 to-green-100/60\",\r\n      borderColor: \"border-emerald-500/10\"\r\n    },\r\n    {\r\n      title: \"Negative Sentiment\",\r\n      value: `${stats.negativeSentiment}%`,\r\n      change: \"-3%\", // TODO: Calculate actual change\r\n      icon: TrendingDown,\r\n      color: \"text-rose-700\",\r\n      bgColor: \"from-rose-100/60 to-red-100/60\",\r\n      borderColor: \"border-rose-500/10\"\r\n    },\r\n    {\r\n      title: \"Neutral Sentiment\",\r\n      value: `${stats.neutralSentiment}%`,\r\n      change: \"-2%\", // TODO: Calculate actual change\r\n      icon: Minus,\r\n      color: \"text-amber-700\",\r\n      bgColor: \"from-amber-100/60 to-yellow-100/60\",\r\n      borderColor: \"border-amber-500/10\"\r\n    },\r\n  ]\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex-1 p-6\">\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-6\">\r\n      <!-- Error State -->\r\n      <div v-if=\"analytics.error\" class=\"text-center py-8\">\r\n        <p class=\"text-red-600\">{{ analytics.error }}</p>\r\n        <button\r\n          @click=\"analytics.fetchAnalyticsData\"\r\n          class=\"mt-4 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n\r\n      <template v-else>\r\n        <!-- Welcome Section -->\r\n        <div class=\"mb-8 bg-white rounded-lg shadow-sm p-6\">\r\n          <div class=\"flex flex-col md:flex-row items-center gap-6\">\r\n            <div class=\"flex-1\">\r\n              <h1 class=\"text-xl md:text-2xl font-medium text-green-800 mb-2\">\r\n                <span v-if=\"analytics.isLoading\" class=\"h-9 bg-gray-200 rounded animate-pulse block w-48\"></span>\r\n                <span v-else>Hey {{ auth.username || 'there' }}!</span>\r\n              </h1>\r\n              <div v-if=\"analytics.isLoading\" class=\"space-y-2\">\r\n                <div class=\"h-5 bg-gray-200 rounded animate-pulse w-full\"></div>\r\n                <div class=\"h-5 bg-gray-200 rounded animate-pulse w-3/4\"></div>\r\n                <div class=\"h-5 bg-gray-200 rounded animate-pulse w-5/6\"></div>\r\n              </div>\r\n              <p v-else class=\"text-gray-600 text-lg\">\r\n                Ready to explore your brand's impact? Here's a complete view of what people are saying about you across the growing community. Dive into your latest analytics to understand how your brand resonates with growers and identify opportunities for growth. We track and analyze conversations across all major growing platforms to give you comprehensive insights about your brand's presence and reputation in the community.\r\n              </p>\r\n            </div>\r\n            <div class=\"w-48 h-48 flex-shrink-0 relative\">\r\n              <div v-if=\"analytics.isLoading\" class=\"w-full h-full bg-gray-200 rounded animate-pulse\"></div>\r\n              <img\r\n                v-else\r\n                :src=\"analyticsImage\"\r\n                alt=\"Analytics illustration\"\r\n                class=\"w-full h-full object-contain\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Summary Section with Skeleton -->\r\n        <div class=\"mb-8\">\r\n          <div class=\"flex gap-6\">\r\n            <div v-if=\"analytics.isLoading\" v-for=\"i in 4\" :key=\"i\" class=\"bg-gray-50 rounded-lg border border-gray-200 shadow-sm p-4\">\r\n              <div class=\"flex items-center justify-between space-y-0 pb-2\">\r\n                <div class=\"h-5 bg-gray-200 rounded animate-pulse w-24\"></div>\r\n                <div class=\"h-4 w-4 bg-gray-200 rounded-full animate-pulse\"></div>\r\n              </div>\r\n              <div>\r\n                <div class=\"h-8 bg-gray-200 rounded animate-pulse w-16 mt-2\"></div>\r\n                <div class=\"h-4 bg-gray-200 rounded animate-pulse w-32 mt-2\"></div>\r\n              </div>\r\n            </div>\r\n            <template v-else>\r\n              <div\r\n                v-for=\"(card, index) in statCards\"\r\n                :key=\"index\"\r\n                class=\"shadow-sm hover:shadow-md transition-all duration-200 rounded-lg p-6 flex-1 border\"\r\n                :class=\"[`bg-gradient-to-br ${card.bgColor}`, card.borderColor]\"\r\n              >\r\n                <div class=\"flex items-center justify-between mb-4\">\r\n                  <h3 :class=\"[card.color, 'text-sm font-medium']\">{{ card.title }}</h3>\r\n                  <component :is=\"card.icon\" :class=\"[card.color, 'h-4 w-4']\" />\r\n                </div>\r\n                <div>\r\n                  <div :class=\"[card.color, 'text-3xl font-bold']\">{{ card.value }}</div>\r\n                  <p :class=\"[card.color.replace('text-', 'text-opacity-80 text-'), 'text-sm mt-1']\">\r\n                    {{ card.change }} from last month\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sentiment Chart with Skeleton -->\r\n        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100\">\r\n                <HeartPulse class=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <div>\r\n                <h3 class=\"text-lg font-medium text-gray-700\">Sentiment Over Time</h3>\r\n                <p class=\"text-base text-gray-500\">Trend of positive, negative and neutral mentions</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex items-center gap-2\">\r\n              <span class=\"text-sm text-gray-600\">\r\n                {{ analytics.filters.dateRange.start.toLocaleDateString() }} - \r\n                {{ analytics.filters.dateRange.end.toLocaleDateString() }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"analytics.isLoading\" class=\"h-[300px] bg-gray-50 rounded animate-pulse\"></div>\r\n          <div v-else-if=\"!analytics.sentimentOverTime?.length\" class=\"flex flex-col items-center justify-center h-64 p-6 text-center\">\r\n            <div class=\"w-16 h-16 bg-pink-50 rounded-full flex items-center justify-center mb-6\">\r\n              <HeartPulse class=\"w-8 h-8 text-pink-400\" />\r\n            </div>\r\n\r\n            <!-- Text Content -->\r\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">\r\n              No Sentiment History\r\n            </h3>\r\n            <p class=\"text-gray-500 text-sm mb-5 max-w-[700px]\">\r\n              Track how brand sentiment evolves over time. Watch trends and respond to customer perceptions.\r\n            </p>\r\n\r\n          </div>\r\n          <SentimentChart\r\n            v-else\r\n            :data=\"analytics.sentimentOverTime\"\r\n            :visible-sentiments=\"analytics.filters.visibleSentiments\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Keyword Analysis with Skeleton -->\r\n        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100\">\r\n                <Trophy class=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <div>\r\n                <h3 class=\"text-lg font-medium text-gray-700\">Top-Performing Keywords</h3>\r\n                <p class=\"text-base text-gray-500\">Analyze which keywords are getting the most traction and where.</p>\r\n              </div>\r\n            </div>\r\n            <div v-if=\"analytics.filters.minMentions > 0\" class=\"text-sm text-gray-600\">\r\n              Min. {{ analytics.filters.minMentions }} mentions\r\n            </div>\r\n          </div>\r\n          <div v-if=\"analytics.isLoading\" class=\"space-y-4\">\r\n            <div v-for=\"i in 5\" :key=\"i\" class=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n              <div class=\"flex items-center gap-4\">\r\n                <div class=\"h-6 bg-gray-200 rounded animate-pulse w-32\"></div>\r\n                <div class=\"h-6 bg-gray-200 rounded animate-pulse w-16\"></div>\r\n              </div>\r\n              <div class=\"h-6 bg-gray-200 rounded animate-pulse w-24\"></div>\r\n            </div>\r\n          </div>\r\n          <div v-else-if=\"!analytics.keywordAnalysis?.length\" class=\"flex flex-col items-center justify-center h-64 p-6 text-center\">\r\n            <div class=\"w-16 h-16 bg-purple-50 rounded-full flex items-center justify-center mb-6\">\r\n              <Trophy class=\"w-8 h-8 text-purple-400\" />\r\n            </div>\r\n\r\n            <!-- Text Content -->\r\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">\r\n              No Top Keywords Yet\r\n            </h3>\r\n            <p class=\"text-gray-500 text-sm mb-5 max-w-[700px]\">\r\n              Discover which keywords drive engagement. Track performance metrics and optimize brand monitoring.\r\n            </p>\r\n\r\n          </div>\r\n          <KeywordAnalysis v-else :data=\"analytics.keywordAnalysis\" />\r\n        </div>\r\n\r\n        <!-- Platform Summary with Skeleton -->\r\n        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100\">\r\n                <Layout class=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <div>\r\n                <h3 class=\"text-lg font-medium text-gray-700\">Platform Summary</h3>\r\n                <p class=\"text-base text-gray-500\">A visualization of mentions by platform.</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-sm text-gray-600\">\r\n              Sorted by {{ analytics.filters.sortBy }}\r\n            </div>\r\n          </div>\r\n          <div v-if=\"analytics.isLoading\" class=\"h-[300px] bg-gray-50 rounded animate-pulse\"></div>\r\n          <div v-else-if=\"!analytics.platformSummary?.length\" class=\"flex flex-col items-center justify-center h-64 p-6 text-center\">\r\n            <div class=\"w-16 h-16 bg-blue-50 rounded-full flex items-center justify-center mb-6\">\r\n              <Layout class=\"w-8 h-8 text-blue-400\" />\r\n            </div>\r\n\r\n            <!-- Text Content -->\r\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">\r\n              No Platform Data\r\n            </h3>\r\n            <p class=\"text-gray-500 text-sm mb-5 max-w-[700px]\">\r\n              Get insights across cannabis community platforms. Connect your first platform to track performance.\r\n            </p>\r\n\r\n          </div>\r\n          <PlatformSummary v-else :data=\"analytics.platformSummary\" />\r\n        </div>\r\n\r\n        <!-- Keyword Correlation with Skeleton -->\r\n        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100\">\r\n                <Network class=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <div>\r\n                <h3 class=\"text-lg font-medium text-gray-700\">Keyword Correlation</h3>\r\n                <p class=\"text-base text-gray-500\">Analyze how keywords correlate with sentiment.</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-sm text-gray-600\">\r\n              {{ analytics.filters.platforms.length ? analytics.filters.platforms.join(', ') : 'All Platforms' }}\r\n            </div>\r\n          </div>\r\n          <div v-if=\"analytics.isLoading\" class=\"h-[300px] bg-gray-50 rounded animate-pulse\"></div>\r\n          <div v-else-if=\"!analytics.keywordCorrelation?.length\" class=\"flex flex-col items-center justify-center h-64 p-6 text-center\">\r\n            <div class=\"w-16 h-16 bg-lime-50 rounded-full flex items-center justify-center mb-6\">\r\n              <Network class=\"w-8 h-8 text-lime-500\" />\r\n            </div>\r\n\r\n            <!-- Text Content -->\r\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">\r\n              No Correlations Found\r\n            </h3>\r\n            <p class=\"text-gray-500 text-sm mb-5 max-w-[700px]\">\r\n              Discover relationships between keywords and topics. Add keywords to reveal brand patterns.\r\n            </p>\r\n\r\n          </div>\r\n          <KeywordCorrelation v-else :data=\"analytics.keywordCorrelation\" />\r\n        </div>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Filter Panel -->\r\n    <FilterPanel />\r\n  </div>\r\n</template>\r\n"],"names":["props","__props","chartOption","computed","params","html","param","color","sentiment","_a","item","value","_b","_c","_d","searchQuery","ref","analytics","useAnalyticsStore","filteredData","chartData","data","i","calculatePercentage","total","COLORS","totalMentions","sum","platform","percentage","index","emit","__emit","dateRange","isOpen","formatDateForInput","date","parseDateFromInput","setPresetRange","days","end","start","updateDateRange","handleStartDateChange","event","input","handleEndDateChange","watch","newValue","selectedTimeFrame","timeFrameOptions","selectTimeFrame","timeFrame","option","opt","selectedPlatforms","platforms","togglePlatform","updateSelection","selectAll","p","clearSelection","displayText","visibility","toggleSentiment","type","activeFilterCount","count","sentiments","defaultStart","defaultEnd","updateFilters","key","handleMinMentionsChange","target","handleSortByChange","auth","useAuthStore","onMounted","statCards","stats","MessageCircle","TrendingUp","TrendingDown","Minus"],"mappings":"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"}