{"version":3,"file":"Billing-Bc-_h2KD.js","sources":["../../src/components/BTCPayModal.vue","../../src/components/SubscriptionHeader.vue","../../src/views/dashboard/Billing.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { XCircle, ArrowUpCircle } from 'lucide-vue-next'\r\n\r\ninterface BTCPayMessage {\r\n  status: 'new' | 'paid' | 'confirmed' | 'complete' | 'expired' | 'invalid'\r\n}\r\n\r\nconst props = defineProps<{\r\n  invoiceUrl: string\r\n  planType: string\r\n  amount: string\r\n  show: boolean\r\n  loading?: boolean\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close'): void\r\n}>()\r\n\r\nconst error = ref<string | null>(null)\r\nconst isCompleted = ref(false)\r\n\r\nconst handleIframeMessage = (event: MessageEvent) => {\r\n  if (event.origin !== 'https://btcpay978166.lndyn.com') return\r\n  \r\n  const data = event.data as BTCPayMessage\r\n  console.log('BTCPay message received:', data)\r\n  \r\n  if (data.status === 'complete' || data.status === 'confirmed') {\r\n    console.log('Payment completed!')\r\n    isCompleted.value = true\r\n    setTimeout(() => {\r\n      window.location.reload()\r\n    }, 1000)\r\n  } else if (data.status === 'expired') {\r\n    error.value = 'Payment time expired. Please try again.'\r\n    emit('close')\r\n  } else if (data.status === 'invalid') {\r\n    error.value = 'Payment invalid. Please try again.'\r\n    emit('close')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  window.addEventListener('message', handleIframeMessage)\r\n})\r\n\r\nonUnmounted(() => {\r\n  window.removeEventListener('message', handleIframeMessage)\r\n})\r\n\r\nconst handleClose = () => {\r\n  emit('close')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"fixed inset-0 z-[100]\">\r\n    <div class=\"fixed inset-0 bg-gray-900/80 backdrop-blur-sm\"></div>\r\n\r\n    <div class=\"fixed inset-0 overflow-hidden\">\r\n      <div class=\"flex min-h-full items-center justify-center p-6\">\r\n        <div class=\"relative w-full max-w-[600px] bg-white flex flex-col h-[800px] max-h-[90vh] overflow-hidden rounded-[20px] shadow-[0_20px_25px_-5px_rgba(0,0,0,0.1),0_10px_10px_-5px_rgba(0,0,0,0.04)] ring-1 ring-gray-200/50\">\r\n          <div class=\"relative border-b border-gray-200 bg-white px-8 py-5 rounded-t-[20px]\">\r\n            <div class=\"flex justify-between\">\r\n              <div class=\"flex gap-3\">\r\n                <ArrowUpCircle class=\"h-10 w-10 text-green-600 bg-green-50 rounded-lg p-2 flex-shrink-0\" />\r\n                <div>\r\n                  <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                    Upgrade to {{ planType }} Plan\r\n                  </h3>\r\n                  <p class=\"mt-1 text-sm font-medium text-gray-500\">\r\n                    Complete your payment of ${{ amount }} to upgrade your plan\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                class=\"rounded-lg p-1.5 text-gray-400 hover:text-gray-500 hover:bg-gray-100 transition-colors\"\r\n                @click=\"handleClose\"\r\n              >\r\n                <XCircle class=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"error\" class=\"px-8 py-4 bg-yellow-50/80 border-y border-yellow-100\">\r\n            <p class=\"text-sm font-medium text-yellow-800\">{{ error }}</p>\r\n          </div>\r\n          <div class=\"relative flex-1 overflow-hidden bg-white\">\r\n            <template v-if=\"props.loading\">\r\n              <div class=\"flex items-center justify-center min-h-[600px]\">\r\n                <div class=\"relative w-32 h-32\">\r\n                  <!-- Outer spinning ring -->\r\n                  <div class=\"absolute inset-0 rounded-full border-[10px] border-t-green-400 border-r-green-500 border-b-green-600 border-l-green-300 animate-[spin_1s_linear_infinite]\"></div>\r\n                  <!-- Inner gradient circle -->\r\n                  <div class=\"absolute inset-6 rounded-full bg-gradient-to-br from-green-300 via-green-500 to-green-600 animate-pulse\"></div>\r\n                  <!-- Loading text -->\r\n                  <div class=\"absolute -bottom-10 left-1/2 -translate-x-1/2 whitespace-nowrap text-base font-medium text-gray-600\">\r\n                    Creating Invoice...\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <iframe\r\n                :src=\"props.invoiceUrl\"\r\n                class=\"absolute inset-0 w-full h-full border-0\"\r\n                allow=\"payment\"\r\n                frameborder=\"0\"\r\n              ></iframe>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { computed } from 'vue'\r\n\r\n// 2. Component imports\r\nimport { Calendar, BarChart3, CreditCard, Bitcoin } from 'lucide-vue-next'\r\nimport { Card } from '@/components/ui/card'\r\n\r\n// 3. Type definitions\r\ninterface SubscriptionData {\r\n  status: 'active' | 'inactive'\r\n  currentPlan: string\r\n  renewalDate: string\r\n  billingCycle: 'monthly' | 'annually'\r\n  lastPayment?: {\r\n    amount: number\r\n    date: string\r\n  } | null\r\n  usage: {\r\n    keywords: number\r\n    keywordsLimit: number\r\n  }\r\n}\r\n\r\ninterface PlanDetails {\r\n  name: string\r\n  price: {\r\n    monthly: string\r\n    annually: string\r\n  }\r\n  features: {\r\n    keywordsLimit: number\r\n    scanInterval: string\r\n    platforms: string\r\n  }\r\n}\r\n\r\n// 4. Props and emits\r\nconst props = defineProps<{\r\n  billingCycle: 'monthly' | 'annually'\r\n  selectedPlan: PlanDetails | null\r\n  subscriptionData?: SubscriptionData\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:billingCycle', value: 'monthly' | 'annually'): void\r\n}>()\r\n\r\n// 5. State management\r\nconst currentSubscription = computed(() => props.subscriptionData || {\r\n  status: 'inactive',\r\n  currentPlan: props.selectedPlan?.name || 'No Plan',\r\n  renewalDate: '',\r\n  billingCycle: props.billingCycle,\r\n  lastPayment: null,\r\n  usage: { keywords: 0, keywordsLimit: props.selectedPlan?.features.keywordsLimit || 0 }\r\n})\r\n\r\nconst isActive = computed(() => currentSubscription.value.status === 'active')\r\n\r\nconst planPrices = {\r\n  starter: {\r\n    monthly: '10.00',\r\n    annually: '10.00'\r\n  },\r\n  essential: {\r\n    monthly: '499.00',\r\n    annually: '399.00'\r\n  },\r\n  advanced: {\r\n    monthly: '999.00',\r\n    annually: '799.00'\r\n  }\r\n}\r\n\r\nconst currentPlanInfo = computed(() => {\r\n  const currentPlan = currentSubscription.value.currentPlan.toLowerCase() as keyof typeof planPrices\r\n  return {\r\n    name: currentSubscription.value.currentPlan,\r\n    price: currentPlan in planPrices ? planPrices[currentPlan][props.billingCycle] : '0.00',\r\n    keywordsUsed: currentSubscription.value.usage.keywords,\r\n    keywordsLimit: currentSubscription.value.usage.keywordsLimit,\r\n    usagePercentage: currentSubscription.value.usage.keywordsLimit > 0\r\n      ? (currentSubscription.value.usage.keywords / currentSubscription.value.usage.keywordsLimit) * 100\r\n      : 0\r\n  }\r\n})\r\n\r\n// Calculate days until next payment\r\nconst nextPaymentDate = computed(() => {\r\n  if (!currentSubscription.value.renewalDate) return null\r\n  return new Date(currentSubscription.value.renewalDate)\r\n})\r\n\r\nconst daysUntilPayment = computed(() => {\r\n  if (!nextPaymentDate.value) return null\r\n  const today = new Date()\r\n  const diffTime = nextPaymentDate.value.getTime() - today.getTime()\r\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24))\r\n})\r\n\r\n// 6. Methods\r\nconst toggleBillingCycle = () => {\r\n  emit('update:billingCycle', props.billingCycle === 'monthly' ? 'annually' : 'monthly')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"w-full space-y-6\">\r\n    <!-- Top Section with Plan Selection Header -->\r\n    <div class=\"bg-gray-50/80 rounded-lg p-6 shadow-sm border border-gray-100\">\r\n      <div class=\"flex justify-between items-center\">\r\n        <div class=\"flex items-center space-x-4\">\r\n          <div class=\"p-2 bg-blue-100/50 rounded-lg\">\r\n            <CreditCard class=\"w-6 h-6 text-blue-600\" />\r\n          </div>\r\n          <div>\r\n            <h1 class=\"text-xl font-semibold text-gray-800\">Choose Your Plan</h1>\r\n            <p class=\"text-sm text-gray-500\">Choose from our plans below to get started with VueLeaf.</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"flex items-center bg-gray-200/50 rounded-full p-1\">\r\n          <button \r\n            :class=\"[\r\n              'px-4 py-2 rounded-full text-sm font-medium transition-all',\r\n              props.billingCycle === 'monthly' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'\r\n            ]\"\r\n            @click=\"toggleBillingCycle\"\r\n          >\r\n            Monthly\r\n          </button>\r\n          <button \r\n            :class=\"[\r\n              'px-4 py-2 rounded-full text-sm font-medium transition-all',\r\n              props.billingCycle === 'annually' ? 'bg-white shadow-sm text-gray-800' : 'text-gray-600'\r\n            ]\"\r\n            @click=\"toggleBillingCycle\"\r\n          >\r\n            Annually\r\n            <span class=\"ml-1 px-1.5 py-0.5 bg-green-100 text-green-600 text-xs font-medium rounded-full\">-20%</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Info Status Row -->\r\n      <div class=\"mt-6 flex divide-x divide-gray-200\">\r\n        <!-- Current Plan Status -->\r\n        <div class=\"flex-1 px-4 first:pl-0 last:pr-0\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <h2 class=\"text-sm font-medium text-gray-600\">Current Plan</h2>\r\n            <div class=\"p-1 bg-slate-100 rounded\">\r\n              <BarChart3 class=\"w-4 h-4 text-slate-600\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"space-y-3\">\r\n            <div class=\"flex justify-between items-baseline\">\r\n              <div class=\"flex items-center gap-2\">\r\n                <div class=\"text-lg font-medium text-gray-800\">{{ currentPlanInfo.name }}</div>\r\n                <span \r\n                  :class=\"[\r\n                    'px-2 py-1 text-xs rounded',\r\n                    isActive ? 'bg-green-100/60 text-green-600' : 'bg-gray-100/60 text-gray-600'\r\n                  ]\"\r\n                >\r\n                  {{ isActive ? 'Active' : 'Inactive' }}\r\n                </span>\r\n              </div>\r\n              <div class=\"flex items-center gap-1.5 text-sm text-gray-500\">\r\n                <span class=\"w-1.5 h-1.5 rounded-full\" :class=\"isActive ? 'bg-green-400' : 'bg-gray-400'\"></span>\r\n                {{ isActive ? 'All systems online' : 'Inactive' }}\r\n              </div>\r\n            </div>\r\n            <div class=\"relative w-full h-2 bg-slate-200 rounded-full overflow-hidden\">\r\n              <div \r\n                class=\"absolute top-0 left-0 h-full bg-slate-400 rounded-full transition-all duration-500 ease-out\"\r\n                :style=\"{ width: isActive ? '100%' : '0%' }\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Next Payment Status -->\r\n        <div class=\"flex-1 px-4 first:pl-0 last:pr-0\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <h2 class=\"text-sm font-medium text-gray-600\">Next Payment</h2>\r\n            <div class=\"p-1 bg-slate-100 rounded\">\r\n              <Calendar class=\"w-4 h-4 text-slate-600\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"space-y-3\">\r\n            <div class=\"flex justify-between items-baseline\">\r\n              <div class=\"text-lg font-medium text-gray-800\">${{ currentPlanInfo.price }}</div>\r\n              <div class=\"text-sm text-gray-500\" v-if=\"nextPaymentDate\">\r\n                due {{ nextPaymentDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) }}\r\n                <template v-if=\"daysUntilPayment\"> • {{ daysUntilPayment }} days</template>\r\n              </div>\r\n            </div>\r\n            <div class=\"relative w-full h-2 bg-slate-200 rounded-full overflow-hidden\">\r\n              <div \r\n                class=\"absolute top-0 left-0 h-full bg-slate-400 rounded-full transition-all duration-500 ease-out\"\r\n                :style=\"{ width: `${isActive ? (daysUntilPayment ? (30 - daysUntilPayment) / 30 * 100 : 0) : 0}%` }\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Keywords Status -->\r\n        <div class=\"flex-1 px-4 first:pl-0 last:pr-0\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <h2 class=\"text-sm font-medium text-gray-600\">Keywords Used</h2>\r\n            <div class=\"p-1 bg-slate-100 rounded\">\r\n              <BarChart3 class=\"w-4 h-4 text-slate-600\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"space-y-3\">\r\n            <div class=\"flex justify-between items-baseline\">\r\n              <div class=\"text-lg font-medium text-gray-800\">\r\n                {{ currentPlanInfo.keywordsUsed }} \r\n                <span class=\"text-gray-400 text-sm font-normal\">/ {{ currentPlanInfo.keywordsLimit }}</span>\r\n              </div>\r\n              <div class=\"text-sm text-gray-500\">\r\n                {{ currentPlanInfo.keywordsLimit - currentPlanInfo.keywordsUsed }} remaining\r\n              </div>\r\n            </div>\r\n            <div class=\"relative w-full h-2 bg-slate-200 rounded-full overflow-hidden\">\r\n              <div \r\n                class=\"absolute top-0 left-0 h-full bg-slate-400 rounded-full transition-all duration-500 ease-out\"\r\n                :style=\"{ width: `${currentPlanInfo.usagePercentage}%` }\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Payment History Section -->\r\n    <div v-if=\"currentSubscription.lastPayment\" class=\"bg-gray-50/80 rounded-lg p-6 shadow-sm border border-gray-100\">\r\n      <div class=\"flex items-center justify-between mb-4\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <div class=\"w-8 h-8 rounded-lg flex items-center justify-center\" style=\"background-color: #F7931A\">\r\n            <Bitcoin class=\"w-5 h-5 text-white\" />\r\n          </div>\r\n          <h2 class=\"text-lg font-medium text-gray-800\">Payment History</h2>\r\n        </div>\r\n        <span class=\"text-sm text-gray-500\">Last 30 days</span>\r\n      </div>\r\n      \r\n      <div class=\"border-t border-gray-200/50 pt-4\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <div class=\"space-y-1\">\r\n            <div class=\"font-medium text-gray-800\">{{ currentPlanInfo.name }} Plan ({{ currentSubscription.billingCycle }})</div>\r\n            <div class=\"text-sm text-gray-500 flex items-center space-x-2\">\r\n              <span>{{ new Date(currentSubscription.lastPayment.date).toLocaleString() }}</span>\r\n              <span>•</span>\r\n              <div class=\"flex items-center space-x-1\">\r\n                <div class=\"w-4 h-4 rounded-full flex items-center justify-center\" style=\"background-color: #F7931A\">\r\n                  <Bitcoin class=\"w-2.5 h-2.5 text-white\" />\r\n                </div>\r\n                <span>Bitcoin</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex items-center space-x-3\">\r\n            <span class=\"font-medium\">${{ currentSubscription.lastPayment.amount.toFixed(2) }}</span>\r\n            <span class=\"px-2 py-1 bg-green-100/60 text-green-600 text-sm rounded\">Paid</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>","<script setup lang=\"ts\">\r\n// 1. Vue imports\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\n\r\n// 2. Component imports\r\nimport axios from '@/lib/axios'\r\nimport { Check, Shield, Leaf, Zap, XCircle, Bitcoin, ChevronDown } from 'lucide-vue-next'\r\nimport BTCPayModal from '@/components/BTCPayModal.vue'\r\nimport SubscriptionHeader from '@/components/SubscriptionHeader.vue'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport { useTracking } from '@/views/dashboard/tracking/composables/useTracking'\r\n\r\nimport advancedIllustration from '../../assets/images/illustrations/advanced-plan.png'\r\nimport starterIllustration from '../../assets/images/illustrations/starter-plan.png'\r\nimport essentialIllustration from '../../assets/images/illustrations/essential-plan.png'\r\n\r\n// Type definitions for subscription data\r\ntype SubscriptionStatus = 'active' | 'inactive'\r\ninterface SubscriptionData {\r\n  status: SubscriptionStatus\r\n  currentPlan: string\r\n  renewalDate: string\r\n  billingCycle: 'monthly' | 'annually'\r\n  lastPayment?: {\r\n    amount: number\r\n    date: string\r\n  } | null\r\n  usage: {\r\n    keywords: number\r\n    keywordsLimit: number\r\n  }\r\n}\r\n\r\nconst authStore = useAuthStore()\r\nconst trackingStore = useTracking()\r\n\r\n// Fetch latest user data on mount\r\nonMounted(() => {\r\n  authStore.fetchProfile()\r\n  fetchInvoices()\r\n})\r\n\r\n// Computed subscription data\r\nconst subscriptionData = computed((): SubscriptionData => ({\r\n  status: authStore.hasPaid ? 'active' : 'inactive',\r\n  currentPlan: authStore.tier,\r\n  renewalDate: authStore.renewalDate,\r\n  billingCycle: billingCycle.value,\r\n  lastPayment: null,\r\n  usage: {\r\n    keywords: trackingStore.activeKeywords,\r\n    keywordsLimit: selectedPlan.value?.features?.keywordsLimit || 0\r\n  }\r\n}))\r\n\r\n// 3. Type definitions\r\ninterface InvoiceData {\r\n  invoiceUrl: string\r\n}\r\n\r\ninterface ErrorData {\r\n  error: string\r\n  details?: string\r\n}\r\n\r\ninterface BTCPayMessage {\r\n  status: 'new' | 'paid' | 'confirmed' | 'complete' | 'expired' | 'invalid'\r\n}\r\n\r\ninterface BTCPayOptions {\r\n  mode?: 'fixed'\r\n  defaultPaymentMethod?: string\r\n  defaultLanguage?: string\r\n  container?: HTMLElement | string\r\n}\r\n\r\ninterface BTCPay {\r\n  showInvoice: (invoiceId: string, options?: BTCPayOptions) => void\r\n  hideFrame: () => void\r\n  setApiUrlPrefix: (url: string) => void\r\n  onModalWillEnter: (callback: () => void) => void\r\n  onModalWillLeave: (callback: () => void) => void\r\n  onModalReceiveMessage: (callback: (data: BTCPayMessage) => void) => void\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    btcpay?: BTCPay\r\n  }\r\n}\r\n\r\ntype BillingCycle = 'monthly' | 'annually'\r\n\r\n// Invoice related types\r\ninterface Invoice {\r\n  btcpay_id: string\r\n  status: 'new' | 'paid' | 'expired' | 'invalid'\r\n  amount_usd: string\r\n  plan_type: string\r\n  billing_cycle: BillingCycle\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ninterface PlanPrices {\r\n  [key: string]: {\r\n    monthly: string\r\n    annually: string\r\n  }\r\n}\r\ninterface PlanDetails {\r\n  name: string\r\n  price: {\r\n    monthly: string\r\n    annually: string\r\n  }\r\n  features: {\r\n    keywordsLimit: number\r\n    scanInterval: string\r\n    platforms: string\r\n  }\r\n}\r\n\r\n// 4. State management\r\nconst isLoading = ref(false)\r\nconst error = ref<ErrorData | null>(null)\r\nconst invoices = ref<Invoice[]>([])\r\nconst isLoadingInvoices = ref(false)\r\nconst invoiceError = ref<string | null>(null)\r\nconst expandedFeatures = ref<Record<string, boolean>>({\r\n  starter: false,\r\n  essential: false,\r\n  advanced: false\r\n})\r\n\r\nconst toggleFeatures = (plan: string) => {\r\n  expandedFeatures.value[plan] = !expandedFeatures.value[plan]\r\n}\r\n\r\n// Fetch user's invoices\r\nasync function fetchInvoices() {\r\n  isLoadingInvoices.value = true\r\n  invoiceError.value = null\r\n  \r\n  try {\r\n    const response = await axios.get<Invoice[]>('billing/invoices/')\r\n    invoices.value = response.data\r\n  } catch (err: any) {\r\n    console.error('Failed to fetch invoices:', err)\r\n    invoiceError.value = err?.response?.data?.error || 'Failed to load invoice history'\r\n  } finally {\r\n    isLoadingInvoices.value = false\r\n  }\r\n}\r\nconst showModal = ref(false)\r\nconst btcpayReady = ref(false)\r\nconst billingCycle = ref<BillingCycle>('monthly')\r\nconst selectedPlan = ref<PlanDetails | null>(null)\r\nconst currentInvoice = ref<{\r\n  url: string\r\n  planType: string\r\n  amount: string\r\n} | null>(null)\r\n\r\n// Plan prices\r\nconst planPrices: PlanPrices = {\r\n  starter: {\r\n    monthly: '10.00',\r\n    annually: '10.00'\r\n  },\r\n  essential: {\r\n    monthly: '499.00',\r\n    annually: '399.00'\r\n  },\r\n  advanced: {\r\n    monthly: '999.00',\r\n    annually: '799.00'\r\n  }\r\n}\r\n\r\n// Convert plan prices to PlanDetails format\r\nconst plansData = computed<Record<string, PlanDetails>>(() => ({\r\n  starter: {\r\n    name: 'Starter',\r\n    price: planPrices.starter,\r\n    features: {\r\n      keywordsLimit: 5,\r\n      scanInterval: '24 hours',\r\n      platforms: '5 major cannabis platforms'\r\n    }\r\n  },\r\n  essential: {\r\n    name: 'Essential',\r\n    price: planPrices.essential,\r\n    features: {\r\n      keywordsLimit: 10,\r\n      scanInterval: '12 hours',\r\n      platforms: 'top 10 cannabis platforms'\r\n    }\r\n  },\r\n  advanced: {\r\n    name: 'Advanced',\r\n    price: planPrices.advanced,\r\n    features: {\r\n      keywordsLimit: 25,\r\n      scanInterval: '6 hours',\r\n      platforms: 'all cannabis platforms'\r\n    }\r\n  }\r\n}))\r\n\r\nconst handleModalClose = () => {\r\n  showModal.value = false\r\n  currentInvoice.value = null\r\n}\r\n\r\n// BTCPay script loading\r\nfunction loadBTCPayScript(): Promise<void> {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement('script')\r\n    script.src = 'https://btcpay978166.lndyn.com/modal/btcpay.js'\r\n    script.async = true\r\n    \r\n    // Get nonce from existing script\r\n    const nonce = document.querySelector('script[nonce]')?.getAttribute('nonce')\r\n    if (nonce) {\r\n      script.setAttribute('nonce', nonce)\r\n    }\r\n\r\n    script.onload = () => {\r\n      if (!window.btcpay) {\r\n        reject(new Error('BTCPay script loaded but btcpay object not found'))\r\n        return\r\n      }\r\n      window.btcpay.setApiUrlPrefix('https://btcpay978166.lndyn.com')\r\n      btcpayReady.value = true\r\n      resolve()\r\n    }\r\n\r\n    script.onerror = () => {\r\n      reject(new Error('Failed to load BTCPay script'))\r\n    }\r\n\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\n// Load BTCPay on mount\r\nonMounted(async () => {\r\n  try {\r\n    await loadBTCPayScript()\r\n  } catch (err) {\r\n    console.error('BTCPay initialization error:', err)\r\n    error.value = {\r\n      error: 'Failed to initialize payment system. Please refresh and try again.'\r\n    }\r\n  }\r\n})\r\n\r\n// Cleanup on unmount\r\nonUnmounted(() => {\r\n  const script = document.querySelector('script[src*=\"btcpay.js\"]')\r\n  if (script) {\r\n    script.remove()\r\n  }\r\n})\r\n\r\n// 5. Methods\r\nasync function handleUpgrade(planType: string, billingCycle: 'monthly' | 'annually' = 'annually') {\r\n  error.value = null\r\n\r\n  // Check BTCPay readiness first\r\n  if (!btcpayReady.value) {\r\n    error.value = {\r\n      error: 'Payment system not ready. Please refresh and try again.'\r\n    }\r\n    return\r\n  }\r\n\r\n  // Set selected plan\r\n  selectedPlan.value = plansData.value[planType as keyof typeof plansData.value]\r\n\r\n  // Show modal immediately with loading state\r\n  currentInvoice.value = {\r\n    url: '',\r\n    planType: planType,\r\n    amount: planPrices[planType][billingCycle]\r\n  }\r\n  showModal.value = true\r\n  isLoading.value = true\r\n\r\n  try {\r\n    const response = await axios.post<InvoiceData>('billing/create-invoice/', {\r\n      plan_type: planType,\r\n      billing_cycle: billingCycle\r\n    })\r\n    \r\n    if (!response.data.invoiceUrl) {\r\n      console.error('No invoice URL in response')\r\n      error.value = {\r\n        error: 'Invalid invoice response. Please try again.'\r\n      }\r\n      return\r\n    }\r\n\r\n    // Update invoice URL after successful API call\r\n    currentInvoice.value = {\r\n      url: response.data.invoiceUrl,\r\n      planType: planType,\r\n      amount: planPrices[planType][billingCycle]\r\n    }\r\n  } catch (err: any) {\r\n    const errorData = err?.response?.data\r\n    if (errorData?.error) {\r\n      error.value = {\r\n        error: errorData.error,\r\n        details: errorData.details\r\n      }\r\n    } else {\r\n      error.value = {\r\n        error: 'Failed to create invoice. Please try again.'\r\n      }\r\n    }\r\n    console.error('Billing error:', err)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex-1 p-6\">\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <!-- Subscription Header -->\r\n      <SubscriptionHeader\r\n        v-model:billingCycle=\"billingCycle\"\r\n        :selected-plan=\"selectedPlan\"\r\n        :subscription-data=\"subscriptionData\"\r\n        class=\"mb-8\"\r\n      />\r\n\r\n    <!-- Payment History Section -->\r\n    <div class=\"bg-gray-50/80 rounded-lg p-6 shadow-sm border border-gray-100 mb-8\">\r\n      <div class=\"flex items-center justify-between mb-4\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <div class=\"w-8 h-8 rounded-lg flex items-center justify-center\" style=\"background-color: #F7931A\">\r\n            <Bitcoin class=\"w-5 h-5 text-white\" />\r\n          </div>\r\n          <h2 class=\"text-lg font-medium text-gray-800\">Payment History</h2>\r\n        </div>\r\n        <span class=\"text-sm text-gray-500\">Last 30 days</span>\r\n      </div>\r\n\r\n      <div class=\"border-t border-gray-200/50 pt-4\">\r\n        <!-- Loading State -->\r\n        <div v-if=\"isLoadingInvoices\" class=\"flex items-center justify-center py-12\">\r\n          <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\r\n          <p class=\"ml-3 text-sm text-gray-600\">Loading payment history...</p>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div v-else-if=\"invoiceError\" class=\"text-center py-12\">\r\n          <div class=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-red-100\">\r\n            <XCircle class=\"h-6 w-6 text-red-600\" />\r\n          </div>\r\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">Failed to load payment history</h3>\r\n          <p class=\"mt-1 text-sm text-gray-500\">{{ invoiceError }}</p>\r\n        </div>\r\n\r\n        <!-- Invoice List -->\r\n        <div v-else-if=\"invoices.length\" class=\"divide-y divide-gray-200/50\">\r\n          <div\r\n            v-for=\"invoice in invoices\"\r\n            :key=\"invoice.btcpay_id\"\r\n            class=\"border-t border-gray-200/50 pt-4 first:border-t-0 first:pt-0\"\r\n          >\r\n            <div class=\"flex items-center justify-between\">\r\n              <div class=\"space-y-1\">\r\n                <div class=\"font-medium text-gray-800\">\r\n                  {{ invoice.plan_type.charAt(0).toUpperCase() + invoice.plan_type.slice(1) }} Plan\r\n                  ({{ invoice.billing_cycle }})\r\n                </div>\r\n                <div class=\"text-sm text-gray-500 flex items-center space-x-2\">\r\n                  <span>{{ new Date(invoice.created_at).toLocaleString() }}</span>\r\n                  <span>•</span>\r\n                  <div class=\"flex items-center space-x-1\">\r\n                    <div class=\"w-4 h-4 rounded-full flex items-center justify-center\" style=\"background-color: #F7931A\">\r\n                      <Bitcoin class=\"w-2.5 h-2.5 text-white\" />\r\n                    </div>\r\n                    <span>Bitcoin</span>\r\n                  </div>\r\n                  <span>•</span>\r\n                  <span>ID: {{ invoice.btcpay_id }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex items-center space-x-3\">\r\n                <span class=\"font-medium\">${{ invoice.amount_usd }}</span>\r\n                <span\r\n                  class=\"px-2 py-1 text-sm rounded\"\r\n                  :class=\"invoice.status === 'paid' || invoice.status === 'new'\r\n                    ? 'bg-green-100/60 text-green-600'\r\n                    : 'bg-red-100/60 text-red-600'\"\r\n                >\r\n                  {{ invoice.status.charAt(0).toUpperCase() + invoice.status.slice(1) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Empty State -->\r\n        <div v-else class=\"text-center py-12\">\r\n          <Bitcoin class=\"mx-auto h-12 w-12 text-gray-400\" />\r\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No payment history</h3>\r\n          <p class=\"mt-1 text-sm text-gray-500\">\r\n            Your payment history will appear here after your first transaction.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div v-if=\"error\" class=\"mb-8 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n      <div class=\"flex items-start\">\r\n        <div class=\"flex-shrink-0\">\r\n          <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n          </svg>\r\n        </div>\r\n        <div class=\"ml-3\">\r\n          <h3 class=\"text-sm font-medium text-yellow-800\">\r\n            Payment System Notice\r\n          </h3>\r\n          <div class=\"mt-2 text-sm text-yellow-700\">\r\n            <p>{{ error.error }}</p>\r\n            <p v-if=\"error.details\" class=\"mt-2 text-xs font-mono bg-yellow-100 p-2 rounded\">\r\n              {{ error.details }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Plans Grid -->\r\n    <div class=\"grid md:grid-cols-3 gap-8\">\r\n      <!-- Starter Plan -->\r\n      <div\r\n        class=\"flex flex-col rounded-lg border transition-all duration-300 overflow-hidden hover:shadow-lg hover:scale-102 bg-blue-50\"\r\n      >\r\n        <div class=\"bg-blue-100 p-4\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <div class=\"flex items-center space-x-3\">\r\n              <Shield class=\"h-10 w-10 text-blue-600\" />\r\n              <div>\r\n                <h3 class=\"text-xl font-bold text-gray-800\">Starter</h3>\r\n                <p class=\"text-sm text-gray-600\">For brands just getting started</p>\r\n              </div>\r\n            </div>\r\n            <span class=\"px-3 py-1 rounded-full text-sm font-semibold bg-blue-200 text-blue-800\">\r\n              Launch\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex-grow p-4\">\r\n          <div class=\"text-center mb-6\">\r\n            <div class=\"text-4xl font-bold mb-4 text-gray-900\">\r\n              ${{ billingCycle === 'annually' ? '199' : '249' }}\r\n              <span class=\"text-base font-normal text-gray-600\">/month</span>\r\n            </div>\r\n            <div v-if=\"billingCycle === 'annually'\" class=\"text-xs text-gray-500 -mt-1\">\r\n              (billed annually)\r\n            </div>\r\n            <div class=\"mb-2\"></div>\r\n            <template v-if=\"billingCycle === 'annually'\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                <span class=\"line-through\">${{ planPrices.starter.monthly }}/month</span> when paying monthly\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <div class=\"text-sm text-gray-500\">\r\n                ${{ planPrices.starter.annually }}/month when billed annually\r\n              </div>\r\n            </template>\r\n            <div class=\"text-base font-bold text-green-600 mt-1\">\r\n              {{ billingCycle === 'annually'\r\n                ? 'Save $600/year'\r\n                : 'Switch to annual billing to save $600'\r\n              }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-6 px-2\">\r\n            <div class=\"text-center mb-4\">\r\n              <button\r\n                @click=\"toggleFeatures('starter')\"\r\n                class=\"text-sm text-blue-600 hover:text-blue-700 focus:outline-none inline-flex items-center space-x-1\"\r\n              >\r\n                <span>{{ expandedFeatures.starter ? 'Show Less' : 'Show All Features' }}</span>\r\n                <ChevronDown\r\n                  class=\"h-4 w-4 transition-transform duration-200\"\r\n                  :class=\"{ 'transform rotate-180': expandedFeatures.starter }\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <ul\r\n              class=\"space-y-4 text-base overflow-hidden transition-all duration-300\"\r\n              :style=\"{ maxHeight: expandedFeatures.starter ? '1000px' : '140px' }\"\r\n            >\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700 font-semibold\">Review scanning every 24 hours</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700\">Track up to 5 keywords</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700\">Monitor 5 major cannabis platforms</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700\">Email alerts for reviews</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700\">Basic analytics</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-blue-500\" />\r\n                <span class=\"text-gray-700\">Standard email support</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"px-6\">\r\n            <img\r\n              :src=\"starterIllustration\"\r\n              alt=\"Starter plan features illustration\"\r\n              class=\"max-w-[250px] h-auto mx-auto block opacity-60\"\r\n              :class=\"{\r\n                '[filter:hue-rotate(90deg)_saturate(200%)_brightness(1.3)]': true\r\n              }\"\r\n            />\r\n          </div>\r\n          <div class=\"px-6 py-3\">\r\n            <button\r\n              @click=\"handleUpgrade('starter', billingCycle)\"\r\n              :disabled=\"isLoading\"\r\n              class=\"block w-full py-3 text-center rounded-lg text-lg font-semibold transition-colors bg-blue-600 hover:bg-blue-700 text-white\"\r\n            >\r\n              <span v-if=\"isLoading\">Processing...</span>\r\n              <span v-else>Get Started</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Essential Plan -->\r\n      <div\r\n        class=\"flex flex-col rounded-lg border border-yellow-300 border-2 shadow-lg bg-yellow-50 transition-all duration-300 overflow-hidden hover:shadow-lg hover:scale-102\"\r\n      >\r\n        <div class=\"bg-yellow-100 p-4\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <div class=\"flex items-center space-x-3\">\r\n              <Leaf class=\"h-10 w-10 text-yellow-600\" />\r\n              <div>\r\n                <h3 class=\"text-xl font-bold text-gray-800\">Essential</h3>\r\n                <p class=\"text-sm text-gray-600\">For those ready to grow</p>\r\n              </div>\r\n            </div>\r\n            <span class=\"px-3 py-1 rounded-full text-sm font-semibold bg-yellow-400 text-yellow-800\">\r\n              Growth\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"flex-grow p-4\">\r\n          <div class=\"text-center mb-6\">\r\n            <div class=\"text-3xl font-bold mb-4 text-gray-900\">\r\n              ${{ billingCycle === 'annually' ? '399' : '499' }}\r\n              <span class=\"text-base font-normal text-gray-600\">/month</span>\r\n            </div>\r\n            <div v-if=\"billingCycle === 'annually'\" class=\"text-xs text-gray-500 -mt-1\">\r\n              (billed annually)\r\n            </div>\r\n            <template v-if=\"billingCycle === 'annually'\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                <span class=\"line-through\">${{ planPrices.essential.monthly }}/month</span> when paying monthly\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <div class=\"text-sm text-gray-500\">\r\n                ${{ planPrices.essential.annually }}/month when billed annually\r\n              </div>\r\n            </template>\r\n            <div class=\"text-base font-bold text-green-600 mt-1\">\r\n              {{ billingCycle === 'annually'\r\n                ? 'Save $1,200/year'\r\n                : 'Switch to annual billing to save $1,200'\r\n              }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-6 px-2\">\r\n            <div class=\"text-center mb-4\">\r\n              <button\r\n                @click=\"toggleFeatures('essential')\"\r\n                class=\"text-sm text-yellow-600 hover:text-yellow-700 focus:outline-none inline-flex items-center space-x-1\"\r\n              >\r\n                <span>{{ expandedFeatures.essential ? 'Show Less' : 'Show All Features' }}</span>\r\n                <ChevronDown\r\n                  class=\"h-4 w-4 transition-transform duration-200\"\r\n                  :class=\"{ 'transform rotate-180': expandedFeatures.essential }\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <ul\r\n              class=\"space-y-4 text-base overflow-hidden transition-all duration-300\"\r\n              :style=\"{ maxHeight: expandedFeatures.essential ? '1000px' : '140px' }\"\r\n            >\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700 font-semibold\">Review scanning every 12 hours</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Track up to 10 keywords</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Monitor top 10 cannabis platforms</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Email alerts for reviews</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Basic analytics with CSV export</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Automated forum posting</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-yellow-500\" />\r\n                <span class=\"text-gray-700\">Priority email support</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"px-6\">\r\n            <img\r\n              :src=\"essentialIllustration\"\r\n              alt=\"Essential plan features illustration\"\r\n              class=\"max-w-[250px] h-auto mx-auto block opacity-60\"\r\n              :class=\"{\r\n                '[filter:hue-rotate(240deg)_saturate(200%)_brightness(1.2)]': true\r\n              }\"\r\n            />\r\n          </div>\r\n          <div class=\"px-6 py-3\">\r\n            <button\r\n              @click=\"handleUpgrade('essential', billingCycle)\"\r\n              :disabled=\"isLoading\"\r\n              class=\"block w-full py-3 text-center rounded-lg text-lg font-semibold transition-colors bg-yellow-400 hover:bg-yellow-500 text-yellow-900\"\r\n            >\r\n              <span v-if=\"isLoading\">Processing...</span>\r\n              <span v-else>Upgrade Now</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Advanced Plan -->\r\n      <div\r\n        class=\"flex flex-col rounded-lg border transition-all duration-300 overflow-hidden hover:shadow-lg hover:scale-102 bg-green-50\"\r\n      >\r\n        <div class=\"bg-green-100 p-4\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <div class=\"flex items-center space-x-3\">\r\n              <Zap class=\"h-10 w-10 text-green-600\" />\r\n              <div>\r\n                <h3 class=\"text-xl font-bold text-gray-800\">Advanced</h3>\r\n                <p class=\"text-sm text-gray-600\">For established market leaders</p>\r\n              </div>\r\n            </div>\r\n            <span class=\"px-3 py-1 rounded-full text-sm font-semibold bg-green-200 text-green-800\">\r\n              Scale\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex-grow p-4\">\r\n          <div class=\"text-center mb-6\">\r\n            <div class=\"text-4xl font-bold mb-4 text-gray-900\">\r\n              ${{ billingCycle === 'annually' ? '799' : '999' }}\r\n              <span class=\"text-base font-normal text-gray-600\">/month</span>\r\n            </div>\r\n            <div v-if=\"billingCycle === 'annually'\" class=\"text-xs text-gray-500 -mt-1\">\r\n              (billed annually)\r\n            </div>\r\n            <template v-if=\"billingCycle === 'annually'\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                <span class=\"line-through\">${{ planPrices.advanced.monthly }}/month</span> when paying monthly\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <div class=\"text-sm text-gray-500\">\r\n                ${{ planPrices.advanced.annually }}/month when billed annually\r\n              </div>\r\n            </template>\r\n            <div class=\"text-base font-bold text-green-600 mt-1\">\r\n              {{ billingCycle === 'annually'\r\n                ? 'Save $2,400/year'\r\n                : 'Switch to annual billing to save $2,400'\r\n              }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-6 px-2\">\r\n            <div class=\"text-center mb-4\">\r\n              <button\r\n                @click=\"toggleFeatures('advanced')\"\r\n                class=\"text-sm text-green-600 hover:text-green-700 focus:outline-none inline-flex items-center space-x-1\"\r\n              >\r\n                <span>{{ expandedFeatures.advanced ? 'Show Less' : 'Show All Features' }}</span>\r\n                <ChevronDown\r\n                  class=\"h-4 w-4 transition-transform duration-200\"\r\n                  :class=\"{ 'transform rotate-180': expandedFeatures.advanced }\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <ul\r\n              class=\"space-y-4 text-base overflow-hidden transition-all duration-300\"\r\n              :style=\"{ maxHeight: expandedFeatures.advanced ? '1000px' : '140px' }\"\r\n            >\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700 font-semibold\">Review scanning every 6 hours</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Track up to 25 keywords</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Monitor all cannabis platforms</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Email & push alerts for reviews</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Advanced analytics with CSV/PDF exports</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">AI chat assistant</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Automated forum posting</span>\r\n              </li>\r\n              <li class=\"flex items-center\">\r\n                <Check class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" />\r\n                <span class=\"text-gray-700\">Priority live chat support</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"px-6\">\r\n            <img\r\n              :src=\"advancedIllustration\"\r\n              alt=\"Advanced plan features illustration\"\r\n              class=\"max-w-[250px] h-auto mx-auto block opacity-60\"\r\n            />\r\n          </div>\r\n          <div class=\"px-6 py-3\">\r\n            <button\r\n              @click=\"handleUpgrade('advanced', billingCycle)\"\r\n              :disabled=\"isLoading\"\r\n              class=\"block w-full py-3 text-center rounded-lg text-lg font-semibold transition-colors bg-green-600 hover:bg-green-700 text-white\"\r\n            >\r\n              <span v-if=\"isLoading\">Processing...</span>\r\n              <span v-else>Get Started</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n      <!-- BTCPay Modal -->\r\n      <BTCPayModal\r\n        v-if=\"currentInvoice && showModal\"\r\n        :show=\"true\"\r\n        :invoice-url=\"currentInvoice.url\"\r\n        :plan-type=\"currentInvoice.planType\"\r\n        :amount=\"currentInvoice.amount\"\r\n        :loading=\"isLoading\"\r\n        @close=\"handleModalClose\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>"],"names":["props","__props","emit","__emit","error","ref","isCompleted","handleIframeMessage","event","data","onMounted","onUnmounted","handleClose","currentSubscription","computed","_a","_b","isActive","planPrices","currentPlanInfo","currentPlan","nextPaymentDate","daysUntilPayment","today","diffTime","toggleBillingCycle","authStore","useAuthStore","trackingStore","useTracking","fetchInvoices","subscriptionData","billingCycle","selectedPlan","isLoading","invoices","isLoadingInvoices","invoiceError","expandedFeatures","toggleFeatures","plan","response","axios","err","showModal","btcpayReady","currentInvoice","plansData","handleModalClose","loadBTCPayScript","resolve","reject","script","nonce","handleUpgrade","planType","errorData"],"mappings":"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"}