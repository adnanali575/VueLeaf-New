{"version":3,"file":"useTracking-CLC7PZtt.js","sources":["../../src/views/dashboard/tracking/composables/useTracking.ts"],"sourcesContent":["import { ref, computed } from 'vue'\r\nimport { defineStore } from 'pinia'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport axios from '@/lib/axios'\r\n\r\ninterface Keyword {\r\n  id: number\r\n  term: string\r\n  source: string\r\n  status: 'active' | 'paused'\r\n  mentions: number\r\n  trend: 'up' | 'down' | 'stable'\r\n}\r\n\r\ninterface KeywordResponse {\r\n  id: number\r\n  term: string\r\n  source: string\r\n  is_active: boolean\r\n  mentions: number\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ninterface State {\r\n  keywords: Keyword[]\r\n  selectedSites: string[]\r\n  editingId: number | null\r\n  newKeyword: string\r\n  filterValue: 'all' | 'active' | 'paused'\r\n  isLoading: boolean\r\n  currentPage: number\r\n  itemsPerPage: number\r\n  totalMentions: number\r\n}\r\n\r\nexport const useTracking = defineStore('tracking', {\r\n  state: (): State => ({\r\n    keywords: [],\r\n    selectedSites: [],\r\n    editingId: null,\r\n    newKeyword: '',\r\n    filterValue: 'all',\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    itemsPerPage: 10,\r\n    totalMentions: 0\r\n  }),\r\n\r\n  getters: {\r\n    totalKeywords: (state): number => state.keywords.length,\r\n    activeKeywords: (state): number => state.keywords.filter(k => k.status === 'active').length,\r\n    keywordLimit(): number {\r\n      const authStore = useAuthStore()\r\n      return authStore.getTierLimits().keywords\r\n    },\r\n    filteredKeywords: (state): Keyword[] => {\r\n      if (state.filterValue === 'all') return state.keywords\r\n      return state.keywords.filter(k => k.status === state.filterValue)\r\n    },\r\n    totalPages: (state): number => Math.ceil(state.keywords.length / state.itemsPerPage),\r\n    paginatedKeywords: (state): Keyword[] => {\r\n      // Sort by ID in descending order to show newest first\r\n      const sortedKeywords = [...state.keywords].sort((a, b) => b.id - a.id)\r\n      const start = (state.currentPage - 1) * state.itemsPerPage\r\n      const end = start + state.itemsPerPage\r\n      return sortedKeywords.slice(start, end)\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    async fetchKeywords() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get<KeywordResponse[]>('/keywords/')\r\n        this.keywords = response.data.map((k: KeywordResponse) => ({\r\n          id: k.id,\r\n          term: k.term,\r\n          source: k.source,\r\n          status: k.is_active ? 'active' : 'paused',\r\n          mentions: k.mentions,\r\n          trend: 'stable',\r\n          created_at: k.created_at\r\n        }))\r\n        // Calculate total mentions from keywords\r\n        this.totalMentions = this.keywords.reduce((sum, k) => sum + k.mentions, 0)\r\n      } catch (error) {\r\n        console.error('Failed to fetch keywords:', error)\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    async addKeyword(term: string, sites: string[]) {\r\n      if (!term.trim() || sites.length === 0) return\r\n\r\n      if (this.totalKeywords >= this.keywordLimit) {\r\n        throw new Error(`You've reached your keyword limit (${this.totalKeywords}/${this.keywordLimit}). Upgrade to Advanced tier to track up to 50 keywords.`)\r\n      }\r\n\r\n      try {\r\n        for (const source of sites) {\r\n          try {\r\n            const response = await axios.post<KeywordResponse>('/keywords/', {\r\n              term: term.trim(),\r\n              source,\r\n              is_active: true\r\n            })\r\n            \r\n            const newKeyword: Keyword = {\r\n              id: response.data.id,\r\n              term: response.data.term,\r\n              source: response.data.source,\r\n              status: 'active',\r\n              mentions: 0,\r\n              trend: 'stable'\r\n            }\r\n            this.keywords.push(newKeyword)\r\n            \r\n            await axios.post(`/keywords/${response.data.id}/trigger_scrape/`)\r\n            await new Promise(resolve => setTimeout(resolve, 300))\r\n          } catch (error) {\r\n            throw error\r\n          }\r\n        }\r\n        \r\n        this.newKeyword = ''\r\n        this.selectedSites = []\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n\r\n    async deleteKeyword(id: number) {\r\n      try {\r\n        await axios.delete(`/keywords/${id}/`)\r\n        this.keywords = this.keywords.filter(keyword => keyword.id !== id)\r\n      } catch (error) {\r\n        console.error('Failed to delete keyword:', error)\r\n      }\r\n    },\r\n\r\n    async toggleStatus(id: number) {\r\n      const keyword = this.keywords.find(k => k.id === id)\r\n      if (keyword) {\r\n        try {\r\n          await axios.patch(`/keywords/${id}/`, {\r\n            is_active: keyword.status === 'active' ? false : true\r\n          })\r\n          keyword.status = keyword.status === 'active' ? 'paused' : 'active'\r\n        } catch (error) {\r\n          console.error('Failed to toggle keyword status:', error)\r\n        }\r\n      }\r\n    },\r\n\r\n    async updateKeyword(id: number, term: string) {\r\n      const keyword = this.keywords.find(k => k.id === id)\r\n      if (keyword) {\r\n        try {\r\n          await axios.patch(`/keywords/${id}/`, { term })\r\n          keyword.term = term\r\n        } catch (error) {\r\n          console.error('Failed to update keyword:', error)\r\n        }\r\n      }\r\n      this.editingId = null\r\n    },\r\n\r\n    async initialize() {\r\n      const authStore = useAuthStore()\r\n      await authStore.fetchProfile()\r\n      await this.fetchKeywords()\r\n    }\r\n  }\r\n})\r\n"],"names":["useTracking","defineStore","state","k","useAuthStore","sortedKeywords","b","start","end","response","axios","sum","error","term","sites","source","newKeyword","resolve","id","keyword"],"mappings":"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"}